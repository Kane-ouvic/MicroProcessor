

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Dec 21 01:07:27 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Version 2.40
    36                           ; Generated 04/07/2022 GMT
    37                           ; 
    38                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4520 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     _RCREG	set	4014
    71   000000                     _TXREG	set	4013
    72   000000                     _SPBRG	set	4015
    73   000000                     _BAUDCONbits	set	4024
    74   000000                     _ADCON0bits	set	4034
    75   000000                     _ADRESL	set	4035
    76   000000                     _ADRESH	set	4036
    77   000000                     _ADCON2bits	set	4032
    78   000000                     _CREN	set	32092
    79   000000                     _RCIF	set	31989
    80   000000                     _IRCF0	set	32412
    81   000000                     _IRCF1	set	32413
    82   000000                     _LATD	set	3980
    83   000000                     _TRISA	set	3986
    84   000000                     _TRISCbits	set	3988
    85   000000                     _ADCON1	set	4033
    86   000000                     _ADFM	set	32263
    87   000000                     _RCONbits	set	4048
    88   000000                     _PIE1bits	set	3997
    89   000000                     _TRISD	set	3989
    90   000000                     _PIR1bits	set	3998
    91   000000                     _CCP1CON	set	4029
    92   000000                     _RCSTAbits	set	4011
    93   000000                     _TXSTAbits	set	4012
    94   000000                     _IPR1bits	set	3999
    95   000000                     _INTCONbits	set	4082
    96   000000                     _IRCF2	set	32414
    97                           
    98                           ; #config settings
    99                           
   100                           	psect	cinit
   101   00047A                     __pcinit:
   102                           	callstack 0
   103   00047A                     start_initialization:
   104                           	callstack 0
   105   00047A                     __initialization:
   106                           	callstack 0
   107                           
   108                           ; Clear objects allocated to COMRAM (42 bytes)
   109   00047A  EE00  F001         	lfsr	0,__pbssCOMRAM
   110   00047E  0E2A               	movlw	42
   111   000480                     clear_0:
   112   000480  6AEE               	clrf	postinc0,c
   113   000482  06E8               	decf	wreg,f,c
   114   000484  E1FD               	bnz	clear_0
   115   000486                     end_of_initialization:
   116                           	callstack 0
   117   000486                     __end_of__initialization:
   118                           	callstack 0
   119   000486  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   120   000488  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   121   00048A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   122   00048C  6EF8               	movwf	tblptru,c
   123   00048E  0100               	movlb	0
   124   000490  EF6B  F001         	goto	_main	;jump to C main() function
   125                           
   126                           	psect	bssCOMRAM
   127   000001                     __pbssCOMRAM:
   128                           	callstack 0
   129   000001                     _lenStr:
   130                           	callstack 0
   131   000001                     	ds	2
   132   000003                     _str:
   133                           	callstack 0
   134   000003                     	ds	20
   135   000017                     _mystring:
   136                           	callstack 0
   137   000017                     	ds	20
   138                           
   139                           	psect	cstackCOMRAM
   140   00002B                     __pcstackCOMRAM:
   141                           	callstack 0
   142   00002B                     ?___awmod:
   143                           	callstack 0
   144   00002B                     UART_Write@data:
   145                           	callstack 0
   146   00002B                     ___awmod@dividend:
   147                           	callstack 0
   148                           
   149                           ; 2 bytes @ 0x0
   150   00002B                     	ds	2
   151   00002D                     ___awmod@divisor:
   152                           	callstack 0
   153                           
   154                           ; 2 bytes @ 0x2
   155   00002D                     	ds	2
   156   00002F                     ___awmod@counter:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x4
   160   00002F                     	ds	1
   161   000030                     ___awmod@sign:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0x5
   165   000030                     	ds	1
   166   000031                     
   167                           ; 1 bytes @ 0x6
   168   000031                     	ds	1
   169   000032                     ??_Lo_ISR:
   170                           
   171                           ; 1 bytes @ 0x7
   172   000032                     	ds	5
   173   000037                     ?_GetString:
   174                           	callstack 0
   175   000037                     ?_isspace:
   176                           	callstack 0
   177   000037                     ?_isdigit:
   178                           	callstack 0
   179   000037                     ?_getstrLen:
   180                           	callstack 0
   181   000037                     ?___wmul:
   182                           	callstack 0
   183   000037                     ClearBuffer@i:
   184                           	callstack 0
   185   000037                     ___wmul@multiplier:
   186                           	callstack 0
   187   000037                     isdigit@c:
   188                           	callstack 0
   189   000037                     isspace@c:
   190                           	callstack 0
   191                           
   192                           ; 2 bytes @ 0xC
   193   000037                     	ds	2
   194   000039                     ??_isspace:
   195   000039                     ??_isdigit:
   196   000039                     ___wmul@multiplicand:
   197                           	callstack 0
   198   000039                     strcpy@dest:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0xE
   202   000039                     	ds	2
   203   00003B                     _isspace$1218:
   204                           	callstack 0
   205   00003B                     ___wmul@product:
   206                           	callstack 0
   207   00003B                     strcpy@src:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0x10
   211   00003B                     	ds	2
   212   00003D                     ?_atoi:
   213                           	callstack 0
   214   00003D                     atoi@s:
   215                           	callstack 0
   216   00003D                     strcpy@s:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x12
   220   00003D                     	ds	2
   221   00003F                     ??_atoi:
   222   00003F                     strcpy@d:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x14
   226   00003F                     	ds	3
   227   000042                     atoi@neg:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x17
   231   000042                     	ds	2
   232   000044                     atoi@n:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x19
   236   000044                     	ds	2
   237   000046                     
   238                           ; 1 bytes @ 0x1B
   239   000046                     	ds	1
   240   000047                     main@index:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x1C
   244   000047                     	ds	2
   245                           
   246 ;;
   247 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   248 ;;
   249 ;; *************** function _main *****************
   250 ;; Defined at:
   251 ;;		line 17 in file "main.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;		None
   254 ;; Auto vars:     Size  Location     Type
   255 ;;  index           2   28[COMRAM] int 
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   260 ;; Tracked objects:
   261 ;;		On entry : 0/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   265 ;;      Params:         0       0       0       0       0       0       0
   266 ;;      Locals:         2       0       0       0       0       0       0
   267 ;;      Temps:          1       0       0       0       0       0       0
   268 ;;      Totals:         3       0       0       0       0       0       0
   269 ;;Total ram usage:        3 bytes
   270 ;; Hardware stack levels required when called: 6
   271 ;; This function calls:
   272 ;;		_ClearBuffer
   273 ;;		_GetString
   274 ;;		_SYSTEM_Initialize
   275 ;;		_atoi
   276 ;;		_getstrLen
   277 ;;		_strcpy
   278 ;; This function is called by:
   279 ;;		Startup code after reset
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text0
   284   0002D6                     __ptext0:
   285                           	callstack 0
   286   0002D6                     _main:
   287                           	callstack 25
   288   0002D6                     
   289                           ;main.c: 20:     SYSTEM_Initialize() ;
   290   0002D6  EC4A  F002         	call	_SYSTEM_Initialize	;wreg free
   291   0002DA                     l1256:
   292                           
   293                           ;main.c: 23:         strcpy(str, GetString());
   294   0002DA  0E03               	movlw	low _str
   295   0002DC  6E39               	movwf	strcpy@dest^0,c
   296   0002DE  0E00               	movlw	high _str
   297   0002E0  6E3A               	movwf	(strcpy@dest+1)^0,c
   298   0002E2  EC76  F002         	call	_GetString	;wreg free
   299   0002E6  C037  F03B         	movff	?_GetString,strcpy@src
   300   0002EA  C038  F03C         	movff	?_GetString+1,strcpy@src+1
   301   0002EE  ECE0  F001         	call	_strcpy	;wreg free
   302   0002F2                     
   303                           ;main.c: 24:         index = getstrLen();
   304   0002F2  EC71  F002         	call	_getstrLen	;wreg free
   305   0002F6  C037  F047         	movff	?_getstrLen,main@index
   306   0002FA  C038  F048         	movff	?_getstrLen+1,main@index+1
   307   0002FE                     
   308                           ;main.c: 25:         if (str[index] == '\r')
   309   0002FE  0E03               	movlw	low _str
   310   000300  2447               	addwf	main@index^0,w,c
   311   000302  6ED9               	movwf	fsr2l,c
   312   000304  0E00               	movlw	high _str
   313   000306  2048               	addwfc	(main@index+1)^0,w,c
   314   000308  6EDA               	movwf	fsr2h,c
   315   00030A  0E0D               	movlw	13
   316   00030C  18DE               	xorwf	postinc2,w,c
   317   00030E  A4D8               	btfss	status,2,c
   318   000310  EF8C  F001         	goto	u421
   319   000314  EF8E  F001         	goto	u420
   320   000318                     u421:
   321   000318  EF6D  F001         	goto	l1256
   322   00031C                     u420:
   323   00031C                     
   324                           ;main.c: 26:         {;main.c: 27:             LATD = atoi(str);
   325   00031C  0E03               	movlw	low _str
   326   00031E  6E3D               	movwf	atoi@s^0,c
   327   000320  0E00               	movlw	high _str
   328   000322  6E3E               	movwf	(atoi@s+1)^0,c
   329   000324  EC38  F000         	call	_atoi	;wreg free
   330   000328  503D               	movf	?_atoi^0,w,c
   331   00032A  6E8C               	movwf	140,c	;volatile
   332   00032C                     
   333                           ;main.c: 28:             ClearBuffer();
   334   00032C  ECBF  F001         	call	_ClearBuffer	;wreg free
   335   000330  EF6D  F001         	goto	l1256
   336   000334  EF36  F000         	goto	start
   337   000338                     __end_of_main:
   338                           	callstack 0
   339                           
   340 ;; *************** function _strcpy *****************
   341 ;; Defined at:
   342 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;  dest            2   14[COMRAM] PTR unsigned char 
   345 ;;		 -> str(20), 
   346 ;;  src             2   16[COMRAM] PTR const unsigned char 
   347 ;;		 -> mystring(20), 
   348 ;; Auto vars:     Size  Location     Type
   349 ;;  d               2   20[COMRAM] PTR unsigned char 
   350 ;;		 -> str(20), 
   351 ;;  s               2   18[COMRAM] PTR const unsigned char 
   352 ;;		 -> mystring(20), 
   353 ;; Return value:  Size  Location     Type
   354 ;;                  2   14[COMRAM] PTR unsigned char 
   355 ;; Registers used:
   356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   362 ;;      Params:         4       0       0       0       0       0       0
   363 ;;      Locals:         4       0       0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0       0       0
   365 ;;      Totals:         8       0       0       0       0       0       0
   366 ;;Total ram usage:        8 bytes
   367 ;; Hardware stack levels used: 1
   368 ;; Hardware stack levels required when called: 4
   369 ;; This function calls:
   370 ;;		Nothing
   371 ;; This function is called by:
   372 ;;		_main
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text1
   377   0003C0                     __ptext1:
   378                           	callstack 0
   379   0003C0                     _strcpy:
   380                           	callstack 26
   381   0003C0  C03B  F03D         	movff	strcpy@src,strcpy@s
   382   0003C4  C03C  F03E         	movff	strcpy@src+1,strcpy@s+1
   383   0003C8  C039  F03F         	movff	strcpy@dest,strcpy@d
   384   0003CC  C03A  F040         	movff	strcpy@dest+1,strcpy@d+1
   385   0003D0                     l1208:
   386   0003D0  C03D  FFD9         	movff	strcpy@s,fsr2l
   387   0003D4  C03E  FFDA         	movff	strcpy@s+1,fsr2h
   388   0003D8  4A3D               	infsnz	strcpy@s^0,f,c
   389   0003DA  2A3E               	incf	(strcpy@s+1)^0,f,c
   390   0003DC  C03F  FFE1         	movff	strcpy@d,fsr1l
   391   0003E0  C040  FFE2         	movff	strcpy@d+1,fsr1h
   392   0003E4  4A3F               	infsnz	strcpy@d^0,f,c
   393   0003E6  2A40               	incf	(strcpy@d+1)^0,f,c
   394   0003E8  CFDF FFE7          	movff	indf2,indf1
   395   0003EC  50E7               	movf	indf1,w,c
   396   0003EE  A4D8               	btfss	status,2,c
   397   0003F0  EFFC  F001         	goto	u351
   398   0003F4  EFFE  F001         	goto	u350
   399   0003F8                     u351:
   400   0003F8  EFE8  F001         	goto	l1208
   401   0003FC                     u350:
   402   0003FC  0012               	return		;funcret
   403   0003FE                     __end_of_strcpy:
   404                           	callstack 0
   405                           
   406 ;; *************** function _getstrLen *****************
   407 ;; Defined at:
   408 ;;		line 71 in file "setting_hardaware/uart.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  2   12[COMRAM] int 
   415 ;; Registers used:
   416 ;;		None
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   422 ;;      Params:         2       0       0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0       0       0
   425 ;;      Totals:         2       0       0       0       0       0       0
   426 ;;Total ram usage:        2 bytes
   427 ;; Hardware stack levels used: 1
   428 ;; Hardware stack levels required when called: 4
   429 ;; This function calls:
   430 ;;		Nothing
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text2
   437   0004E2                     __ptext2:
   438                           	callstack 0
   439   0004E2                     _getstrLen:
   440                           	callstack 26
   441   0004E2                     
   442                           ;setting_hardaware/uart.c: 72:     return lenStr;
   443   0004E2  C001  F037         	movff	_lenStr,?_getstrLen
   444   0004E6  C002  F038         	movff	_lenStr+1,?_getstrLen+1
   445   0004EA  0012               	return		;funcret
   446   0004EC                     __end_of_getstrLen:
   447                           	callstack 0
   448                           
   449 ;; *************** function _atoi *****************
   450 ;; Defined at:
   451 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;  s               2   18[COMRAM] PTR const unsigned char 
   454 ;;		 -> str(20), 
   455 ;; Auto vars:     Size  Location     Type
   456 ;;  n               2   25[COMRAM] int 
   457 ;;  neg             2   23[COMRAM] int 
   458 ;; Return value:  Size  Location     Type
   459 ;;                  2   18[COMRAM] int 
   460 ;; Registers used:
   461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   467 ;;      Params:         2       0       0       0       0       0       0
   468 ;;      Locals:         4       0       0       0       0       0       0
   469 ;;      Temps:          3       0       0       0       0       0       0
   470 ;;      Totals:         9       0       0       0       0       0       0
   471 ;;Total ram usage:        9 bytes
   472 ;; Hardware stack levels used: 1
   473 ;; Hardware stack levels required when called: 5
   474 ;; This function calls:
   475 ;;		___wmul
   476 ;;		_isdigit
   477 ;;		_isspace
   478 ;; This function is called by:
   479 ;;		_main
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text3
   484   000070                     __ptext3:
   485                           	callstack 0
   486   000070                     _atoi:
   487                           	callstack 25
   488   000070  0E00               	movlw	0
   489   000072  6E45               	movwf	(atoi@n+1)^0,c
   490   000074  0E00               	movlw	0
   491   000076  6E44               	movwf	atoi@n^0,c
   492   000078  0E00               	movlw	0
   493   00007A  6E43               	movwf	(atoi@neg+1)^0,c
   494   00007C  0E00               	movlw	0
   495   00007E  6E42               	movwf	atoi@neg^0,c
   496   000080  EF44  F000         	goto	l1216
   497   000084                     l1212:
   498   000084  4A3D               	infsnz	atoi@s^0,f,c
   499   000086  2A3E               	incf	(atoi@s+1)^0,f,c
   500   000088                     l1216:
   501   000088  C03D  FFD9         	movff	atoi@s,fsr2l
   502   00008C  C03E  FFDA         	movff	atoi@s+1,fsr2h
   503   000090  0E20               	movlw	32
   504   000092  18DE               	xorwf	postinc2,w,c
   505   000094  B4D8               	btfsc	status,2,c
   506   000096  EF4F  F000         	goto	u361
   507   00009A  EF51  F000         	goto	u360
   508   00009E                     u361:
   509   00009E  EF42  F000         	goto	l1212
   510   0000A2                     u360:
   511   0000A2  C03D  FFD9         	movff	atoi@s,fsr2l
   512   0000A6  C03E  FFDA         	movff	atoi@s+1,fsr2h
   513   0000AA  50DF               	movf	indf2,w,c
   514   0000AC  6E3F               	movwf	??_atoi^0,c
   515   0000AE  0EF7               	movlw	247
   516   0000B0  243F               	addwf	??_atoi^0,w,c
   517   0000B2  6E40               	movwf	(??_atoi+1)^0,c
   518   0000B4  6A41               	clrf	(??_atoi+2)^0,c
   519   0000B6  0EFF               	movlw	255
   520   0000B8  2241               	addwfc	(??_atoi+2)^0,f,c
   521   0000BA  5041               	movf	(??_atoi+2)^0,w,c
   522   0000BC  E109               	bnz	u370
   523   0000BE  0E05               	movlw	5
   524   0000C0  5C40               	subwf	(??_atoi+1)^0,w,c
   525   0000C2  A0D8               	btfss	status,0,c
   526   0000C4  EF66  F000         	goto	u371
   527   0000C8  EF68  F000         	goto	u370
   528   0000CC                     u371:
   529   0000CC  EF42  F000         	goto	l1212
   530   0000D0                     u370:
   531   0000D0  EF72  F000         	goto	l1224
   532   0000D4                     l1220:
   533   0000D4  0E00               	movlw	0
   534   0000D6  6E43               	movwf	(atoi@neg+1)^0,c
   535   0000D8  0E01               	movlw	1
   536   0000DA  6E42               	movwf	atoi@neg^0,c
   537   0000DC                     l1222:
   538   0000DC  4A3D               	infsnz	atoi@s^0,f,c
   539   0000DE  2A3E               	incf	(atoi@s+1)^0,f,c
   540   0000E0  EFA7  F000         	goto	l1232
   541   0000E4                     l1224:
   542   0000E4  C03D  FFD9         	movff	atoi@s,fsr2l
   543   0000E8  C03E  FFDA         	movff	atoi@s+1,fsr2h
   544   0000EC  50DF               	movf	indf2,w,c
   545   0000EE  6E3F               	movwf	??_atoi^0,c
   546   0000F0  6A40               	clrf	(??_atoi+1)^0,c
   547                           
   548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   549                           ; Switch size 1, requested type "simple"
   550                           ; Number of cases is 1, Range of values is 0 to 0
   551                           ; switch strategies available:
   552                           ; Name         Instructions Cycles
   553                           ; simple_byte            4     3 (average)
   554                           ;	Chosen strategy is simple_byte
   555   0000F2  5040               	movf	(??_atoi+1)^0,w,c
   556   0000F4  0A00               	xorlw	0	; case 0
   557   0000F6  B4D8               	btfsc	status,2,c
   558   0000F8  EF80  F000         	goto	l1270
   559   0000FC  EFA7  F000         	goto	l1232
   560   000100                     l1270:
   561                           
   562                           ; Switch size 1, requested type "simple"
   563                           ; Number of cases is 2, Range of values is 43 to 45
   564                           ; switch strategies available:
   565                           ; Name         Instructions Cycles
   566                           ; simple_byte            7     4 (average)
   567                           ;	Chosen strategy is simple_byte
   568   000100  503F               	movf	??_atoi^0,w,c
   569   000102  0A2B               	xorlw	43	; case 43
   570   000104  B4D8               	btfsc	status,2,c
   571   000106  EF6E  F000         	goto	l1222
   572   00010A  0A06               	xorlw	6	; case 45
   573   00010C  B4D8               	btfsc	status,2,c
   574   00010E  EF6A  F000         	goto	l1220
   575   000112  EFA7  F000         	goto	l1232
   576   000116                     l1226:
   577   000116  C044  F037         	movff	atoi@n,___wmul@multiplier
   578   00011A  C045  F038         	movff	atoi@n+1,___wmul@multiplier+1
   579   00011E  0E00               	movlw	0
   580   000120  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
   581   000122  0E0A               	movlw	10
   582   000124  6E39               	movwf	___wmul@multiplicand^0,c
   583   000126  EC2A  F002         	call	___wmul	;wreg free
   584   00012A  C03D  FFD9         	movff	atoi@s,fsr2l
   585   00012E  C03E  FFDA         	movff	atoi@s+1,fsr2h
   586   000132  50DF               	movf	indf2,w,c
   587   000134  6E3F               	movwf	??_atoi^0,c
   588   000136  503F               	movf	??_atoi^0,w,c
   589   000138  5E37               	subwf	?___wmul^0,f,c
   590   00013A  0E00               	movlw	0
   591   00013C  5A38               	subwfb	(?___wmul+1)^0,f,c
   592   00013E  0E30               	movlw	48
   593   000140  2437               	addwf	?___wmul^0,w,c
   594   000142  6E44               	movwf	atoi@n^0,c
   595   000144  0E00               	movlw	0
   596   000146  2038               	addwfc	(?___wmul+1)^0,w,c
   597   000148  6E45               	movwf	(atoi@n+1)^0,c
   598   00014A  EF6E  F000         	goto	l1222
   599   00014E                     l1232:
   600   00014E  C03D  FFD9         	movff	atoi@s,fsr2l
   601   000152  C03E  FFDA         	movff	atoi@s+1,fsr2h
   602   000156  50DF               	movf	indf2,w,c
   603   000158  6E3F               	movwf	??_atoi^0,c
   604   00015A  0ED0               	movlw	208
   605   00015C  243F               	addwf	??_atoi^0,w,c
   606   00015E  6E40               	movwf	(??_atoi+1)^0,c
   607   000160  6A41               	clrf	(??_atoi+2)^0,c
   608   000162  0EFF               	movlw	255
   609   000164  2241               	addwfc	(??_atoi+2)^0,f,c
   610   000166  5041               	movf	(??_atoi+2)^0,w,c
   611   000168  E109               	bnz	u380
   612   00016A  0E0A               	movlw	10
   613   00016C  5C40               	subwf	(??_atoi+1)^0,w,c
   614   00016E  A0D8               	btfss	status,0,c
   615   000170  EFBC  F000         	goto	u381
   616   000174  EFBE  F000         	goto	u380
   617   000178                     u381:
   618   000178  EF8B  F000         	goto	l1226
   619   00017C                     u380:
   620   00017C  5042               	movf	atoi@neg^0,w,c
   621   00017E  1043               	iorwf	(atoi@neg+1)^0,w,c
   622   000180  A4D8               	btfss	status,2,c
   623   000182  EFC5  F000         	goto	u391
   624   000186  EFC7  F000         	goto	u390
   625   00018A                     u391:
   626   00018A  EFD5  F000         	goto	l867
   627   00018E                     u390:
   628   00018E  C044  F03F         	movff	atoi@n,??_atoi
   629   000192  C045  F040         	movff	atoi@n+1,??_atoi+1
   630   000196  1E3F               	comf	??_atoi^0,f,c
   631   000198  1E40               	comf	(??_atoi+1)^0,f,c
   632   00019A  4A3F               	infsnz	??_atoi^0,f,c
   633   00019C  2A40               	incf	(??_atoi+1)^0,f,c
   634   00019E  C03F  F03D         	movff	??_atoi,?_atoi
   635   0001A2  C040  F03E         	movff	??_atoi+1,?_atoi+1
   636   0001A6  EFD9  F000         	goto	l870
   637   0001AA                     l867:
   638   0001AA  C044  F03D         	movff	atoi@n,?_atoi
   639   0001AE  C045  F03E         	movff	atoi@n+1,?_atoi+1
   640   0001B2                     l870:
   641   0001B2  0012               	return		;funcret
   642   0001B4                     __end_of_atoi:
   643                           	callstack 0
   644                           
   645 ;; *************** function _isspace *****************
   646 ;; Defined at:
   647 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;  c               2   12[COMRAM] int 
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  2   12[COMRAM] int 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   661 ;;      Params:         2       0       0       0       0       0       0
   662 ;;      Locals:         1       0       0       0       0       0       0
   663 ;;      Temps:          2       0       0       0       0       0       0
   664 ;;      Totals:         5       0       0       0       0       0       0
   665 ;;Total ram usage:        5 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; Hardware stack levels required when called: 4
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_atoi
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text4
   676   000338                     __ptext4:
   677                           	callstack 0
   678   000338                     _isspace:
   679                           	callstack 25
   680   000338  0E01               	movlw	1
   681   00033A  6E3B               	movwf	_isspace$1218^0,c
   682   00033C  0E20               	movlw	32
   683   00033E  1837               	xorwf	isspace@c^0,w,c
   684   000340  1038               	iorwf	(isspace@c+1)^0,w,c
   685   000342  B4D8               	btfsc	status,2,c
   686   000344  EFA6  F001         	goto	u301
   687   000348  EFA8  F001         	goto	u300
   688   00034C                     u301:
   689   00034C  EFBB  F001         	goto	l1180
   690   000350                     u300:
   691   000350  0EF7               	movlw	247
   692   000352  2437               	addwf	isspace@c^0,w,c
   693   000354  6E39               	movwf	??_isspace^0,c
   694   000356  0EFF               	movlw	255
   695   000358  2038               	addwfc	(isspace@c+1)^0,w,c
   696   00035A  6E3A               	movwf	(??_isspace+1)^0,c
   697   00035C  503A               	movf	(??_isspace+1)^0,w,c
   698   00035E  E109               	bnz	u310
   699   000360  0E05               	movlw	5
   700   000362  5C39               	subwf	??_isspace^0,w,c
   701   000364  A0D8               	btfss	status,0,c
   702   000366  EFB7  F001         	goto	u311
   703   00036A  EFB9  F001         	goto	u310
   704   00036E                     u311:
   705   00036E  EFBB  F001         	goto	l1180
   706   000372                     u310:
   707   000372  0E00               	movlw	0
   708   000374  6E3B               	movwf	_isspace$1218^0,c
   709   000376                     l1180:
   710   000376  C03B  F037         	movff	_isspace$1218,?_isspace
   711   00037A  6A38               	clrf	(?_isspace+1)^0,c
   712   00037C  0012               	return		;funcret
   713   00037E                     __end_of_isspace:
   714                           	callstack 0
   715                           
   716 ;; *************** function _isdigit *****************
   717 ;; Defined at:
   718 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  c               2   12[COMRAM] int 
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  2   12[COMRAM] int 
   725 ;; Registers used:
   726 ;;		wreg, status,2, status,0
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   732 ;;      Params:         2       0       0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0       0       0
   734 ;;      Temps:          2       0       0       0       0       0       0
   735 ;;      Totals:         4       0       0       0       0       0       0
   736 ;;Total ram usage:        4 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; Hardware stack levels required when called: 4
   739 ;; This function calls:
   740 ;;		Nothing
   741 ;; This function is called by:
   742 ;;		_atoi
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text5
   747   0003FE                     __ptext5:
   748                           	callstack 0
   749   0003FE                     _isdigit:
   750                           	callstack 25
   751   0003FE  0ED0               	movlw	208
   752   000400  2437               	addwf	isdigit@c^0,w,c
   753   000402  6E39               	movwf	??_isdigit^0,c
   754   000404  0EFF               	movlw	255
   755   000406  2038               	addwfc	(isdigit@c+1)^0,w,c
   756   000408  6E3A               	movwf	(??_isdigit+1)^0,c
   757   00040A  503A               	movf	(??_isdigit+1)^0,w,c
   758   00040C  E10A               	bnz	u320
   759   00040E  0E0A               	movlw	10
   760   000410  5C39               	subwf	??_isdigit^0,w,c
   761   000412  A0D8               	btfss	status,0,c
   762   000414  EF0E  F002         	goto	u321
   763   000418  EF11  F002         	goto	u320
   764   00041C                     u321:
   765   00041C  0E01               	movlw	1
   766   00041E  EF12  F002         	goto	u330
   767   000422                     u320:
   768   000422  0E00               	movlw	0
   769   000424                     u330:
   770   000424  6E37               	movwf	?_isdigit^0,c
   771   000426  6A38               	clrf	(?_isdigit+1)^0,c
   772   000428  0012               	return		;funcret
   773   00042A                     __end_of_isdigit:
   774                           	callstack 0
   775                           
   776 ;; *************** function ___wmul *****************
   777 ;; Defined at:
   778 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  multiplier      2   12[COMRAM] unsigned int 
   781 ;;  multiplicand    2   14[COMRAM] unsigned int 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  product         2   16[COMRAM] unsigned int 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  2   12[COMRAM] unsigned int 
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0, prodl, prodh
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   793 ;;      Params:         4       0       0       0       0       0       0
   794 ;;      Locals:         2       0       0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0
   796 ;;      Totals:         6       0       0       0       0       0       0
   797 ;;Total ram usage:        6 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; Hardware stack levels required when called: 4
   800 ;; This function calls:
   801 ;;		Nothing
   802 ;; This function is called by:
   803 ;;		_atoi
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text6
   808   000454                     __ptext6:
   809                           	callstack 0
   810   000454                     ___wmul:
   811                           	callstack 25
   812   000454  5037               	movf	___wmul@multiplier^0,w,c
   813   000456  0239               	mulwf	___wmul@multiplicand^0,c
   814   000458  CFF3 F03B          	movff	prodl,___wmul@product
   815   00045C  CFF4 F03C          	movff	prodh,___wmul@product+1
   816   000460  5037               	movf	___wmul@multiplier^0,w,c
   817   000462  023A               	mulwf	(___wmul@multiplicand+1)^0,c
   818   000464  50F3               	movf	243,w,c
   819   000466  263C               	addwf	(___wmul@product+1)^0,f,c
   820   000468  5038               	movf	(___wmul@multiplier+1)^0,w,c
   821   00046A  0239               	mulwf	___wmul@multiplicand^0,c
   822   00046C  50F3               	movf	243,w,c
   823   00046E  263C               	addwf	(___wmul@product+1)^0,f,c
   824   000470  C03B  F037         	movff	___wmul@product,?___wmul
   825   000474  C03C  F038         	movff	___wmul@product+1,?___wmul+1
   826   000478  0012               	return		;funcret
   827   00047A                     __end_of___wmul:
   828                           	callstack 0
   829                           
   830 ;; *************** function _SYSTEM_Initialize *****************
   831 ;; Defined at:
   832 ;;		line 60 in file "setting_hardaware/setting.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;		None
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		wreg, status,2, cstack
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   846 ;;      Params:         0       0       0       0       0       0       0
   847 ;;      Locals:         0       0       0       0       0       0       0
   848 ;;      Temps:          0       0       0       0       0       0       0
   849 ;;      Totals:         0       0       0       0       0       0       0
   850 ;;Total ram usage:        0 bytes
   851 ;; Hardware stack levels used: 1
   852 ;; Hardware stack levels required when called: 5
   853 ;; This function calls:
   854 ;;		_ADC_Initialize
   855 ;;		_CCP1_Initialize
   856 ;;		_INTERRUPT_Initialize
   857 ;;		_OSCILLATOR_Initialize
   858 ;;		_UART_Initialize
   859 ;; This function is called by:
   860 ;;		_main
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text7
   865   000494                     __ptext7:
   866                           	callstack 0
   867   000494                     _SYSTEM_Initialize:
   868                           	callstack 25
   869   000494                     
   870                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
   871   000494  EC7B  F002         	call	_OSCILLATOR_Initialize	;wreg free
   872                           
   873                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
   874   000498  EC7F  F002         	call	_INTERRUPT_Initialize	;wreg free
   875   00049C                     
   876                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
   877   00049C  EC15  F002         	call	_UART_Initialize	;wreg free
   878   0004A0                     
   879                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
   880   0004A0  EC6B  F002         	call	_CCP1_Initialize	;wreg free
   881   0004A4                     
   882                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
   883   0004A4  EC55  F002         	call	_ADC_Initialize	;wreg free
   884   0004A8  0012               	return		;funcret
   885   0004AA                     __end_of_SYSTEM_Initialize:
   886                           	callstack 0
   887                           
   888 ;; *************** function _UART_Initialize *****************
   889 ;; Defined at:
   890 ;;		line 7 in file "setting_hardaware/uart.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   904 ;;      Params:         0       0       0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0
   907 ;;      Totals:         0       0       0       0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; Hardware stack levels required when called: 4
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		_SYSTEM_Initialize
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text8
   919   00042A                     __ptext8:
   920                           	callstack 0
   921   00042A                     _UART_Initialize:
   922                           	callstack 25
   923   00042A                     
   924                           ;setting_hardaware/uart.c: 9:     TRISD = 0x00;
   925   00042A  0E00               	movlw	0
   926   00042C  6E95               	movwf	149,c	;volatile
   927                           
   928                           ;setting_hardaware/uart.c: 10:     LATD = 0x00;
   929   00042E  0E00               	movlw	0
   930   000430  6E8C               	movwf	140,c	;volatile
   931   000432                     
   932                           ;setting_hardaware/uart.c: 12:     TRISCbits.TRISC6 = 1;
   933   000432  8C94               	bsf	148,6,c	;volatile
   934   000434                     
   935                           ;setting_hardaware/uart.c: 13:     TRISCbits.TRISC7 = 1;
   936   000434  8E94               	bsf	148,7,c	;volatile
   937   000436                     
   938                           ;setting_hardaware/uart.c: 16:     TXSTAbits.SYNC = 0;
   939   000436  98AC               	bcf	172,4,c	;volatile
   940   000438                     
   941                           ;setting_hardaware/uart.c: 17:     BAUDCONbits.BRG16 = 0;
   942   000438  96B8               	bcf	184,3,c	;volatile
   943   00043A                     
   944                           ;setting_hardaware/uart.c: 18:     TXSTAbits.BRGH = 0;
   945   00043A  94AC               	bcf	172,2,c	;volatile
   946                           
   947                           ;setting_hardaware/uart.c: 19:     SPBRG = 51;
   948   00043C  0E33               	movlw	51
   949   00043E  6EAF               	movwf	175,c	;volatile
   950   000440                     
   951                           ;setting_hardaware/uart.c: 22:     RCSTAbits.SPEN = 1;
   952   000440  8EAB               	bsf	171,7,c	;volatile
   953   000442                     
   954                           ;setting_hardaware/uart.c: 23:     PIR1bits.TXIF = 1;
   955   000442  889E               	bsf	158,4,c	;volatile
   956   000444                     
   957                           ;setting_hardaware/uart.c: 24:     PIR1bits.RCIF = 0;
   958   000444  9A9E               	bcf	158,5,c	;volatile
   959   000446                     
   960                           ;setting_hardaware/uart.c: 25:     TXSTAbits.TXEN = 1;
   961   000446  8AAC               	bsf	172,5,c	;volatile
   962   000448                     
   963                           ;setting_hardaware/uart.c: 26:     RCSTAbits.CREN = 1;
   964   000448  88AB               	bsf	171,4,c	;volatile
   965   00044A                     
   966                           ;setting_hardaware/uart.c: 27:     PIE1bits.TXIE = 0;
   967   00044A  989D               	bcf	157,4,c	;volatile
   968   00044C                     
   969                           ;setting_hardaware/uart.c: 28:     IPR1bits.TXIP = 0;
   970   00044C  989F               	bcf	159,4,c	;volatile
   971   00044E                     
   972                           ;setting_hardaware/uart.c: 29:     PIE1bits.RCIE = 1;
   973   00044E  8A9D               	bsf	157,5,c	;volatile
   974   000450                     
   975                           ;setting_hardaware/uart.c: 30:     IPR1bits.RCIP = 0;
   976   000450  9A9F               	bcf	159,5,c	;volatile
   977   000452  0012               	return		;funcret
   978   000454                     __end_of_UART_Initialize:
   979                           	callstack 0
   980                           
   981 ;; *************** function _OSCILLATOR_Initialize *****************
   982 ;; Defined at:
   983 ;;		line 73 in file "setting_hardaware/setting.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		None
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   997 ;;      Params:         0       0       0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0
  1000 ;;      Totals:         0       0       0       0       0       0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 4
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_SYSTEM_Initialize
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text9
  1012   0004F6                     __ptext9:
  1013                           	callstack 0
  1014   0004F6                     _OSCILLATOR_Initialize:
  1015                           	callstack 25
  1016   0004F6                     
  1017                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
  1018   0004F6  8CD3               	bsf	4051,6,c	;volatile
  1019                           
  1020                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
  1021   0004F8  8AD3               	bsf	4051,5,c	;volatile
  1022                           
  1023                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
  1024   0004FA  98D3               	bcf	4051,4,c	;volatile
  1025   0004FC  0012               	return		;funcret
  1026   0004FE                     __end_of_OSCILLATOR_Initialize:
  1027                           	callstack 0
  1028                           
  1029 ;; *************** function _INTERRUPT_Initialize *****************
  1030 ;; Defined at:
  1031 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		None
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1045 ;;      Params:         0       0       0       0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0
  1048 ;;      Totals:         0       0       0       0       0       0       0
  1049 ;;Total ram usage:        0 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 4
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_SYSTEM_Initialize
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text10
  1060   0004FE                     __ptext10:
  1061                           	callstack 0
  1062   0004FE                     _INTERRUPT_Initialize:
  1063                           	callstack 25
  1064   0004FE                     
  1065                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  1066   0004FE  8ED0               	bsf	208,7,c	;volatile
  1067                           
  1068                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  1069   000500  8EF2               	bsf	242,7,c	;volatile
  1070                           
  1071                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  1072   000502  8CF2               	bsf	242,6,c	;volatile
  1073   000504  0012               	return		;funcret
  1074   000506                     __end_of_INTERRUPT_Initialize:
  1075                           	callstack 0
  1076                           
  1077 ;; *************** function _CCP1_Initialize *****************
  1078 ;; Defined at:
  1079 ;;		line 3 in file "setting_hardaware/ccp1.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1093 ;;      Params:         0       0       0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0
  1096 ;;      Totals:         0       0       0       0       0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 4
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_SYSTEM_Initialize
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text11
  1108   0004D6                     __ptext11:
  1109                           	callstack 0
  1110   0004D6                     _CCP1_Initialize:
  1111                           	callstack 25
  1112   0004D6                     
  1113                           ;setting_hardaware/ccp1.c: 4:     TRISCbits.TRISC2=0;
  1114   0004D6  9494               	bcf	148,2,c	;volatile
  1115   0004D8                     
  1116                           ;setting_hardaware/ccp1.c: 5:     CCP1CON=9;
  1117   0004D8  0E09               	movlw	9
  1118   0004DA  6EBD               	movwf	189,c	;volatile
  1119   0004DC                     
  1120                           ;setting_hardaware/ccp1.c: 6:     PIR1bits.CCP1IF=0;
  1121   0004DC  949E               	bcf	158,2,c	;volatile
  1122   0004DE                     
  1123                           ;setting_hardaware/ccp1.c: 7:     IPR1bits.CCP1IP = 1;
  1124   0004DE  849F               	bsf	159,2,c	;volatile
  1125   0004E0  0012               	return		;funcret
  1126   0004E2                     __end_of_CCP1_Initialize:
  1127                           	callstack 0
  1128                           
  1129 ;; *************** function _ADC_Initialize *****************
  1130 ;; Defined at:
  1131 ;;		line 3 in file "setting_hardaware/adc.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1145 ;;      Params:         0       0       0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0       0       0
  1148 ;;      Totals:         0       0       0       0       0       0       0
  1149 ;;Total ram usage:        0 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 4
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_SYSTEM_Initialize
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text12
  1160   0004AA                     __ptext12:
  1161                           	callstack 0
  1162   0004AA                     _ADC_Initialize:
  1163                           	callstack 25
  1164   0004AA                     
  1165                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
  1166   0004AA  6892               	setf	146,c	;volatile
  1167   0004AC                     
  1168                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
  1169   0004AC  0E0E               	movlw	14
  1170   0004AE  6EC1               	movwf	193,c	;volatile
  1171   0004B0                     
  1172                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
  1173   0004B0  8EC0               	bsf	4032,7,c	;volatile
  1174                           
  1175                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
  1176   0004B2  0E07               	movlw	7
  1177   0004B4  12C0               	iorwf	192,f,c	;volatile
  1178                           
  1179                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
  1180   0004B6  0E00               	movlw	0
  1181   0004B8  6EC4               	movwf	196,c	;volatile
  1182                           
  1183                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
  1184   0004BA  0E00               	movlw	0
  1185   0004BC  6EC3               	movwf	195,c	;volatile
  1186   0004BE  0012               	return		;funcret
  1187   0004C0                     __end_of_ADC_Initialize:
  1188                           	callstack 0
  1189                           
  1190 ;; *************** function _GetString *****************
  1191 ;; Defined at:
  1192 ;;		line 67 in file "setting_hardaware/uart.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  2   12[COMRAM] PTR unsigned char 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1206 ;;      Params:         2       0       0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0
  1209 ;;      Totals:         2       0       0       0       0       0       0
  1210 ;;Total ram usage:        2 bytes
  1211 ;; Hardware stack levels used: 1
  1212 ;; Hardware stack levels required when called: 4
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text13
  1221   0004EC                     __ptext13:
  1222                           	callstack 0
  1223   0004EC                     _GetString:
  1224                           	callstack 26
  1225   0004EC                     
  1226                           ;setting_hardaware/uart.c: 68:     return mystring;
  1227   0004EC  0E17               	movlw	low _mystring
  1228   0004EE  6E37               	movwf	?_GetString^0,c
  1229   0004F0  0E00               	movlw	high _mystring
  1230   0004F2  6E38               	movwf	(?_GetString+1)^0,c
  1231   0004F4  0012               	return		;funcret
  1232   0004F6                     __end_of_GetString:
  1233                           	callstack 0
  1234                           
  1235 ;; *************** function _ClearBuffer *****************
  1236 ;; Defined at:
  1237 ;;		line 45 in file "setting_hardaware/uart.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  i               2   12[COMRAM] int 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1251 ;;      Params:         0       0       0       0       0       0       0
  1252 ;;      Locals:         2       0       0       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0       0       0
  1254 ;;      Totals:         2       0       0       0       0       0       0
  1255 ;;Total ram usage:        2 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 4
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;;		_printLine
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text14
  1267   00037E                     __ptext14:
  1268                           	callstack 0
  1269   00037E                     _ClearBuffer:
  1270                           	callstack 26
  1271   00037E                     
  1272                           ;setting_hardaware/uart.c: 46:     for(int i = 0; i < 10 ; i++)
  1273   00037E  0E00               	movlw	0
  1274   000380  6E38               	movwf	(ClearBuffer@i+1)^0,c
  1275   000382  0E00               	movlw	0
  1276   000384  6E37               	movwf	ClearBuffer@i^0,c
  1277   000386                     l1016:
  1278                           
  1279                           ;setting_hardaware/uart.c: 47:         mystring[i] = '\0';
  1280   000386  0E17               	movlw	low _mystring
  1281   000388  2437               	addwf	ClearBuffer@i^0,w,c
  1282   00038A  6ED9               	movwf	fsr2l,c
  1283   00038C  0E00               	movlw	high _mystring
  1284   00038E  2038               	addwfc	(ClearBuffer@i+1)^0,w,c
  1285   000390  6EDA               	movwf	fsr2h,c
  1286   000392  0E00               	movlw	0
  1287   000394  6EDF               	movwf	indf2,c
  1288   000396  4A37               	infsnz	ClearBuffer@i^0,f,c
  1289   000398  2A38               	incf	(ClearBuffer@i+1)^0,f,c
  1290   00039A  BE38               	btfsc	(ClearBuffer@i+1)^0,7,c
  1291   00039C  EFD9  F001         	goto	u121
  1292   0003A0  5038               	movf	(ClearBuffer@i+1)^0,w,c
  1293   0003A2  E109               	bnz	u120
  1294   0003A4  0E0A               	movlw	10
  1295   0003A6  5C37               	subwf	ClearBuffer@i^0,w,c
  1296   0003A8  A0D8               	btfss	status,0,c
  1297   0003AA  EFD9  F001         	goto	u121
  1298   0003AE  EFDB  F001         	goto	u120
  1299   0003B2                     u121:
  1300   0003B2  EFC3  F001         	goto	l1016
  1301   0003B6                     u120:
  1302   0003B6                     
  1303                           ;setting_hardaware/uart.c: 48:     lenStr = 0;
  1304   0003B6  0E00               	movlw	0
  1305   0003B8  6E02               	movwf	(_lenStr+1)^0,c
  1306   0003BA  0E00               	movlw	0
  1307   0003BC  6E01               	movwf	_lenStr^0,c
  1308   0003BE  0012               	return		;funcret
  1309   0003C0                     __end_of_ClearBuffer:
  1310                           	callstack 0
  1311                           
  1312 ;; *************** function _Lo_ISR *****************
  1313 ;; Defined at:
  1314 ;;		line 77 in file "setting_hardaware/uart.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1328 ;;      Params:         0       0       0       0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0
  1330 ;;      Temps:          5       0       0       0       0       0       0
  1331 ;;      Totals:         5       0       0       0       0       0       0
  1332 ;;Total ram usage:        5 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; Hardware stack levels required when called: 3
  1335 ;; This function calls:
  1336 ;;		_MyusartRead
  1337 ;; This function is called by:
  1338 ;;		Interrupt level 1
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	intcodelo
  1343   000018                     __pintcodelo:
  1344                           	callstack 0
  1345   000018                     _Lo_ISR:
  1346                           	callstack 25
  1347                           
  1348                           ;incstack = 0
  1349   000018  8049               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1350   00001A  CFD8 F032          	movff	status,??_Lo_ISR
  1351   00001E  CFE8 F033          	movff	wreg,??_Lo_ISR+1
  1352   000022  CFE0 F034          	movff	bsr,??_Lo_ISR+2
  1353   000026  CFD9 F035          	movff	fsr2l,??_Lo_ISR+3
  1354   00002A  CFDA F036          	movff	fsr2h,??_Lo_ISR+4
  1355   00002E                     
  1356                           ;setting_hardaware/uart.c: 79:     if(RCIF)
  1357   00002E  AA9E               	btfss	3998,5,c	;volatile
  1358   000030  EF1C  F000         	goto	i1u40_21
  1359   000034  EF1E  F000         	goto	i1u40_20
  1360   000038                     i1u40_21:
  1361   000038  EF2A  F000         	goto	i1l135
  1362   00003C                     i1u40_20:
  1363   00003C                     
  1364                           ;setting_hardaware/uart.c: 80:     {;setting_hardaware/uart.c: 81:         if(RCSTAbits.
      +                          OERR)
  1365   00003C  A2AB               	btfss	171,1,c	;volatile
  1366   00003E  EF23  F000         	goto	i1u41_21
  1367   000042  EF25  F000         	goto	i1u41_20
  1368   000046                     i1u41_21:
  1369   000046  EF28  F000         	goto	i1l1248
  1370   00004A                     i1u41_20:
  1371   00004A                     
  1372                           ;setting_hardaware/uart.c: 82:         {;setting_hardaware/uart.c: 83:             CREN 
      +                          = 0;
  1373   00004A  98AB               	bcf	4011,4,c	;volatile
  1374                           
  1375                           ;setting_hardaware/uart.c: 84:             __nop();
  1376   00004C  F000               	nop	
  1377                           
  1378                           ;setting_hardaware/uart.c: 85:             CREN = 1;
  1379   00004E  88AB               	bsf	4011,4,c	;volatile
  1380   000050                     i1l1248:
  1381                           
  1382                           ;setting_hardaware/uart.c: 88:         MyusartRead();
  1383   000050  EC32  F001         	call	_MyusartRead	;wreg free
  1384   000054                     i1l135:
  1385   000054  C036  FFDA         	movff	??_Lo_ISR+4,fsr2h
  1386   000058  C035  FFD9         	movff	??_Lo_ISR+3,fsr2l
  1387   00005C  C034  FFE0         	movff	??_Lo_ISR+2,bsr
  1388   000060  C033  FFE8         	movff	??_Lo_ISR+1,wreg
  1389   000064  C032  FFD8         	movff	??_Lo_ISR,status
  1390   000068  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1391   00006A  0010               	retfie	
  1392   00006C                     __end_of_Lo_ISR:
  1393                           	callstack 0
  1394                           
  1395 ;; *************** function _MyusartRead *****************
  1396 ;; Defined at:
  1397 ;;		line 51 in file "setting_hardaware/uart.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1411 ;;      Params:         0       0       0       0       0       0       0
  1412 ;;      Locals:         0       0       0       0       0       0       0
  1413 ;;      Temps:          1       0       0       0       0       0       0
  1414 ;;      Totals:         1       0       0       0       0       0       0
  1415 ;;Total ram usage:        1 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 2
  1418 ;; This function calls:
  1419 ;;		_UART_Write
  1420 ;;		___awmod
  1421 ;; This function is called by:
  1422 ;;		_Lo_ISR
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text16
  1427   000264                     __ptext16:
  1428                           	callstack 0
  1429   000264                     _MyusartRead:
  1430                           	callstack 25
  1431   000264                     
  1432                           ;setting_hardaware/uart.c: 54:     mystring[lenStr] = RCREG;
  1433   000264  0E17               	movlw	low _mystring
  1434   000266  2401               	addwf	_lenStr^0,w,c
  1435   000268  6ED9               	movwf	fsr2l,c
  1436   00026A  0E00               	movlw	high _mystring
  1437   00026C  2002               	addwfc	(_lenStr+1)^0,w,c
  1438   00026E  6EDA               	movwf	fsr2h,c
  1439   000270  CFAE FFDF          	movff	4014,indf2	;volatile
  1440                           
  1441                           ;setting_hardaware/uart.c: 55:     if(mystring[lenStr] == '\r'){
  1442   000274  0E17               	movlw	low _mystring
  1443   000276  2401               	addwf	_lenStr^0,w,c
  1444   000278  6ED9               	movwf	fsr2l,c
  1445   00027A  0E00               	movlw	high _mystring
  1446   00027C  2002               	addwfc	(_lenStr+1)^0,w,c
  1447   00027E  6EDA               	movwf	fsr2h,c
  1448   000280  0E0D               	movlw	13
  1449   000282  18DE               	xorwf	postinc2,w,c
  1450   000284  A4D8               	btfss	status,2,c
  1451   000286  EF47  F001         	goto	i1u34_21
  1452   00028A  EF49  F001         	goto	i1u34_20
  1453   00028E                     i1u34_21:
  1454   00028E  EF51  F001         	goto	i1l1192
  1455   000292                     i1u34_20:
  1456   000292                     
  1457                           ;setting_hardaware/uart.c: 56:         UART_Write('\n');
  1458   000292  0E0A               	movlw	10
  1459   000294  EC60  F002         	call	_UART_Write
  1460                           
  1461                           ;setting_hardaware/uart.c: 57:         UART_Write('\r');
  1462   000298  0E0D               	movlw	13
  1463   00029A  EC60  F002         	call	_UART_Write
  1464                           
  1465                           ;setting_hardaware/uart.c: 58:     } else {
  1466   00029E  EF6A  F001         	goto	i1l122
  1467   0002A2                     i1l1192:
  1468                           
  1469                           ;setting_hardaware/uart.c: 59:         UART_Write(mystring[lenStr]);
  1470   0002A2  0E17               	movlw	low _mystring
  1471   0002A4  2401               	addwf	_lenStr^0,w,c
  1472   0002A6  6ED9               	movwf	fsr2l,c
  1473   0002A8  0E00               	movlw	high _mystring
  1474   0002AA  2002               	addwfc	(_lenStr+1)^0,w,c
  1475   0002AC  6EDA               	movwf	fsr2h,c
  1476   0002AE  50DF               	movf	indf2,w,c
  1477   0002B0  EC60  F002         	call	_UART_Write
  1478   0002B4                     
  1479                           ;setting_hardaware/uart.c: 60:         lenStr++;
  1480   0002B4  4A01               	infsnz	_lenStr^0,f,c
  1481   0002B6  2A02               	incf	(_lenStr+1)^0,f,c
  1482   0002B8                     
  1483                           ;setting_hardaware/uart.c: 61:         lenStr %= 20;
  1484   0002B8  C001  F02B         	movff	_lenStr,___awmod@dividend
  1485   0002BC  C002  F02C         	movff	_lenStr+1,___awmod@dividend+1
  1486   0002C0  0E00               	movlw	0
  1487   0002C2  6E2E               	movwf	(___awmod@divisor+1)^0,c
  1488   0002C4  0E14               	movlw	20
  1489   0002C6  6E2D               	movwf	___awmod@divisor^0,c
  1490   0002C8  ECDA  F000         	call	___awmod	;wreg free
  1491   0002CC  C02B  F001         	movff	?___awmod,_lenStr
  1492   0002D0  C02C  F002         	movff	?___awmod+1,_lenStr+1
  1493   0002D4                     i1l122:
  1494   0002D4  0012               	return		;funcret
  1495   0002D6                     __end_of_MyusartRead:
  1496                           	callstack 0
  1497                           
  1498 ;; *************** function ___awmod *****************
  1499 ;; Defined at:
  1500 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  dividend        2    0[COMRAM] int 
  1503 ;;  divisor         2    2[COMRAM] int 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  sign            1    5[COMRAM] unsigned char 
  1506 ;;  counter         1    4[COMRAM] unsigned char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  2    0[COMRAM] int 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2, status,0
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1516 ;;      Params:         4       0       0       0       0       0       0
  1517 ;;      Locals:         2       0       0       0       0       0       0
  1518 ;;      Temps:          0       0       0       0       0       0       0
  1519 ;;      Totals:         6       0       0       0       0       0       0
  1520 ;;Total ram usage:        6 bytes
  1521 ;; Hardware stack levels used: 1
  1522 ;; Hardware stack levels required when called: 1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_MyusartRead
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text17
  1531   0001B4                     __ptext17:
  1532                           	callstack 0
  1533   0001B4                     ___awmod:
  1534                           	callstack 25
  1535   0001B4  0E00               	movlw	0
  1536   0001B6  6E30               	movwf	___awmod@sign^0,c
  1537   0001B8  BE2C               	btfsc	(___awmod@dividend+1)^0,7,c
  1538   0001BA  EFE3  F000         	goto	i1u24_20
  1539   0001BE  EFE1  F000         	goto	i1u24_21
  1540   0001C2                     i1u24_21:
  1541   0001C2  EFE9  F000         	goto	i1l1144
  1542   0001C6                     i1u24_20:
  1543   0001C6  6C2B               	negf	___awmod@dividend^0,c
  1544   0001C8  1E2C               	comf	(___awmod@dividend+1)^0,f,c
  1545   0001CA  B0D8               	btfsc	status,0,c
  1546   0001CC  2A2C               	incf	(___awmod@dividend+1)^0,f,c
  1547   0001CE  0E01               	movlw	1
  1548   0001D0  6E30               	movwf	___awmod@sign^0,c
  1549   0001D2                     i1l1144:
  1550   0001D2  BE2E               	btfsc	(___awmod@divisor+1)^0,7,c
  1551   0001D4  EFF0  F000         	goto	i1u25_20
  1552   0001D8  EFEE  F000         	goto	i1u25_21
  1553   0001DC                     i1u25_21:
  1554   0001DC  EFF4  F000         	goto	i1l1148
  1555   0001E0                     i1u25_20:
  1556   0001E0  6C2D               	negf	___awmod@divisor^0,c
  1557   0001E2  1E2E               	comf	(___awmod@divisor+1)^0,f,c
  1558   0001E4  B0D8               	btfsc	status,0,c
  1559   0001E6  2A2E               	incf	(___awmod@divisor+1)^0,f,c
  1560   0001E8                     i1l1148:
  1561   0001E8  502D               	movf	___awmod@divisor^0,w,c
  1562   0001EA  102E               	iorwf	(___awmod@divisor+1)^0,w,c
  1563   0001EC  B4D8               	btfsc	status,2,c
  1564   0001EE  EFFB  F000         	goto	i1u26_21
  1565   0001F2  EFFD  F000         	goto	i1u26_20
  1566   0001F6                     i1u26_21:
  1567   0001F6  EF21  F001         	goto	i1l1164
  1568   0001FA                     i1u26_20:
  1569   0001FA  0E01               	movlw	1
  1570   0001FC  6E2F               	movwf	___awmod@counter^0,c
  1571   0001FE  EF05  F001         	goto	i1l1154
  1572   000202                     i1l1152:
  1573   000202  90D8               	bcf	status,0,c
  1574   000204  362D               	rlcf	___awmod@divisor^0,f,c
  1575   000206  362E               	rlcf	(___awmod@divisor+1)^0,f,c
  1576   000208  2A2F               	incf	___awmod@counter^0,f,c
  1577   00020A                     i1l1154:
  1578   00020A  AE2E               	btfss	(___awmod@divisor+1)^0,7,c
  1579   00020C  EF0A  F001         	goto	i1u27_21
  1580   000210  EF0C  F001         	goto	i1u27_20
  1581   000214                     i1u27_21:
  1582   000214  EF01  F001         	goto	i1l1152
  1583   000218                     i1u27_20:
  1584   000218                     i1l1156:
  1585   000218  502D               	movf	___awmod@divisor^0,w,c
  1586   00021A  5C2B               	subwf	___awmod@dividend^0,w,c
  1587   00021C  502E               	movf	(___awmod@divisor+1)^0,w,c
  1588   00021E  582C               	subwfb	(___awmod@dividend+1)^0,w,c
  1589   000220  A0D8               	btfss	status,0,c
  1590   000222  EF15  F001         	goto	i1u28_21
  1591   000226  EF17  F001         	goto	i1u28_20
  1592   00022A                     i1u28_21:
  1593   00022A  EF1B  F001         	goto	i1l1160
  1594   00022E                     i1u28_20:
  1595   00022E  502D               	movf	___awmod@divisor^0,w,c
  1596   000230  5E2B               	subwf	___awmod@dividend^0,f,c
  1597   000232  502E               	movf	(___awmod@divisor+1)^0,w,c
  1598   000234  5A2C               	subwfb	(___awmod@dividend+1)^0,f,c
  1599   000236                     i1l1160:
  1600   000236  90D8               	bcf	status,0,c
  1601   000238  322E               	rrcf	(___awmod@divisor+1)^0,f,c
  1602   00023A  322D               	rrcf	___awmod@divisor^0,f,c
  1603   00023C  2E2F               	decfsz	___awmod@counter^0,f,c
  1604   00023E  EF0C  F001         	goto	i1l1156
  1605   000242                     i1l1164:
  1606   000242  5030               	movf	___awmod@sign^0,w,c
  1607   000244  B4D8               	btfsc	status,2,c
  1608   000246  EF27  F001         	goto	i1u29_21
  1609   00024A  EF29  F001         	goto	i1u29_20
  1610   00024E                     i1u29_21:
  1611   00024E  EF2D  F001         	goto	i1l1168
  1612   000252                     i1u29_20:
  1613   000252  6C2B               	negf	___awmod@dividend^0,c
  1614   000254  1E2C               	comf	(___awmod@dividend+1)^0,f,c
  1615   000256  B0D8               	btfsc	status,0,c
  1616   000258  2A2C               	incf	(___awmod@dividend+1)^0,f,c
  1617   00025A                     i1l1168:
  1618   00025A  C02B  F02B         	movff	___awmod@dividend,?___awmod
  1619   00025E  C02C  F02C         	movff	___awmod@dividend+1,?___awmod+1
  1620   000262  0012               	return		;funcret
  1621   000264                     __end_of___awmod:
  1622                           	callstack 0
  1623                           
  1624 ;; *************** function _UART_Write *****************
  1625 ;; Defined at:
  1626 ;;		line 33 in file "setting_hardaware/uart.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  data            1    wreg     unsigned char 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  data            1    0[COMRAM] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1640 ;;      Params:         0       0       0       0       0       0       0
  1641 ;;      Locals:         1       0       0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0
  1643 ;;      Totals:         1       0       0       0       0       0       0
  1644 ;;Total ram usage:        1 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; Hardware stack levels required when called: 1
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_MyusartRead
  1651 ;;		_UART_Write_Text
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text18
  1656   0004C0                     __ptext18:
  1657                           	callstack 0
  1658   0004C0                     _UART_Write:
  1659                           	callstack 25
  1660                           
  1661                           ;incstack = 0
  1662                           ;UART_Write@data stored from wreg
  1663   0004C0  6E2B               	movwf	UART_Write@data^0,c
  1664   0004C2                     i1l103:
  1665   0004C2  A2AC               	btfss	172,1,c	;volatile
  1666   0004C4  EF66  F002         	goto	i1u1_21
  1667   0004C8  EF68  F002         	goto	i1u1_20
  1668   0004CC                     i1u1_21:
  1669   0004CC  EF61  F002         	goto	i1l103
  1670   0004D0                     i1u1_20:
  1671   0004D0                     
  1672                           ;setting_hardaware/uart.c: 36:     TXREG = data;
  1673   0004D0  C02B  FFAD         	movff	UART_Write@data,4013	;volatile
  1674   0004D4  0012               	return		;funcret
  1675   0004D6                     __end_of_UART_Write:
  1676                           	callstack 0
  1677                           
  1678 ;; *************** function _Hi_ISR *****************
  1679 ;; Defined at:
  1680 ;;		line 34 in file "main.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		None
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1694 ;;      Params:         0       0       0       0       0       0       0
  1695 ;;      Locals:         0       0       0       0       0       0       0
  1696 ;;      Temps:          0       0       0       0       0       0       0
  1697 ;;      Totals:         0       0       0       0       0       0       0
  1698 ;;Total ram usage:        0 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		Interrupt level 2
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	intcode
  1708   000008                     __pintcode:
  1709                           	callstack 0
  1710   000008                     _Hi_ISR:
  1711                           	callstack 25
  1712                           
  1713                           ;incstack = 0
  1714   000008  8249               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1715   00000A  ED83  F002         	call	int_func,f	;refresh shadow registers
  1716                           
  1717                           	psect	intcode_body
  1718   000506                     __pintcode_body:
  1719                           	callstack 25
  1720   000506                     int_func:
  1721                           	callstack 25
  1722   000506  0006               	pop		; remove dummy address from shadow register refresh
  1723   000508  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1724   00050A  0011               	retfie		f
  1725   00050C                     __end_of_Hi_ISR:
  1726                           	callstack 0
  1727   000000                     
  1728                           	psect	rparam
  1729   000000                     
  1730                           	psect	temp
  1731   000049                     btemp:
  1732                           	callstack 0
  1733   000049                     	ds	1
  1734   000000                     int$flags	set	btemp
  1735   000000                     wtemp8	set	btemp+1
  1736   000000                     ttemp5	set	btemp+1
  1737   000000                     ttemp6	set	btemp+4
  1738   000000                     ttemp7	set	btemp+8
  1739                           
  1740                           	psect	idloc
  1741                           
  1742                           ;Config register IDLOC0 @ 0x200000
  1743                           ;	unspecified, using default values
  1744   200000                     	org	2097152
  1745   200000  FF                 	db	255
  1746                           
  1747                           ;Config register IDLOC1 @ 0x200001
  1748                           ;	unspecified, using default values
  1749   200001                     	org	2097153
  1750   200001  FF                 	db	255
  1751                           
  1752                           ;Config register IDLOC2 @ 0x200002
  1753                           ;	unspecified, using default values
  1754   200002                     	org	2097154
  1755   200002  FF                 	db	255
  1756                           
  1757                           ;Config register IDLOC3 @ 0x200003
  1758                           ;	unspecified, using default values
  1759   200003                     	org	2097155
  1760   200003  FF                 	db	255
  1761                           
  1762                           ;Config register IDLOC4 @ 0x200004
  1763                           ;	unspecified, using default values
  1764   200004                     	org	2097156
  1765   200004  FF                 	db	255
  1766                           
  1767                           ;Config register IDLOC5 @ 0x200005
  1768                           ;	unspecified, using default values
  1769   200005                     	org	2097157
  1770   200005  FF                 	db	255
  1771                           
  1772                           ;Config register IDLOC6 @ 0x200006
  1773                           ;	unspecified, using default values
  1774   200006                     	org	2097158
  1775   200006  FF                 	db	255
  1776                           
  1777                           ;Config register IDLOC7 @ 0x200007
  1778                           ;	unspecified, using default values
  1779   200007                     	org	2097159
  1780   200007  FF                 	db	255
  1781                           
  1782                           	psect	config
  1783                           
  1784                           ; Padding undefined space
  1785   300000                     	org	3145728
  1786   300000  FF                 	db	255
  1787                           
  1788                           ;Config register CONFIG1H @ 0x300001
  1789                           ;	Oscillator Selection bits
  1790                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1791                           ;	Fail-Safe Clock Monitor Enable bit
  1792                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1793                           ;	Internal/External Oscillator Switchover bit
  1794                           ;	IESO = ON, Oscillator Switchover mode enabled
  1795   300001                     	org	3145729
  1796   300001  88                 	db	136
  1797                           
  1798                           ;Config register CONFIG2L @ 0x300002
  1799                           ;	Power-up Timer Enable bit
  1800                           ;	PWRT = OFF, PWRT disabled
  1801                           ;	Brown-out Reset Enable bits
  1802                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1803                           ;	Brown Out Reset Voltage bits
  1804                           ;	BORV = 3, Minimum setting
  1805   300002                     	org	3145730
  1806   300002  1F                 	db	31
  1807                           
  1808                           ;Config register CONFIG2H @ 0x300003
  1809                           ;	Watchdog Timer Enable bit
  1810                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1811                           ;	Watchdog Timer Postscale Select bits
  1812                           ;	WDTPS = 1, 1:1
  1813   300003                     	org	3145731
  1814   300003  00                 	db	0
  1815                           
  1816                           ; Padding undefined space
  1817   300004                     	org	3145732
  1818   300004  FF                 	db	255
  1819                           
  1820                           ;Config register CONFIG3H @ 0x300005
  1821                           ;	CCP2 MUX bit
  1822                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1823                           ;	PORTB A/D Enable bit
  1824                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1825                           ;	Low-Power Timer1 Oscillator Enable bit
  1826                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1827                           ;	MCLR Pin Enable bit
  1828                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1829   300005                     	org	3145733
  1830   300005  83                 	db	131
  1831                           
  1832                           ;Config register CONFIG4L @ 0x300006
  1833                           ;	Stack Full/Underflow Reset Enable bit
  1834                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1835                           ;	Single-Supply ICSP Enable bit
  1836                           ;	LVP = OFF, Single-Supply ICSP disabled
  1837                           ;	Extended Instruction Set Enable bit
  1838                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1839                           ;	Background Debugger Enable bit
  1840                           ;	DEBUG = 0x1, unprogrammed default
  1841   300006                     	org	3145734
  1842   300006  81                 	db	129
  1843                           
  1844                           ; Padding undefined space
  1845   300007                     	org	3145735
  1846   300007  FF                 	db	255
  1847                           
  1848                           ;Config register CONFIG5L @ 0x300008
  1849                           ;	Code Protection bit
  1850                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1851                           ;	Code Protection bit
  1852                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1853                           ;	Code Protection bit
  1854                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1855                           ;	Code Protection bit
  1856                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1857   300008                     	org	3145736
  1858   300008  0F                 	db	15
  1859                           
  1860                           ;Config register CONFIG5H @ 0x300009
  1861                           ;	Boot Block Code Protection bit
  1862                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1863                           ;	Data EEPROM Code Protection bit
  1864                           ;	CPD = OFF, Data EEPROM not code-protected
  1865   300009                     	org	3145737
  1866   300009  C0                 	db	192
  1867                           
  1868                           ;Config register CONFIG6L @ 0x30000A
  1869                           ;	Write Protection bit
  1870                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1871                           ;	Write Protection bit
  1872                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1873                           ;	Write Protection bit
  1874                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1875                           ;	Write Protection bit
  1876                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1877   30000A                     	org	3145738
  1878   30000A  0F                 	db	15
  1879                           
  1880                           ;Config register CONFIG6H @ 0x30000B
  1881                           ;	Configuration Register Write Protection bit
  1882                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1883                           ;	Boot Block Write Protection bit
  1884                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1885                           ;	Data EEPROM Write Protection bit
  1886                           ;	WRTD = OFF, Data EEPROM not write-protected
  1887   30000B                     	org	3145739
  1888   30000B  E0                 	db	224
  1889                           
  1890                           ;Config register CONFIG7L @ 0x30000C
  1891                           ;	Table Read Protection bit
  1892                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1893                           ;	Table Read Protection bit
  1894                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1895                           ;	Table Read Protection bit
  1896                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1897                           ;	Table Read Protection bit
  1898                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1899   30000C                     	org	3145740
  1900   30000C  0F                 	db	15
  1901                           
  1902                           ;Config register CONFIG7H @ 0x30000D
  1903                           ;	Boot Block Table Read Protection bit
  1904                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1905   30000D                     	org	3145741
  1906   30000D  40                 	db	64
  1907                           tosu	equ	0xFFF
  1908                           tosh	equ	0xFFE
  1909                           tosl	equ	0xFFD
  1910                           stkptr	equ	0xFFC
  1911                           pclatu	equ	0xFFB
  1912                           pclath	equ	0xFFA
  1913                           pcl	equ	0xFF9
  1914                           tblptru	equ	0xFF8
  1915                           tblptrh	equ	0xFF7
  1916                           tblptrl	equ	0xFF6
  1917                           tablat	equ	0xFF5
  1918                           prodh	equ	0xFF4
  1919                           prodl	equ	0xFF3
  1920                           indf0	equ	0xFEF
  1921                           postinc0	equ	0xFEE
  1922                           postdec0	equ	0xFED
  1923                           preinc0	equ	0xFEC
  1924                           plusw0	equ	0xFEB
  1925                           fsr0h	equ	0xFEA
  1926                           fsr0l	equ	0xFE9
  1927                           wreg	equ	0xFE8
  1928                           indf1	equ	0xFE7
  1929                           postinc1	equ	0xFE6
  1930                           postdec1	equ	0xFE5
  1931                           preinc1	equ	0xFE4
  1932                           plusw1	equ	0xFE3
  1933                           fsr1h	equ	0xFE2
  1934                           fsr1l	equ	0xFE1
  1935                           bsr	equ	0xFE0
  1936                           indf2	equ	0xFDF
  1937                           postinc2	equ	0xFDE
  1938                           postdec2	equ	0xFDD
  1939                           preinc2	equ	0xFDC
  1940                           plusw2	equ	0xFDB
  1941                           fsr2h	equ	0xFDA
  1942                           fsr2l	equ	0xFD9
  1943                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     30      72
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[20]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_atoi
    _strcpy->_GetString
    _atoi->___wmul

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1321
                                             27 COMRAM     3     3      0
                        _ClearBuffer
                          _GetString
                  _SYSTEM_Initialize
                               _atoi
                          _getstrLen
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               8     4      4     248
                                             14 COMRAM     8     4      4
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (1) _getstrLen                                            2     0      2       0
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 9     7      2    1004
                                             18 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (2) _isspace                                              5     3      2     207
                                             12 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              4     2      2     161
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetString                                            2     0      2       0
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ClearBuffer                                          2     2      0      45
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0     463
                                              7 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          1     1      0     463
                                              6 COMRAM     1     1      0
                         _UART_Write
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _GetString
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _atoi
     ___wmul
     _isdigit
     _isspace
   _getstrLen
   _strcpy
     _GetString (ARG)

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write
     ___awmod

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1E      48       1       57.1%
BITBIGSFRhhhhlh     1E      0       0      17        0.0%
BITBIGSFRhhhhh       D      0       0      16        0.0%
BITBIGSFRll          C      0       0      27        0.0%
BITBIGSFRhlhlhl      B      0       0      23        0.0%
BITBIGSFRhhhl        B      0       0      19        0.0%
BITBIGSFRhlhlhh      8      0       0      22        0.0%
BITBIGSFRhlhll       7      0       0      24        0.0%
BITBIGSFRlh          5      0       0      26        0.0%
BITBIGSFRhlhlhh      4      0       0      21        0.0%
BITBIGSFRhhhhll      2      0       0      18        0.0%
BITBIGSFRhlhh        2      0       0      20        0.0%
BITBIGSFRhll         1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      48      28        0.0%
DATA                 0      0      48       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Dec 21 01:07:27 2022

                           l17 04BE                             l41 0504                             l34 04E0  
                           l60 04A8                             l63 04FC                             bsr 000FE0  
          ___wmul@multiplicand 0039        __end_of_CCP1_Initialize 04E2                            l100 0452  
                          l117 03BE                            l125 04F4                            l128 04EA  
                          l174 0478                            l900 04D8                            l902 04DC  
                          l910 042A                            l904 04DE                            l920 043A  
                          l912 0432                            l906 04FE                            l930 0448  
                          l922 0440                            l914 0434                            l908 04F6  
                          l932 044A                            l924 0442                            l916 0436  
                          l934 044C                            l926 0444                            l918 0438  
                          l870 01B2                            l936 044E                            l928 0446  
                          l873 0428                            l881 037C                            l938 0450  
                          l890 03FC                            l867 01AA                            l892 04AA  
                          l894 04AC                            l896 04B0                            l898 04D6  
                          u120 03B6                            u121 03B2                            u300 0350  
                          u301 034C                            u310 0372                            u311 036E  
                          u320 0422                            u321 041C                            u330 0424  
                          u420 031C                            u421 0318                            u350 03FC  
                          u351 03F8                            u360 00A2                            u361 009E  
                          u370 00D0                            u371 00CC                            u380 017C  
                          u381 0178                            u390 018E                            u391 018A  
                          _str 0003                   ___awmod@sign 0030                            wreg 000FE8  
                         l1010 037E                           l1002 0494                           l1020 039A  
                         l1004 049C                           l1022 03B6                           l1006 04A0  
                         l1016 0386                           l1200 04EC                           l1008 04A4  
                         l1018 0396                           l1130 0454                           l1210 0070  
                         l1132 0470                           l1220 00D4                           l1212 0084  
                         l1204 04E2                           l1222 00DC                           l1206 03C0  
                         l1232 014E                           l1224 00E4                           l1216 0088  
                         l1208 03D0                           l1234 017C                           l1226 0116  
                         l1218 00A2                           l1180 0376                           l1172 0338  
                         l1236 018E                           l1260 02FE                           l1252 02D6  
                         l1174 033C                           l1270 0100                           l1262 031C  
                         l1254 02D6                           l1184 03FE                           l1176 0350  
                         l1264 032C                           l1256 02DA                           l1178 0372  
                         l1258 02F2                           _ADFM 007E07                           _CREN 007D5C  
                         _LATD 000F8C                           _RCIF 007CF5                           _atoi 0070  
                         _main 02D6                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf1 000FE7                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 0049                           prodh 000FF4  
                         prodl 000FF3                           start 006C                   ___param_bank 000000  
             ?_UART_Initialize 002B  __end_of_OSCILLATOR_Initialize 04FE                          ?_atoi 003D  
                        ?_main 002B                __end_of___awmod 0264                          _IRCF0 007E9C  
                        _IRCF1 007E9D                          _IRCF2 007E9E                          i1l103 04C2  
                        i1l106 04D4                          i1l122 02D4                          i1l135 0054  
                        i1l418 0262                          i2l171 0508                          i1l940 04C2  
                        i1l942 04D0                          _RCREG 000FAE                          _SPBRG 000FAF  
                        _TRISA 000F92                          _TRISD 000F95                          _TXREG 000FAD  
                  ?_UART_Write 002B                __end_of_isdigit 042A                          atoi@n 0044  
                        atoi@s 003D                    _ClearBuffer 037E                __end_of_isspace 037E  
                        ttemp5 004A                          ttemp6 004D                          ttemp7 0051  
                        status 000FD8                          wtemp8 004A                __initialization 047A  
                 __end_of_atoi 01B4                   __end_of_main 0338                         ??_atoi 003F  
                       ??_main 0046               ?_CCP1_Initialize 002B                  __activetblptr 000002  
                       _ADCON1 000FC1                         _ADRESH 000FC4                         _ADRESL 000FC3  
                       i1l1140 01C6                         i1l1150 01FA                         i1l1142 01CE  
                       i1l1160 0236                         i1l1152 0202                         i1l1144 01D2  
                       i1l1136 01B4                         i1l1162 023C                         i1l1154 020A  
                       i1l1146 01E0                         i1l1138 01B8                         i1l1242 002E  
                       i1l1156 0218                         i1l1164 0242                         i1l1148 01E8  
                       i1l1244 003C                         i1l1166 0252                         i1l1158 022E  
                       i1l1190 0292                         i1l1246 004A                         i1l1168 025A  
                       i1l1192 02A2                         i1l1248 0050                         i1l1194 02B4  
                       i1l1196 02B8                         i1l1188 0264                         i1u1_20 04D0  
                       i1u1_21 04CC                         _Hi_ISR 0008                         _Lo_ISR 0018  
                       ___wmul 0454                      ??___awmod 002F                         _lenStr 0001  
                       clear_0 0480                ___awmod@divisor 002D                         isa$std 000001  
              ___awmod@counter 002F                         _strcpy 03C0                      ??_isdigit 0039  
                    ??_isspace 0039                         tblptru 000FF8              _SYSTEM_Initialize 0494  
                   __accesstop 0080        __end_of__initialization 0486             ?_SYSTEM_Initialize 002B  
                ___rparam_used 000001              __end_of_GetString 04F6                 __pcstackCOMRAM 002B  
          ??_SYSTEM_Initialize 0037                  ??_MyusartRead 0031      __end_of_SYSTEM_Initialize 04AA  
                      ?_Hi_ISR 002B                        ?_Lo_ISR 002B                        ?___wmul 0037  
                      _CCP1CON 000FBD                        ?_strcpy 0039                   ??_UART_Write 002B  
                      i1u24_20 01C6                        i1u40_20 003C                        i1u24_21 01C2  
                      i1u40_21 0038                        i1u25_20 01E0                        i1u41_20 004A  
                      i1u25_21 01DC                        i1u41_21 0046                        i1u26_20 01FA  
                      i1u34_20 0292                        i1u26_21 01F6                        i1u34_21 028E  
                      i1u27_20 0218                        i1u27_21 0214                        i1u28_20 022E  
                      i1u28_21 022A                        i1u29_20 0252                        i1u29_21 024E  
                 ?_ClearBuffer 002B            __end_of_MyusartRead 02D6                        __Hparam 0000  
                      __Lparam 0000                        ___awmod 01B4             __end_of_UART_Write 04D6  
                      __pcinit 047A              __end_of_getstrLen 04EC                        __ramtop 0600  
                      __ptext0 02D6                        __ptext1 03C0                        __ptext2 04E2  
                      __ptext3 0070                        __ptext4 0338                        __ptext5 03FE  
                      __ptext6 0454                        __ptext7 0494                        __ptext8 042A  
                      __ptext9 04F6          _OSCILLATOR_Initialize 04F6                        _isdigit 03FE  
             ___awmod@dividend 002B                        _isspace 0338                        atoi@neg 0042  
               __pintcode_body 0506           end_of_initialization 0486                  __Lmediumconst 0000  
                      int_func 0506                      _RCSTAbits 000FAB                        postinc0 000FEE  
                      postinc2 000FDE                        strcpy@d 003F                        strcpy@s 003D  
               UART_Write@data 002B                      _TRISCbits 000F94                    _MyusartRead 0264  
                    _TXSTAbits 000FAC                 __end_of_Hi_ISR 050C                 __end_of_Lo_ISR 006C  
 __end_of_INTERRUPT_Initialize 0506                      _GetString 04EC                 __end_of___wmul 047A  
                  _BAUDCONbits 000FB8                 _ADC_Initialize 04AA         ?_OSCILLATOR_Initialize 002B  
               __end_of_strcpy 03FE            start_initialization 047A                   ClearBuffer@i 0037  
            ??_UART_Initialize 0037                       ??_Hi_ISR 002B                       ??_Lo_ISR 0032  
                     ??___wmul 003B         __end_of_ADC_Initialize 04C0                     ?_GetString 0037  
                     ??_strcpy 003D                    __pbssCOMRAM 0001              ??_CCP1_Initialize 0037  
                    __pintcode 0008                       ?___awmod 002B                ?_ADC_Initialize 002B  
                  __pintcodelo 0018                       ?_isdigit 0037                      _getstrLen 04E2  
                     ?_isspace 0037           _INTERRUPT_Initialize 04FE                 ___wmul@product 003B  
                     _IPR1bits 000F9F                       _PIE1bits 000F9D                       _PIR1bits 000F9E  
                     _RCONbits 000FD0                    ??_GetString 0039                     _ADCON0bits 000FC2  
                   _ADCON2bits 000FC0              ___wmul@multiplier 0037                     ?_getstrLen 0037  
                    main@index 0047                   ?_MyusartRead 002B                   _isspace$1218 003B  
        ?_INTERRUPT_Initialize 002B                       __Hrparam 0000                       __Lrparam 0000  
      ??_OSCILLATOR_Initialize 0037                _UART_Initialize 042A                       __ptext10 04FE  
                     __ptext11 04D6                       __ptext12 04AA                       __ptext13 04EC  
                     __ptext14 037E                       __ptext16 0264                       __ptext17 01B4  
                     __ptext18 04C0                     strcpy@dest 0039                       isa$xinst 000000  
                     int$flags 0049                       _mystring 0017                    ??_getstrLen 0039  
                   _INTCONbits 000FF2                _CCP1_Initialize 04D6                       isdigit@c 0037  
       ??_INTERRUPT_Initialize 0037                  ??_ClearBuffer 0037                       intlevel1 0000  
                     intlevel2 0000                       isspace@c 0037                      strcpy@src 003B  
             ??_ADC_Initialize 0037        __end_of_UART_Initialize 0454                     _UART_Write 04C0  
          __end_of_ClearBuffer 03C0  
