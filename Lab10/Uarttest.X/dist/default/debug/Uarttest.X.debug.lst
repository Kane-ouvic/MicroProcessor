

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Dec 18 21:08:40 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Version 2.40
    17                           ; Generated 04/07/2022 GMT
    18                           ; 
    19                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4520 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _RCREG	set	4014
    52   000000                     _TXREG	set	4013
    53   000000                     _PIE1bits	set	3997
    54   000000                     _PIR1bits	set	3998
    55   000000                     _RCSTAbits	set	4011
    56   000000                     _SPBRG	set	4015
    57   000000                     _BAUDCONbits	set	4024
    58   000000                     _TXSTAbits	set	4012
    59   000000                     _IRCF2	set	32414
    60   000000                     _CREN	set	32092
    61   000000                     _IRCF0	set	32412
    62   000000                     _IRCF1	set	32413
    63   000000                     _TRISCbits	set	3988
    64   000000                     _IPR1bits	set	3999
    65                           
    66                           ; #config settings
    67                           
    68                           	psect	cinit
    69   007D16                     __pcinit:
    70                           	callstack 0
    71   007D16                     start_initialization:
    72                           	callstack 0
    73   007D16                     __initialization:
    74                           	callstack 0
    75   007D16                     end_of_initialization:
    76                           	callstack 0
    77   007D16                     __end_of__initialization:
    78                           	callstack 0
    79   007D16  0100               	movlb	0
    80   007D18  EFC0  F03E         	goto	_main	;jump to C main() function
    81                           
    82                           	psect	cstackCOMRAM
    83   000001                     __pcstackCOMRAM:
    84                           	callstack 0
    85   000001                     test_uart_write@data:
    86                           	callstack 0
    87                           
    88                           ; 1 bytes @ 0x0
    89   000001                     	ds	1
    90   000002                     main@c:
    91                           	callstack 0
    92                           
    93                           ; 1 bytes @ 0x1
    94   000002                     	ds	1
    95                           
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    98 ;;
    99 ;; *************** function _main *****************
   100 ;; Defined at:
   101 ;;		line 5 in file "main.c"
   102 ;; Parameters:    Size  Location     Type
   103 ;;		None
   104 ;; Auto vars:     Size  Location     Type
   105 ;;  c               1    1[COMRAM] unsigned char 
   106 ;; Return value:  Size  Location     Type
   107 ;;                  1    wreg      void 
   108 ;; Registers used:
   109 ;;		wreg, status,2, status,0, cstack
   110 ;; Tracked objects:
   111 ;;		On entry : 0/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   115 ;;      Params:         0       0       0       0       0       0       0
   116 ;;      Locals:         1       0       0       0       0       0       0
   117 ;;      Temps:          0       0       0       0       0       0       0
   118 ;;      Totals:         1       0       0       0       0       0       0
   119 ;;Total ram usage:        1 bytes
   120 ;; Hardware stack levels required when called: 1
   121 ;; This function calls:
   122 ;;		_test_uart_init
   123 ;;		_test_uart_read
   124 ;;		_test_uart_write
   125 ;; This function is called by:
   126 ;;		Startup code after reset
   127 ;; This function uses a non-reentrant model
   128 ;;
   129                           
   130                           	psect	text0
   131   007D80                     __ptext0:
   132                           	callstack 0
   133   007D80                     _main:
   134                           	callstack 30
   135   007D80                     
   136                           ;main.c: 6:     char c;;main.c: 8:     test_uart_init();
   137   007D80  ECAC  F03E         	call	_test_uart_init	;wreg free
   138                           
   139                           ;main.c: 9:     while (c = test_uart_read()) {
   140   007D84  EFD3  F03E         	goto	l779
   141   007D88                     l773:
   142                           
   143                           ;main.c: 10:         if (c == '\r')
   144   007D88  0E0D               	movlw	13
   145   007D8A  1802               	xorwf	main@c^0,w,c
   146   007D8C  A4D8               	btfss	status,2,c
   147   007D8E  EFCB  F03E         	goto	u41
   148   007D92  EFCD  F03E         	goto	u40
   149   007D96                     u41:
   150   007D96  EFD0  F03E         	goto	l777
   151   007D9A                     u40:
   152   007D9A                     
   153                           ;main.c: 11:             test_uart_write('\n');
   154   007D9A  0E0A               	movlw	10
   155   007D9C  EC8E  F03E         	call	_test_uart_write
   156   007DA0                     l777:
   157                           
   158                           ;main.c: 12:         test_uart_write(c);
   159   007DA0  5002               	movf	main@c^0,w,c
   160   007DA2  EC8E  F03E         	call	_test_uart_write
   161   007DA6                     l779:
   162                           
   163                           ;main.c: 9:     while (c = test_uart_read()) {
   164   007DA6  EC99  F03E         	call	_test_uart_read	;wreg free
   165   007DAA  6E02               	movwf	main@c^0,c
   166   007DAC  5002               	movf	main@c^0,w,c
   167   007DAE  A4D8               	btfss	status,2,c
   168   007DB0  EFDC  F03E         	goto	u51
   169   007DB4  EFDE  F03E         	goto	u50
   170   007DB8                     u51:
   171   007DB8  EFC4  F03E         	goto	l773
   172   007DBC                     u50:
   173   007DBC  EF00  F000         	goto	start
   174   007DC0                     __end_of_main:
   175                           	callstack 0
   176                           
   177 ;; *************** function _test_uart_write *****************
   178 ;; Defined at:
   179 ;;		line 35 in file "test_uart.c"
   180 ;; Parameters:    Size  Location     Type
   181 ;;  data            1    wreg     unsigned char 
   182 ;; Auto vars:     Size  Location     Type
   183 ;;  data            1    0[COMRAM] unsigned char 
   184 ;; Return value:  Size  Location     Type
   185 ;;                  1    wreg      void 
   186 ;; Registers used:
   187 ;;		wreg
   188 ;; Tracked objects:
   189 ;;		On entry : 0/0
   190 ;;		On exit  : 0/0
   191 ;;		Unchanged: 0/0
   192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   193 ;;      Params:         0       0       0       0       0       0       0
   194 ;;      Locals:         1       0       0       0       0       0       0
   195 ;;      Temps:          0       0       0       0       0       0       0
   196 ;;      Totals:         1       0       0       0       0       0       0
   197 ;;Total ram usage:        1 bytes
   198 ;; Hardware stack levels used: 1
   199 ;; This function calls:
   200 ;;		Nothing
   201 ;; This function is called by:
   202 ;;		_main
   203 ;; This function uses a non-reentrant model
   204 ;;
   205                           
   206                           	psect	text1
   207   007D1C                     __ptext1:
   208                           	callstack 0
   209   007D1C                     _test_uart_write:
   210                           	callstack 30
   211                           
   212                           ;incstack = 0
   213                           ;test_uart_write@data stored from wreg
   214   007D1C  6E01               	movwf	test_uart_write@data^0,c
   215   007D1E                     l51:
   216                           
   217                           ;test_uart.c: 37:     while (!TXSTAbits.TRMT)
   218   007D1E  A2AC               	btfss	172,1,c	;volatile
   219   007D20  EF94  F03E         	goto	u11
   220   007D24  EF96  F03E         	goto	u10
   221   007D28                     u11:
   222   007D28  EF8F  F03E         	goto	l51
   223   007D2C                     u10:
   224   007D2C                     
   225                           ;test_uart.c: 39:     TXREG = data;
   226   007D2C  C001  FFAD         	movff	test_uart_write@data,4013	;volatile
   227   007D30  0012               	return		;funcret
   228   007D32                     __end_of_test_uart_write:
   229                           	callstack 0
   230                           
   231 ;; *************** function _test_uart_read *****************
   232 ;; Defined at:
   233 ;;		line 42 in file "test_uart.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      unsigned char 
   240 ;; Registers used:
   241 ;;		wreg, status,2
   242 ;; Tracked objects:
   243 ;;		On entry : 0/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   247 ;;      Params:         0       0       0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0       0       0
   249 ;;      Temps:          0       0       0       0       0       0       0
   250 ;;      Totals:         0       0       0       0       0       0       0
   251 ;;Total ram usage:        0 bytes
   252 ;; Hardware stack levels used: 1
   253 ;; This function calls:
   254 ;;		Nothing
   255 ;; This function is called by:
   256 ;;		_main
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text2
   261   007D32                     __ptext2:
   262                           	callstack 0
   263   007D32                     _test_uart_read:
   264                           	callstack 30
   265   007D32                     l57:
   266                           
   267                           ;test_uart.c: 44:     while (!PIR1bits.RCIF)
   268   007D32  AA9E               	btfss	158,5,c	;volatile
   269   007D34  EF9E  F03E         	goto	u21
   270   007D38  EFA0  F03E         	goto	u20
   271   007D3C                     u21:
   272   007D3C  EF99  F03E         	goto	l57
   273   007D40                     u20:
   274   007D40                     
   275                           ;test_uart.c: 47:     if (RCSTAbits.OERR) {
   276   007D40  A2AB               	btfss	171,1,c	;volatile
   277   007D42  EFA5  F03E         	goto	u31
   278   007D46  EFA7  F03E         	goto	u30
   279   007D4A                     u31:
   280   007D4A  EFAA  F03E         	goto	l767
   281   007D4E                     u30:
   282   007D4E                     
   283                           ;test_uart.c: 48:         CREN = 0;
   284   007D4E  98AB               	bcf	4011,4,c	;volatile
   285                           
   286                           ;test_uart.c: 49:         __nop();
   287   007D50  F000               	nop	
   288                           
   289                           ;test_uart.c: 50:         CREN = 1;
   290   007D52  88AB               	bsf	4011,4,c	;volatile
   291   007D54                     l767:
   292                           
   293                           ;test_uart.c: 53:     return RCREG;
   294   007D54  50AE               	movf	174,w,c	;volatile
   295   007D56  0012               	return		;funcret
   296   007D58                     __end_of_test_uart_read:
   297                           	callstack 0
   298                           
   299 ;; *************** function _test_uart_init *****************
   300 ;; Defined at:
   301 ;;		line 4 in file "test_uart.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   315 ;;      Params:         0       0       0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0       0       0
   318 ;;      Totals:         0       0       0       0       0       0       0
   319 ;;Total ram usage:        0 bytes
   320 ;; Hardware stack levels used: 1
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		_main
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	text3
   329   007D58                     __ptext3:
   330                           	callstack 0
   331   007D58                     _test_uart_init:
   332                           	callstack 30
   333   007D58                     
   334                           ;test_uart.c: 7:     IRCF2 = 1;
   335   007D58  8CD3               	bsf	4051,6,c	;volatile
   336                           
   337                           ;test_uart.c: 8:     IRCF1 = 1;
   338   007D5A  8AD3               	bsf	4051,5,c	;volatile
   339                           
   340                           ;test_uart.c: 9:     IRCF0 = 0;
   341   007D5C  98D3               	bcf	4051,4,c	;volatile
   342                           
   343                           ;test_uart.c: 12:     TRISCbits.TRISC6 = 1;
   344   007D5E  8C94               	bsf	148,6,c	;volatile
   345                           
   346                           ;test_uart.c: 13:     TRISCbits.TRISC7 = 1;
   347   007D60  8E94               	bsf	148,7,c	;volatile
   348                           
   349                           ;test_uart.c: 16:     TXSTAbits.SYNC = 0;
   350   007D62  98AC               	bcf	172,4,c	;volatile
   351                           
   352                           ;test_uart.c: 17:     BAUDCONbits.BRG16 = 0;
   353   007D64  96B8               	bcf	184,3,c	;volatile
   354                           
   355                           ;test_uart.c: 18:     TXSTAbits.BRGH = 1;
   356   007D66  84AC               	bsf	172,2,c	;volatile
   357   007D68                     
   358                           ;test_uart.c: 19:     SPBRG = 207;
   359   007D68  0ECF               	movlw	207
   360   007D6A  6EAF               	movwf	175,c	;volatile
   361   007D6C                     
   362                           ;test_uart.c: 22:     RCSTAbits.SPEN = 1;
   363   007D6C  8EAB               	bsf	171,7,c	;volatile
   364   007D6E                     
   365                           ;test_uart.c: 23:     PIR1bits.TXIF = 1;
   366   007D6E  889E               	bsf	158,4,c	;volatile
   367   007D70                     
   368                           ;test_uart.c: 24:     PIR1bits.RCIF = 0;
   369   007D70  9A9E               	bcf	158,5,c	;volatile
   370   007D72                     
   371                           ;test_uart.c: 25:     TXSTAbits.TXEN = 1;
   372   007D72  8AAC               	bsf	172,5,c	;volatile
   373   007D74                     
   374                           ;test_uart.c: 26:     RCSTAbits.CREN = 1;
   375   007D74  88AB               	bsf	171,4,c	;volatile
   376   007D76                     
   377                           ;test_uart.c: 29:     PIE1bits.TXIE = 0;
   378   007D76  989D               	bcf	157,4,c	;volatile
   379   007D78                     
   380                           ;test_uart.c: 30:     IPR1bits.TXIP = 0;
   381   007D78  989F               	bcf	159,4,c	;volatile
   382   007D7A                     
   383                           ;test_uart.c: 31:     PIE1bits.RCIE = 0;
   384   007D7A  9A9D               	bcf	157,5,c	;volatile
   385   007D7C                     
   386                           ;test_uart.c: 32:     IPR1bits.RCIP = 0;
   387   007D7C  9A9F               	bcf	159,5,c	;volatile
   388   007D7E  0012               	return		;funcret
   389   007D80                     __end_of_test_uart_init:
   390                           	callstack 0
   391   000000                     
   392                           	psect	rparam
   393   000000                     
   394                           	psect	idloc
   395                           
   396                           ;Config register IDLOC0 @ 0x200000
   397                           ;	unspecified, using default values
   398   200000                     	org	2097152
   399   200000  FF                 	db	255
   400                           
   401                           ;Config register IDLOC1 @ 0x200001
   402                           ;	unspecified, using default values
   403   200001                     	org	2097153
   404   200001  FF                 	db	255
   405                           
   406                           ;Config register IDLOC2 @ 0x200002
   407                           ;	unspecified, using default values
   408   200002                     	org	2097154
   409   200002  FF                 	db	255
   410                           
   411                           ;Config register IDLOC3 @ 0x200003
   412                           ;	unspecified, using default values
   413   200003                     	org	2097155
   414   200003  FF                 	db	255
   415                           
   416                           ;Config register IDLOC4 @ 0x200004
   417                           ;	unspecified, using default values
   418   200004                     	org	2097156
   419   200004  FF                 	db	255
   420                           
   421                           ;Config register IDLOC5 @ 0x200005
   422                           ;	unspecified, using default values
   423   200005                     	org	2097157
   424   200005  FF                 	db	255
   425                           
   426                           ;Config register IDLOC6 @ 0x200006
   427                           ;	unspecified, using default values
   428   200006                     	org	2097158
   429   200006  FF                 	db	255
   430                           
   431                           ;Config register IDLOC7 @ 0x200007
   432                           ;	unspecified, using default values
   433   200007                     	org	2097159
   434   200007  FF                 	db	255
   435                           
   436                           	psect	config
   437                           
   438                           ; Padding undefined space
   439   300000                     	org	3145728
   440   300000  FF                 	db	255
   441                           
   442                           ;Config register CONFIG1H @ 0x300001
   443                           ;	Oscillator Selection bits
   444                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   445                           ;	Fail-Safe Clock Monitor Enable bit
   446                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   447                           ;	Internal/External Oscillator Switchover bit
   448                           ;	IESO = ON, Oscillator Switchover mode enabled
   449   300001                     	org	3145729
   450   300001  88                 	db	136
   451                           
   452                           ;Config register CONFIG2L @ 0x300002
   453                           ;	Power-up Timer Enable bit
   454                           ;	PWRT = OFF, PWRT disabled
   455                           ;	Brown-out Reset Enable bits
   456                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   457                           ;	Brown Out Reset Voltage bits
   458                           ;	BORV = 3, Minimum setting
   459   300002                     	org	3145730
   460   300002  1F                 	db	31
   461                           
   462                           ;Config register CONFIG2H @ 0x300003
   463                           ;	Watchdog Timer Enable bit
   464                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   465                           ;	Watchdog Timer Postscale Select bits
   466                           ;	WDTPS = 1, 1:1
   467   300003                     	org	3145731
   468   300003  00                 	db	0
   469                           
   470                           ; Padding undefined space
   471   300004                     	org	3145732
   472   300004  FF                 	db	255
   473                           
   474                           ;Config register CONFIG3H @ 0x300005
   475                           ;	CCP2 MUX bit
   476                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   477                           ;	PORTB A/D Enable bit
   478                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   479                           ;	Low-Power Timer1 Oscillator Enable bit
   480                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   481                           ;	MCLR Pin Enable bit
   482                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   483   300005                     	org	3145733
   484   300005  83                 	db	131
   485                           
   486                           ;Config register CONFIG4L @ 0x300006
   487                           ;	Stack Full/Underflow Reset Enable bit
   488                           ;	STVREN = ON, Stack full/underflow will cause Reset
   489                           ;	Single-Supply ICSP Enable bit
   490                           ;	LVP = OFF, Single-Supply ICSP disabled
   491                           ;	Extended Instruction Set Enable bit
   492                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   493                           ;	Background Debugger Enable bit
   494                           ;	DEBUG = 0x1, unprogrammed default
   495   300006                     	org	3145734
   496   300006  81                 	db	129
   497                           
   498                           ; Padding undefined space
   499   300007                     	org	3145735
   500   300007  FF                 	db	255
   501                           
   502                           ;Config register CONFIG5L @ 0x300008
   503                           ;	Code Protection bit
   504                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   505                           ;	Code Protection bit
   506                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   507                           ;	Code Protection bit
   508                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   509                           ;	Code Protection bit
   510                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   511   300008                     	org	3145736
   512   300008  0F                 	db	15
   513                           
   514                           ;Config register CONFIG5H @ 0x300009
   515                           ;	Boot Block Code Protection bit
   516                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   517                           ;	Data EEPROM Code Protection bit
   518                           ;	CPD = OFF, Data EEPROM not code-protected
   519   300009                     	org	3145737
   520   300009  C0                 	db	192
   521                           
   522                           ;Config register CONFIG6L @ 0x30000A
   523                           ;	Write Protection bit
   524                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   525                           ;	Write Protection bit
   526                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   527                           ;	Write Protection bit
   528                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   529                           ;	Write Protection bit
   530                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   531   30000A                     	org	3145738
   532   30000A  0F                 	db	15
   533                           
   534                           ;Config register CONFIG6H @ 0x30000B
   535                           ;	Configuration Register Write Protection bit
   536                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   537                           ;	Boot Block Write Protection bit
   538                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   539                           ;	Data EEPROM Write Protection bit
   540                           ;	WRTD = OFF, Data EEPROM not write-protected
   541   30000B                     	org	3145739
   542   30000B  E0                 	db	224
   543                           
   544                           ;Config register CONFIG7L @ 0x30000C
   545                           ;	Table Read Protection bit
   546                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   547                           ;	Table Read Protection bit
   548                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   549                           ;	Table Read Protection bit
   550                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   551                           ;	Table Read Protection bit
   552                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   553   30000C                     	org	3145740
   554   30000C  0F                 	db	15
   555                           
   556                           ;Config register CONFIG7H @ 0x30000D
   557                           ;	Boot Block Table Read Protection bit
   558                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   559   30000D                     	org	3145741
   560   30000D  40                 	db	64
   561                           tosu	equ	0xFFF
   562                           tosh	equ	0xFFE
   563                           tosl	equ	0xFFD
   564                           stkptr	equ	0xFFC
   565                           pclatu	equ	0xFFB
   566                           pclath	equ	0xFFA
   567                           pcl	equ	0xFF9
   568                           tblptru	equ	0xFF8
   569                           tblptrh	equ	0xFF7
   570                           tblptrl	equ	0xFF6
   571                           tablat	equ	0xFF5
   572                           prodh	equ	0xFF4
   573                           prodl	equ	0xFF3
   574                           indf0	equ	0xFEF
   575                           postinc0	equ	0xFEE
   576                           postdec0	equ	0xFED
   577                           preinc0	equ	0xFEC
   578                           plusw0	equ	0xFEB
   579                           fsr0h	equ	0xFEA
   580                           fsr0l	equ	0xFE9
   581                           wreg	equ	0xFE8
   582                           indf1	equ	0xFE7
   583                           postinc1	equ	0xFE6
   584                           postdec1	equ	0xFE5
   585                           preinc1	equ	0xFE4
   586                           plusw1	equ	0xFE3
   587                           fsr1h	equ	0xFE2
   588                           fsr1l	equ	0xFE1
   589                           bsr	equ	0xFE0
   590                           indf2	equ	0xFDF
   591                           postinc2	equ	0xFDE
   592                           postdec2	equ	0xFDD
   593                           preinc2	equ	0xFDC
   594                           plusw2	equ	0xFDB
   595                           fsr2h	equ	0xFDA
   596                           fsr2l	equ	0xFD9
   597                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      2       2
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_test_uart_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      45
                                              1 COMRAM     1     1      0
                     _test_uart_init
                     _test_uart_read
                    _test_uart_write
 ---------------------------------------------------------------------------------
 (1) _test_uart_write                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _test_uart_read                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _test_uart_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _test_uart_init
   _test_uart_read
   _test_uart_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      2       2       1        1.6%
STACK                0      0       0       2        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBIGSFR_5          D      0       0      15        0.0%
BITBIGSFR_4          3      0       0      16        0.0%
BITBIGSFR_3          3      0       0      17        0.0%
BITBIGSFR_2          6      0       0      18        0.0%
BITBIGSFR_1hh       1A      0       0      19        0.0%
BITBIGSFR_1hlh       8      0       0      20        0.0%
BITBIGSFR_1lh        B      0       0      21        0.0%
BITBIGSFRh           7      0       0      22        0.0%
BITBIGSFRl          14      0       0      23        0.0%
ABS                  0      0       0      24        0.0%
BIGRAM             5F3      0       0      25        0.0%
DATA                 0      0       0      26        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Dec 18 21:08:40 2022

       ?_test_uart_write 0001                       l15 7DBC                       l51 7D1E  
                     l61 7D56                       l54 7D30                       l48 7D7E  
                     l57 7D32                       l59 7D40                       u10 7D2C  
                     u11 7D28                       u20 7D40                       u21 7D3C  
                     u30 7D4E                       u31 7D4A                       u40 7D9A  
                     u41 7D96                       u50 7DBC                       u51 7DB8  
                    l741 7D6C                      l751 7D76                      l743 7D6E  
                    l753 7D78                      l745 7D70                      l737 7D58  
                    l761 7D2C                      l755 7D7A                      l747 7D72  
                    l739 7D68                      l763 7D32                      l771 7D80  
                    l757 7D7C                      l749 7D74                      l765 7D4E  
                    l773 7D88                      l767 7D54                      l759 7D1E  
                    l775 7D9A                      l777 7DA0                      l779 7DA6  
                   _CREN 007D5C                     _main 7D80                     start 0000  
           ___param_bank 000000                    ?_main 0001                    _IRCF0 007E9C  
                  _IRCF1 007E9D                    _IRCF2 007E9E                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _TXREG 000FAD                    main@c 0002  
                  status 000FD8          __initialization 7D16             __end_of_main 7DC0  
                 ??_main 0002            __activetblptr 000000                   isa$std 000001  
             __accesstop 0080  __end_of__initialization 7D16         ??_test_uart_init 0001  
       ??_test_uart_read 0001            ___rparam_used 000001           __pcstackCOMRAM 0001  
    test_uart_write@data 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7D16                  __ramtop 0600                  __ptext0 7D80  
                __ptext1 7D1C                  __ptext2 7D32                  __ptext3 7D58  
   end_of_initialization 7D16                _RCSTAbits 000FAB                _TRISCbits 000F94  
      ??_test_uart_write 0001                _TXSTAbits 000FAC              _BAUDCONbits 000FB8  
    start_initialization 7D16                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
               _PIR1bits 000F9E          _test_uart_write 7D1C                 __Hrparam 0000  
               __Lrparam 0000  __end_of_test_uart_write 7D32                 isa$xinst 000000  
         _test_uart_init 7D58           _test_uart_read 7D32   __end_of_test_uart_init 7D80  
 __end_of_test_uart_read 7D58          ?_test_uart_init 0001          ?_test_uart_read 0001  
