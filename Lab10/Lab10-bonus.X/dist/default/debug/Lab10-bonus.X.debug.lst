

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 19 05:09:46 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Version 2.40
    35                           ; Generated 04/07/2022 GMT
    36                           ; 
    37                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4520 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     _RCREG	set	4014
    70   000000                     _TXREG	set	4013
    71   000000                     _PIE1bits	set	3997
    72   000000                     _SPBRG	set	4015
    73   000000                     _BAUDCONbits	set	4024
    74   000000                     _PIR1bits	set	3998
    75   000000                     _CCP1CON	set	4029
    76   000000                     _ADCON0bits	set	4034
    77   000000                     _ADRESL	set	4035
    78   000000                     _ADRESH	set	4036
    79   000000                     _ADCON1	set	4033
    80   000000                     _ADFM	set	32263
    81   000000                     _ADCON2bits	set	4032
    82   000000                     _CREN	set	32092
    83   000000                     _RCIF	set	31989
    84   000000                     _IRCF0	set	32412
    85   000000                     _IRCF1	set	32413
    86   000000                     _LATD	set	3980
    87   000000                     _TRISA	set	3986
    88   000000                     _INTCONbits	set	4082
    89   000000                     _TRISCbits	set	3988
    90   000000                     _RCONbits	set	4048
    91   000000                     _TRISD	set	3989
    92   000000                     _RCSTAbits	set	4011
    93   000000                     _TXSTAbits	set	4012
    94   000000                     _IPR1bits	set	3999
    95   000000                     _IRCF2	set	32414
    96                           
    97                           ; #config settings
    98                           
    99                           	psect	cinit
   100   000416                     __pcinit:
   101                           	callstack 0
   102   000416                     start_initialization:
   103                           	callstack 0
   104   000416                     __initialization:
   105                           	callstack 0
   106                           
   107                           ; Clear objects allocated to COMRAM (42 bytes)
   108   000416  EE00  F001         	lfsr	0,__pbssCOMRAM
   109   00041A  0E2A               	movlw	42
   110   00041C                     clear_0:
   111   00041C  6AEE               	clrf	postinc0,c
   112   00041E  06E8               	decf	wreg,f,c
   113   000420  E1FD               	bnz	clear_0
   114   000422                     end_of_initialization:
   115                           	callstack 0
   116   000422                     __end_of__initialization:
   117                           	callstack 0
   118   000422  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   119   000424  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   120   000426  0100               	movlb	0
   121   000428  EF1C  F001         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	bssCOMRAM
   124   000001                     __pbssCOMRAM:
   125                           	callstack 0
   126   000001                     _lenStr:
   127                           	callstack 0
   128   000001                     	ds	2
   129   000003                     _str:
   130                           	callstack 0
   131   000003                     	ds	20
   132   000017                     _mystring:
   133                           	callstack 0
   134   000017                     	ds	20
   135                           
   136                           	psect	cstackCOMRAM
   137   00002B                     __pcstackCOMRAM:
   138                           	callstack 0
   139   00002B                     ?___awmod:
   140                           	callstack 0
   141   00002B                     i1UART_Write@data:
   142                           	callstack 0
   143   00002B                     ___awmod@dividend:
   144                           	callstack 0
   145   00002B                     i1ClearBuffer@i:
   146                           	callstack 0
   147                           
   148                           ; 2 bytes @ 0x0
   149   00002B                     	ds	2
   150   00002D                     ___awmod@divisor:
   151                           	callstack 0
   152                           
   153                           ; 2 bytes @ 0x2
   154   00002D                     	ds	2
   155   00002F                     ___awmod@counter:
   156                           	callstack 0
   157                           
   158                           ; 1 bytes @ 0x4
   159   00002F                     	ds	1
   160   000030                     ___awmod@sign:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x5
   164   000030                     	ds	1
   165   000031                     
   166                           ; 1 bytes @ 0x6
   167   000031                     	ds	1
   168   000032                     ??_Lo_ISR:
   169                           
   170                           ; 1 bytes @ 0x7
   171   000032                     	ds	5
   172   000037                     ?_GetString:
   173                           	callstack 0
   174   000037                     UART_Write@data:
   175                           	callstack 0
   176   000037                     ClearBuffer@i:
   177                           	callstack 0
   178                           
   179                           ; 2 bytes @ 0xC
   180   000037                     	ds	2
   181   000039                     strcpy@dest:
   182                           	callstack 0
   183                           
   184                           ; 2 bytes @ 0xE
   185   000039                     	ds	2
   186   00003B                     strcpy@src:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0x10
   190   00003B                     	ds	2
   191   00003D                     strcpy@s:
   192                           	callstack 0
   193                           
   194                           ; 2 bytes @ 0x12
   195   00003D                     	ds	2
   196   00003F                     strcpy@d:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x14
   200   00003F                     	ds	2
   201   000041                     ??_Mode1:
   202   000041                     ??_Mode2:
   203                           
   204                           ; 1 bytes @ 0x16
   205   000041                     	ds	2
   206   000043                     
   207                           ; 1 bytes @ 0x18
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   210 ;;
   211 ;; *************** function _main *****************
   212 ;; Defined at:
   213 ;;		line 60 in file "main.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;		None
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   222 ;; Tracked objects:
   223 ;;		On entry : 0/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   227 ;;      Params:         0       0       0       0       0       0       0
   228 ;;      Locals:         0       0       0       0       0       0       0
   229 ;;      Temps:          0       0       0       0       0       0       0
   230 ;;      Totals:         0       0       0       0       0       0       0
   231 ;;Total ram usage:        0 bytes
   232 ;; Hardware stack levels required when called: 6
   233 ;; This function calls:
   234 ;;		_ClearBuffer
   235 ;;		_GetString
   236 ;;		_Mode1
   237 ;;		_Mode2
   238 ;;		_SYSTEM_Initialize
   239 ;;		_strcpy
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text0
   246   000238                     __ptext0:
   247                           	callstack 0
   248   000238                     _main:
   249                           	callstack 25
   250   000238                     
   251                           ;main.c: 63:     SYSTEM_Initialize() ;
   252   000238  EC16  F002         	call	_SYSTEM_Initialize	;wreg free
   253   00023C                     l1228:
   254                           
   255                           ;main.c: 66:         strcpy(str, GetString());
   256   00023C  0E03               	movlw	low _str
   257   00023E  6E39               	movwf	strcpy@dest^0,c
   258   000240  0E00               	movlw	high _str
   259   000242  6E3A               	movwf	(strcpy@dest+1)^0,c
   260   000244  EC48  F002         	call	_GetString	;wreg free
   261   000248  C037  F03B         	movff	?_GetString,strcpy@src
   262   00024C  C038  F03C         	movff	?_GetString+1,strcpy@src+1
   263   000250  ECD7  F001         	call	_strcpy	;wreg free
   264   000254                     
   265                           ;main.c: 67:         if(str[0]=='m' && str[1]=='1'){
   266   000254  0E6D               	movlw	109
   267   000256  1803               	xorwf	_str^0,w,c
   268   000258  A4D8               	btfss	status,2,c
   269   00025A  EF31  F001         	goto	u361
   270   00025E  EF33  F001         	goto	u360
   271   000262                     u361:
   272   000262  EF42  F001         	goto	l1238
   273   000266                     u360:
   274   000266  0E31               	movlw	49
   275   000268  1804               	xorwf	(_str+1)^0,w,c
   276   00026A  A4D8               	btfss	status,2,c
   277   00026C  EF3A  F001         	goto	u371
   278   000270  EF3C  F001         	goto	u370
   279   000274                     u371:
   280   000274  EF42  F001         	goto	l1238
   281   000278                     u370:
   282   000278                     
   283                           ;main.c: 68:             Mode1();
   284   000278  ECD6  F000         	call	_Mode1	;wreg free
   285   00027C                     l1236:
   286                           
   287                           ;main.c: 69:             ClearBuffer();
   288   00027C  EC95  F001         	call	_ClearBuffer	;wreg free
   289                           
   290                           ;main.c: 70:         }
   291   000280  EF1E  F001         	goto	l1228
   292   000284                     l1238:
   293   000284  0E6D               	movlw	109
   294   000286  1803               	xorwf	_str^0,w,c
   295   000288  A4D8               	btfss	status,2,c
   296   00028A  EF49  F001         	goto	u381
   297   00028E  EF4B  F001         	goto	u380
   298   000292                     u381:
   299   000292  EF1E  F001         	goto	l1228
   300   000296                     u380:
   301   000296  0E32               	movlw	50
   302   000298  1804               	xorwf	(_str+1)^0,w,c
   303   00029A  A4D8               	btfss	status,2,c
   304   00029C  EF52  F001         	goto	u391
   305   0002A0  EF54  F001         	goto	u390
   306   0002A4                     u391:
   307   0002A4  EF1E  F001         	goto	l1228
   308   0002A8                     u390:
   309   0002A8                     
   310                           ;main.c: 72:             Mode2();
   311   0002A8  EC90  F000         	call	_Mode2	;wreg free
   312   0002AC  EF3E  F001         	goto	l1236
   313   0002B0  EF36  F000         	goto	start
   314   0002B4                     __end_of_main:
   315                           	callstack 0
   316                           
   317 ;; *************** function _SYSTEM_Initialize *****************
   318 ;; Defined at:
   319 ;;		line 60 in file "setting_hardaware/setting.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   333 ;;      Params:         0       0       0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0       0       0
   336 ;;      Totals:         0       0       0       0       0       0       0
   337 ;;Total ram usage:        0 bytes
   338 ;; Hardware stack levels used: 1
   339 ;; Hardware stack levels required when called: 5
   340 ;; This function calls:
   341 ;;		_ADC_Initialize
   342 ;;		_CCP1_Initialize
   343 ;;		_INTERRUPT_Initialize
   344 ;;		_OSCILLATOR_Initialize
   345 ;;		_UART_Initialize
   346 ;; This function is called by:
   347 ;;		_main
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text1
   352   00042C                     __ptext1:
   353                           	callstack 0
   354   00042C                     _SYSTEM_Initialize:
   355                           	callstack 25
   356   00042C                     
   357                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
   358   00042C  EC4D  F002         	call	_OSCILLATOR_Initialize	;wreg free
   359                           
   360                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
   361   000430  EC51  F002         	call	_INTERRUPT_Initialize	;wreg free
   362   000434                     
   363                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
   364   000434  ECF6  F001         	call	_UART_Initialize	;wreg free
   365   000438                     
   366                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
   367   000438  EC42  F002         	call	_CCP1_Initialize	;wreg free
   368   00043C                     
   369                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
   370   00043C  EC21  F002         	call	_ADC_Initialize	;wreg free
   371   000440  0012               	return		;funcret
   372   000442                     __end_of_SYSTEM_Initialize:
   373                           	callstack 0
   374                           
   375 ;; *************** function _UART_Initialize *****************
   376 ;; Defined at:
   377 ;;		line 7 in file "setting_hardaware/uart.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   391 ;;      Params:         0       0       0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0       0       0
   393 ;;      Temps:          0       0       0       0       0       0       0
   394 ;;      Totals:         0       0       0       0       0       0       0
   395 ;;Total ram usage:        0 bytes
   396 ;; Hardware stack levels used: 1
   397 ;; Hardware stack levels required when called: 4
   398 ;; This function calls:
   399 ;;		Nothing
   400 ;; This function is called by:
   401 ;;		_SYSTEM_Initialize
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           	psect	text2
   406   0003EC                     __ptext2:
   407                           	callstack 0
   408   0003EC                     _UART_Initialize:
   409                           	callstack 25
   410   0003EC                     
   411                           ;setting_hardaware/uart.c: 9:     TRISD = 0x00;
   412   0003EC  0E00               	movlw	0
   413   0003EE  6E95               	movwf	149,c	;volatile
   414                           
   415                           ;setting_hardaware/uart.c: 10:     LATD = 0x00;
   416   0003F0  0E00               	movlw	0
   417   0003F2  6E8C               	movwf	140,c	;volatile
   418   0003F4                     
   419                           ;setting_hardaware/uart.c: 12:     TRISCbits.TRISC6 = 1;
   420   0003F4  8C94               	bsf	148,6,c	;volatile
   421   0003F6                     
   422                           ;setting_hardaware/uart.c: 13:     TRISCbits.TRISC7 = 1;
   423   0003F6  8E94               	bsf	148,7,c	;volatile
   424   0003F8                     
   425                           ;setting_hardaware/uart.c: 16:     TXSTAbits.SYNC = 0;
   426   0003F8  98AC               	bcf	172,4,c	;volatile
   427   0003FA                     
   428                           ;setting_hardaware/uart.c: 17:     BAUDCONbits.BRG16 = 0;
   429   0003FA  96B8               	bcf	184,3,c	;volatile
   430   0003FC                     
   431                           ;setting_hardaware/uart.c: 18:     TXSTAbits.BRGH = 0;
   432   0003FC  94AC               	bcf	172,2,c	;volatile
   433                           
   434                           ;setting_hardaware/uart.c: 19:     SPBRG = 51;
   435   0003FE  0E33               	movlw	51
   436   000400  6EAF               	movwf	175,c	;volatile
   437   000402                     
   438                           ;setting_hardaware/uart.c: 22:     RCSTAbits.SPEN = 1;
   439   000402  8EAB               	bsf	171,7,c	;volatile
   440   000404                     
   441                           ;setting_hardaware/uart.c: 23:     PIR1bits.TXIF = 1;
   442   000404  889E               	bsf	158,4,c	;volatile
   443   000406                     
   444                           ;setting_hardaware/uart.c: 24:     PIR1bits.RCIF = 0;
   445   000406  9A9E               	bcf	158,5,c	;volatile
   446   000408                     
   447                           ;setting_hardaware/uart.c: 25:     TXSTAbits.TXEN = 1;
   448   000408  8AAC               	bsf	172,5,c	;volatile
   449   00040A                     
   450                           ;setting_hardaware/uart.c: 26:     RCSTAbits.CREN = 1;
   451   00040A  88AB               	bsf	171,4,c	;volatile
   452   00040C                     
   453                           ;setting_hardaware/uart.c: 27:     PIE1bits.TXIE = 0;
   454   00040C  989D               	bcf	157,4,c	;volatile
   455   00040E                     
   456                           ;setting_hardaware/uart.c: 28:     IPR1bits.TXIP = 0;
   457   00040E  989F               	bcf	159,4,c	;volatile
   458   000410                     
   459                           ;setting_hardaware/uart.c: 29:     PIE1bits.RCIE = 1;
   460   000410  8A9D               	bsf	157,5,c	;volatile
   461   000412                     
   462                           ;setting_hardaware/uart.c: 30:     IPR1bits.RCIP = 0;
   463   000412  9A9F               	bcf	159,5,c	;volatile
   464   000414  0012               	return		;funcret
   465   000416                     __end_of_UART_Initialize:
   466                           	callstack 0
   467                           
   468 ;; *************** function _OSCILLATOR_Initialize *****************
   469 ;; Defined at:
   470 ;;		line 73 in file "setting_hardaware/setting.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		None
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   484 ;;      Params:         0       0       0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0       0       0
   486 ;;      Temps:          0       0       0       0       0       0       0
   487 ;;      Totals:         0       0       0       0       0       0       0
   488 ;;Total ram usage:        0 bytes
   489 ;; Hardware stack levels used: 1
   490 ;; Hardware stack levels required when called: 4
   491 ;; This function calls:
   492 ;;		Nothing
   493 ;; This function is called by:
   494 ;;		_SYSTEM_Initialize
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           	psect	text3
   499   00049A                     __ptext3:
   500                           	callstack 0
   501   00049A                     _OSCILLATOR_Initialize:
   502                           	callstack 25
   503   00049A                     
   504                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
   505   00049A  8CD3               	bsf	4051,6,c	;volatile
   506                           
   507                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
   508   00049C  8AD3               	bsf	4051,5,c	;volatile
   509                           
   510                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
   511   00049E  98D3               	bcf	4051,4,c	;volatile
   512   0004A0  0012               	return		;funcret
   513   0004A2                     __end_of_OSCILLATOR_Initialize:
   514                           	callstack 0
   515                           
   516 ;; *************** function _INTERRUPT_Initialize *****************
   517 ;; Defined at:
   518 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		None
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   532 ;;      Params:         0       0       0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0       0       0
   535 ;;      Totals:         0       0       0       0       0       0       0
   536 ;;Total ram usage:        0 bytes
   537 ;; Hardware stack levels used: 1
   538 ;; Hardware stack levels required when called: 4
   539 ;; This function calls:
   540 ;;		Nothing
   541 ;; This function is called by:
   542 ;;		_SYSTEM_Initialize
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text4
   547   0004A2                     __ptext4:
   548                           	callstack 0
   549   0004A2                     _INTERRUPT_Initialize:
   550                           	callstack 25
   551   0004A2                     
   552                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
   553   0004A2  8ED0               	bsf	208,7,c	;volatile
   554                           
   555                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
   556   0004A4  8EF2               	bsf	242,7,c	;volatile
   557                           
   558                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
   559   0004A6  8CF2               	bsf	242,6,c	;volatile
   560   0004A8  0012               	return		;funcret
   561   0004AA                     __end_of_INTERRUPT_Initialize:
   562                           	callstack 0
   563                           
   564 ;; *************** function _CCP1_Initialize *****************
   565 ;; Defined at:
   566 ;;		line 3 in file "setting_hardaware/ccp1.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, status,2
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   580 ;;      Params:         0       0       0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used: 1
   586 ;; Hardware stack levels required when called: 4
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_SYSTEM_Initialize
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text5
   595   000484                     __ptext5:
   596                           	callstack 0
   597   000484                     _CCP1_Initialize:
   598                           	callstack 25
   599   000484                     
   600                           ;setting_hardaware/ccp1.c: 4:     TRISCbits.TRISC2=0;
   601   000484  9494               	bcf	148,2,c	;volatile
   602   000486                     
   603                           ;setting_hardaware/ccp1.c: 5:     CCP1CON=9;
   604   000486  0E09               	movlw	9
   605   000488  6EBD               	movwf	189,c	;volatile
   606   00048A                     
   607                           ;setting_hardaware/ccp1.c: 6:     PIR1bits.CCP1IF=0;
   608   00048A  949E               	bcf	158,2,c	;volatile
   609   00048C                     
   610                           ;setting_hardaware/ccp1.c: 7:     IPR1bits.CCP1IP = 1;
   611   00048C  849F               	bsf	159,2,c	;volatile
   612   00048E  0012               	return		;funcret
   613   000490                     __end_of_CCP1_Initialize:
   614                           	callstack 0
   615                           
   616 ;; *************** function _ADC_Initialize *****************
   617 ;; Defined at:
   618 ;;		line 3 in file "setting_hardaware/adc.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, status,2
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   632 ;;      Params:         0       0       0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used: 1
   638 ;; Hardware stack levels required when called: 4
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_SYSTEM_Initialize
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text6
   647   000442                     __ptext6:
   648                           	callstack 0
   649   000442                     _ADC_Initialize:
   650                           	callstack 25
   651   000442                     
   652                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
   653   000442  6892               	setf	146,c	;volatile
   654   000444                     
   655                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
   656   000444  0E0E               	movlw	14
   657   000446  6EC1               	movwf	193,c	;volatile
   658   000448                     
   659                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
   660   000448  8EC0               	bsf	4032,7,c	;volatile
   661                           
   662                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
   663   00044A  0E07               	movlw	7
   664   00044C  12C0               	iorwf	192,f,c	;volatile
   665                           
   666                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
   667   00044E  0E00               	movlw	0
   668   000450  6EC4               	movwf	196,c	;volatile
   669                           
   670                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
   671   000452  0E00               	movlw	0
   672   000454  6EC3               	movwf	195,c	;volatile
   673   000456  0012               	return		;funcret
   674   000458                     __end_of_ADC_Initialize:
   675                           	callstack 0
   676                           
   677 ;; *************** function _Mode2 *****************
   678 ;; Defined at:
   679 ;;		line 36 in file "main.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   693 ;;      Params:         0       0       0       0       0       0       0
   694 ;;      Locals:         0       0       0       0       0       0       0
   695 ;;      Temps:          2       0       0       0       0       0       0
   696 ;;      Totals:         2       0       0       0       0       0       0
   697 ;;Total ram usage:        2 bytes
   698 ;; Hardware stack levels used: 1
   699 ;; Hardware stack levels required when called: 5
   700 ;; This function calls:
   701 ;;		_ClearBuffer
   702 ;;		_GetString
   703 ;;		_UART_Write
   704 ;;		_strcpy
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text7
   711   000120                     __ptext7:
   712                           	callstack 0
   713   000120                     _Mode2:
   714                           	callstack 25
   715   000120                     
   716                           ;main.c: 37:     ClearBuffer();
   717   000120  EC95  F001         	call	_ClearBuffer	;wreg free
   718   000124                     
   719                           ;main.c: 38:     UART_Write('\n');
   720   000124  0E0A               	movlw	10
   721   000126  EC2C  F002         	call	_UART_Write
   722   00012A                     
   723                           ;main.c: 39:     UART_Write('\r');
   724   00012A  0E0D               	movlw	13
   725   00012C  EC2C  F002         	call	_UART_Write
   726   000130                     
   727                           ;main.c: 41:     strcpy(str, GetString());
   728   000130  0E03               	movlw	low _str
   729   000132  6E39               	movwf	strcpy@dest^0,c
   730   000134  0E00               	movlw	high _str
   731   000136  6E3A               	movwf	(strcpy@dest+1)^0,c
   732   000138  EC48  F002         	call	_GetString	;wreg free
   733   00013C  C037  F03B         	movff	?_GetString,strcpy@src
   734   000140  C038  F03C         	movff	?_GetString+1,strcpy@src+1
   735   000144  ECD7  F001         	call	_strcpy	;wreg free
   736   000148                     
   737                           ;main.c: 42:     LATD = 0b10001000;
   738   000148  0E88               	movlw	136
   739   00014A  6E8C               	movwf	140,c	;volatile
   740   00014C                     l1202:
   741                           
   742                           ;main.c: 44:     {;main.c: 45:         strcpy(str, GetString());
   743   00014C  0E03               	movlw	low _str
   744   00014E  6E39               	movwf	strcpy@dest^0,c
   745   000150  0E00               	movlw	high _str
   746   000152  6E3A               	movwf	(strcpy@dest+1)^0,c
   747   000154  EC48  F002         	call	_GetString	;wreg free
   748   000158  C037  F03B         	movff	?_GetString,strcpy@src
   749   00015C  C038  F03C         	movff	?_GetString+1,strcpy@src+1
   750   000160  ECD7  F001         	call	_strcpy	;wreg free
   751   000164                     
   752                           ;main.c: 46:         if (str[0] == 'e')
   753   000164  0E65               	movlw	101
   754   000166  1803               	xorwf	_str^0,w,c
   755   000168  A4D8               	btfss	status,2,c
   756   00016A  EFB9  F000         	goto	u331
   757   00016E  EFBB  F000         	goto	u330
   758   000172                     u331:
   759   000172  EFC5  F000         	goto	l159
   760   000176                     u330:
   761   000176                     
   762                           ;main.c: 47:         {;main.c: 48:             UART_Write('\n');
   763   000176  0E0A               	movlw	10
   764   000178  EC2C  F002         	call	_UART_Write
   765                           
   766                           ;main.c: 49:             UART_Write('\r');
   767   00017C  0E0D               	movlw	13
   768   00017E  EC2C  F002         	call	_UART_Write
   769   000182                     
   770                           ;main.c: 50:             ClearBuffer();
   771   000182  EC95  F001         	call	_ClearBuffer	;wreg free
   772                           
   773                           ;main.c: 51:             break;
   774   000186  EFD3  F000         	goto	l1212
   775   00018A                     l159:
   776   00018A  428C               	rrncf	3980,f,c	;# 
   777   00018C                     
   778                           ;main.c: 54:         _delay((unsigned long)((500)*(8000000/4000.0)));
   779   00018C  0E06               	movlw	6
   780   00018E  6E42               	movwf	(??_Mode2+1)^0,c
   781   000190  0E13               	movlw	19
   782   000192  6E41               	movwf	??_Mode2^0,c
   783   000194  0EAE               	movlw	174
   784   000196                     u407:
   785   000196  2EE8               	decfsz	wreg,f,c
   786   000198  D7FE               	bra	u407
   787   00019A  2E41               	decfsz	??_Mode2^0,f,c
   788   00019C  D7FC               	bra	u407
   789   00019E  2E42               	decfsz	(??_Mode2+1)^0,f,c
   790   0001A0  D7FA               	bra	u407
   791   0001A2  EFA6  F000         	goto	l1202
   792   0001A6                     l1212:
   793                           
   794                           ;main.c: 56:     LATD = 0;
   795   0001A6  0E00               	movlw	0
   796   0001A8  6E8C               	movwf	140,c	;volatile
   797   0001AA  0012               	return		;funcret
   798   0001AC                     __end_of_Mode2:
   799                           	callstack 0
   800                           
   801 ;; *************** function _Mode1 *****************
   802 ;; Defined at:
   803 ;;		line 12 in file "main.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   817 ;;      Params:         0       0       0       0       0       0       0
   818 ;;      Locals:         0       0       0       0       0       0       0
   819 ;;      Temps:          2       0       0       0       0       0       0
   820 ;;      Totals:         2       0       0       0       0       0       0
   821 ;;Total ram usage:        2 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; Hardware stack levels required when called: 5
   824 ;; This function calls:
   825 ;;		_ClearBuffer
   826 ;;		_GetString
   827 ;;		_UART_Write
   828 ;;		_strcpy
   829 ;; This function is called by:
   830 ;;		_main
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text8
   835   0001AC                     __ptext8:
   836                           	callstack 0
   837   0001AC                     _Mode1:
   838                           	callstack 25
   839   0001AC                     
   840                           ;main.c: 13:     ClearBuffer();
   841   0001AC  EC95  F001         	call	_ClearBuffer	;wreg free
   842   0001B0                     
   843                           ;main.c: 14:     UART_Write('\n');
   844   0001B0  0E0A               	movlw	10
   845   0001B2  EC2C  F002         	call	_UART_Write
   846   0001B6                     
   847                           ;main.c: 15:     UART_Write('\r');
   848   0001B6  0E0D               	movlw	13
   849   0001B8  EC2C  F002         	call	_UART_Write
   850   0001BC                     
   851                           ;main.c: 17:     strcpy(str, GetString());
   852   0001BC  0E03               	movlw	low _str
   853   0001BE  6E39               	movwf	strcpy@dest^0,c
   854   0001C0  0E00               	movlw	high _str
   855   0001C2  6E3A               	movwf	(strcpy@dest+1)^0,c
   856   0001C4  EC48  F002         	call	_GetString	;wreg free
   857   0001C8  C037  F03B         	movff	?_GetString,strcpy@src
   858   0001CC  C038  F03C         	movff	?_GetString+1,strcpy@src+1
   859   0001D0  ECD7  F001         	call	_strcpy	;wreg free
   860   0001D4                     
   861                           ;main.c: 18:     LATD = 0b01010101;
   862   0001D4  0E55               	movlw	85
   863   0001D6  6E8C               	movwf	140,c	;volatile
   864   0001D8                     l1178:
   865                           
   866                           ;main.c: 20:     {;main.c: 21:         strcpy(str, GetString());
   867   0001D8  0E03               	movlw	low _str
   868   0001DA  6E39               	movwf	strcpy@dest^0,c
   869   0001DC  0E00               	movlw	high _str
   870   0001DE  6E3A               	movwf	(strcpy@dest+1)^0,c
   871   0001E0  EC48  F002         	call	_GetString	;wreg free
   872   0001E4  C037  F03B         	movff	?_GetString,strcpy@src
   873   0001E8  C038  F03C         	movff	?_GetString+1,strcpy@src+1
   874   0001EC  ECD7  F001         	call	_strcpy	;wreg free
   875   0001F0                     
   876                           ;main.c: 22:         if (str[0] == 'e')
   877   0001F0  0E65               	movlw	101
   878   0001F2  1803               	xorwf	_str^0,w,c
   879   0001F4  A4D8               	btfss	status,2,c
   880   0001F6  EFFF  F000         	goto	u321
   881   0001FA  EF01  F001         	goto	u320
   882   0001FE                     u321:
   883   0001FE  EF0B  F001         	goto	l152
   884   000202                     u320:
   885   000202                     
   886                           ;main.c: 23:         {;main.c: 24:             UART_Write('\n');
   887   000202  0E0A               	movlw	10
   888   000204  EC2C  F002         	call	_UART_Write
   889                           
   890                           ;main.c: 25:             UART_Write('\r');
   891   000208  0E0D               	movlw	13
   892   00020A  EC2C  F002         	call	_UART_Write
   893   00020E                     
   894                           ;main.c: 26:             ClearBuffer();
   895   00020E  EC95  F001         	call	_ClearBuffer	;wreg free
   896                           
   897                           ;main.c: 27:             break;
   898   000212  EF19  F001         	goto	l1188
   899   000216                     l152:
   900   000216  428C               	rrncf	3980,f,c	;# 
   901   000218                     
   902                           ;main.c: 30:         _delay((unsigned long)((500)*(8000000/4000.0)));
   903   000218  0E06               	movlw	6
   904   00021A  6E42               	movwf	(??_Mode1+1)^0,c
   905   00021C  0E13               	movlw	19
   906   00021E  6E41               	movwf	??_Mode1^0,c
   907   000220  0EAE               	movlw	174
   908   000222                     u417:
   909   000222  2EE8               	decfsz	wreg,f,c
   910   000224  D7FE               	bra	u417
   911   000226  2E41               	decfsz	??_Mode1^0,f,c
   912   000228  D7FC               	bra	u417
   913   00022A  2E42               	decfsz	(??_Mode1+1)^0,f,c
   914   00022C  D7FA               	bra	u417
   915   00022E  EFEC  F000         	goto	l1178
   916   000232                     l1188:
   917                           
   918                           ;main.c: 32:     LATD = 0;
   919   000232  0E00               	movlw	0
   920   000234  6E8C               	movwf	140,c	;volatile
   921   000236  0012               	return		;funcret
   922   000238                     __end_of_Mode1:
   923                           	callstack 0
   924                           
   925 ;; *************** function _strcpy *****************
   926 ;; Defined at:
   927 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  dest            2   14[COMRAM] PTR unsigned char 
   930 ;;		 -> str(20), 
   931 ;;  src             2   16[COMRAM] PTR const unsigned char 
   932 ;;		 -> mystring(20), 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  d               2   20[COMRAM] PTR unsigned char 
   935 ;;		 -> str(20), 
   936 ;;  s               2   18[COMRAM] PTR const unsigned char 
   937 ;;		 -> mystring(20), 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  2   14[COMRAM] PTR unsigned char 
   940 ;; Registers used:
   941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   947 ;;      Params:         4       0       0       0       0       0       0
   948 ;;      Locals:         4       0       0       0       0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0
   950 ;;      Totals:         8       0       0       0       0       0       0
   951 ;;Total ram usage:        8 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; Hardware stack levels required when called: 4
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_Mode1
   958 ;;		_Mode2
   959 ;;		_main
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text9
   964   0003AE                     __ptext9:
   965                           	callstack 0
   966   0003AE                     _strcpy:
   967                           	callstack 26
   968   0003AE  C03B  F03D         	movff	strcpy@src,strcpy@s
   969   0003B2  C03C  F03E         	movff	strcpy@src+1,strcpy@s+1
   970   0003B6  C039  F03F         	movff	strcpy@dest,strcpy@d
   971   0003BA  C03A  F040         	movff	strcpy@dest+1,strcpy@d+1
   972   0003BE                     l1112:
   973   0003BE  C03D  FFD9         	movff	strcpy@s,fsr2l
   974   0003C2  C03E  FFDA         	movff	strcpy@s+1,fsr2h
   975   0003C6  4A3D               	infsnz	strcpy@s^0,f,c
   976   0003C8  2A3E               	incf	(strcpy@s+1)^0,f,c
   977   0003CA  C03F  FFE1         	movff	strcpy@d,fsr1l
   978   0003CE  C040  FFE2         	movff	strcpy@d+1,fsr1h
   979   0003D2  4A3F               	infsnz	strcpy@d^0,f,c
   980   0003D4  2A40               	incf	(strcpy@d+1)^0,f,c
   981   0003D6  CFDF FFE7          	movff	indf2,indf1
   982   0003DA  50E7               	movf	indf1,w,c
   983   0003DC  A4D8               	btfss	status,2,c
   984   0003DE  EFF3  F001         	goto	u231
   985   0003E2  EFF5  F001         	goto	u230
   986   0003E6                     u231:
   987   0003E6  EFDF  F001         	goto	l1112
   988   0003EA                     u230:
   989   0003EA  0012               	return		;funcret
   990   0003EC                     __end_of_strcpy:
   991                           	callstack 0
   992                           
   993 ;; *************** function _UART_Write *****************
   994 ;; Defined at:
   995 ;;		line 33 in file "setting_hardaware/uart.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  data            1    wreg     unsigned char 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  data            1   12[COMRAM] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1009 ;;      Params:         0       0       0       0       0       0       0
  1010 ;;      Locals:         1       0       0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0       0       0
  1012 ;;      Totals:         1       0       0       0       0       0       0
  1013 ;;Total ram usage:        1 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 4
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_Mode1
  1020 ;;		_Mode2
  1021 ;;		_UART_Write_Text
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text10
  1026   000458                     __ptext10:
  1027                           	callstack 0
  1028   000458                     _UART_Write:
  1029                           	callstack 25
  1030                           
  1031                           ;incstack = 0
  1032                           ;UART_Write@data stored from wreg
  1033   000458  6E37               	movwf	UART_Write@data^0,c
  1034   00045A                     l103:
  1035   00045A  A2AC               	btfss	172,1,c	;volatile
  1036   00045C  EF32  F002         	goto	u11
  1037   000460  EF34  F002         	goto	u10
  1038   000464                     u11:
  1039   000464  EF2D  F002         	goto	l103
  1040   000468                     u10:
  1041   000468                     
  1042                           ;setting_hardaware/uart.c: 36:     TXREG = data;
  1043   000468  C037  FFAD         	movff	UART_Write@data,4013	;volatile
  1044   00046C  0012               	return		;funcret
  1045   00046E                     __end_of_UART_Write:
  1046                           	callstack 0
  1047                           
  1048 ;; *************** function _GetString *****************
  1049 ;; Defined at:
  1050 ;;		line 68 in file "setting_hardaware/uart.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;		None
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;		None
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  2   12[COMRAM] PTR unsigned char 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1064 ;;      Params:         2       0       0       0       0       0       0
  1065 ;;      Locals:         0       0       0       0       0       0       0
  1066 ;;      Temps:          0       0       0       0       0       0       0
  1067 ;;      Totals:         2       0       0       0       0       0       0
  1068 ;;Total ram usage:        2 bytes
  1069 ;; Hardware stack levels used: 1
  1070 ;; Hardware stack levels required when called: 4
  1071 ;; This function calls:
  1072 ;;		Nothing
  1073 ;; This function is called by:
  1074 ;;		_Mode1
  1075 ;;		_Mode2
  1076 ;;		_main
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text11
  1081   000490                     __ptext11:
  1082                           	callstack 0
  1083   000490                     _GetString:
  1084                           	callstack 25
  1085   000490                     
  1086                           ;setting_hardaware/uart.c: 69:     return mystring;
  1087   000490  0E17               	movlw	low _mystring
  1088   000492  6E37               	movwf	?_GetString^0,c
  1089   000494  0E00               	movlw	high _mystring
  1090   000496  6E38               	movwf	(?_GetString+1)^0,c
  1091   000498  0012               	return		;funcret
  1092   00049A                     __end_of_GetString:
  1093                           	callstack 0
  1094                           
  1095 ;; *************** function _ClearBuffer *****************
  1096 ;; Defined at:
  1097 ;;		line 45 in file "setting_hardaware/uart.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  i               2   12[COMRAM] int 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1111 ;;      Params:         0       0       0       0       0       0       0
  1112 ;;      Locals:         2       0       0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0
  1114 ;;      Totals:         2       0       0       0       0       0       0
  1115 ;;Total ram usage:        2 bytes
  1116 ;; Hardware stack levels used: 1
  1117 ;; Hardware stack levels required when called: 4
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_Mode1
  1122 ;;		_Mode2
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text12
  1128   00032A                     __ptext12:
  1129                           	callstack 0
  1130   00032A                     _ClearBuffer:
  1131                           	callstack 25
  1132   00032A                     
  1133                           ;setting_hardaware/uart.c: 46:     for(int i = 0; i < 10 ; i++)
  1134   00032A  0E00               	movlw	0
  1135   00032C  6E38               	movwf	(ClearBuffer@i+1)^0,c
  1136   00032E  0E00               	movlw	0
  1137   000330  6E37               	movwf	ClearBuffer@i^0,c
  1138   000332                     l918:
  1139                           
  1140                           ;setting_hardaware/uart.c: 47:         mystring[i] = '\0';
  1141   000332  0E17               	movlw	low _mystring
  1142   000334  2437               	addwf	ClearBuffer@i^0,w,c
  1143   000336  6ED9               	movwf	fsr2l,c
  1144   000338  0E00               	movlw	high _mystring
  1145   00033A  2038               	addwfc	(ClearBuffer@i+1)^0,w,c
  1146   00033C  6EDA               	movwf	fsr2h,c
  1147   00033E  0E00               	movlw	0
  1148   000340  6EDF               	movwf	indf2,c
  1149   000342  4A37               	infsnz	ClearBuffer@i^0,f,c
  1150   000344  2A38               	incf	(ClearBuffer@i+1)^0,f,c
  1151   000346  BE38               	btfsc	(ClearBuffer@i+1)^0,7,c
  1152   000348  EFAF  F001         	goto	u21
  1153   00034C  5038               	movf	(ClearBuffer@i+1)^0,w,c
  1154   00034E  E109               	bnz	u20
  1155   000350  0E0A               	movlw	10
  1156   000352  5C37               	subwf	ClearBuffer@i^0,w,c
  1157   000354  A0D8               	btfss	status,0,c
  1158   000356  EFAF  F001         	goto	u21
  1159   00035A  EFB1  F001         	goto	u20
  1160   00035E                     u21:
  1161   00035E  EF99  F001         	goto	l918
  1162   000362                     u20:
  1163   000362                     
  1164                           ;setting_hardaware/uart.c: 48:     lenStr = 0;
  1165   000362  0E00               	movlw	0
  1166   000364  6E02               	movwf	(_lenStr+1)^0,c
  1167   000366  0E00               	movlw	0
  1168   000368  6E01               	movwf	_lenStr^0,c
  1169   00036A  0012               	return		;funcret
  1170   00036C                     __end_of_ClearBuffer:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function _Lo_ISR *****************
  1174 ;; Defined at:
  1175 ;;		line 74 in file "setting_hardaware/uart.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1189 ;;      Params:         0       0       0       0       0       0       0
  1190 ;;      Locals:         0       0       0       0       0       0       0
  1191 ;;      Temps:          5       0       0       0       0       0       0
  1192 ;;      Totals:         5       0       0       0       0       0       0
  1193 ;;Total ram usage:        5 bytes
  1194 ;; Hardware stack levels used: 1
  1195 ;; Hardware stack levels required when called: 3
  1196 ;; This function calls:
  1197 ;;		_MyusartRead
  1198 ;; This function is called by:
  1199 ;;		Interrupt level 1
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	intcodelo
  1204   000018                     __pintcodelo:
  1205                           	callstack 0
  1206   000018                     _Lo_ISR:
  1207                           	callstack 25
  1208                           
  1209                           ;incstack = 0
  1210   000018  8043               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1211   00001A  CFD8 F032          	movff	status,??_Lo_ISR
  1212   00001E  CFE8 F033          	movff	wreg,??_Lo_ISR+1
  1213   000022  CFE0 F034          	movff	bsr,??_Lo_ISR+2
  1214   000026  CFD9 F035          	movff	fsr2l,??_Lo_ISR+3
  1215   00002A  CFDA F036          	movff	fsr2h,??_Lo_ISR+4
  1216   00002E                     
  1217                           ;setting_hardaware/uart.c: 76:     if(RCIF)
  1218   00002E  AA9E               	btfss	3998,5,c	;volatile
  1219   000030  EF1C  F000         	goto	i1u34_21
  1220   000034  EF1E  F000         	goto	i1u34_20
  1221   000038                     i1u34_21:
  1222   000038  EF2A  F000         	goto	i1l132
  1223   00003C                     i1u34_20:
  1224   00003C                     
  1225                           ;setting_hardaware/uart.c: 77:     {;setting_hardaware/uart.c: 78:         if(RCSTAbits.
      +                          OERR)
  1226   00003C  A2AB               	btfss	171,1,c	;volatile
  1227   00003E  EF23  F000         	goto	i1u35_21
  1228   000042  EF25  F000         	goto	i1u35_20
  1229   000046                     i1u35_21:
  1230   000046  EF28  F000         	goto	i1l1222
  1231   00004A                     i1u35_20:
  1232   00004A                     
  1233                           ;setting_hardaware/uart.c: 79:         {;setting_hardaware/uart.c: 80:             CREN 
      +                          = 0;
  1234   00004A  98AB               	bcf	4011,4,c	;volatile
  1235                           
  1236                           ;setting_hardaware/uart.c: 81:             __nop();
  1237   00004C  F000               	nop	
  1238                           
  1239                           ;setting_hardaware/uart.c: 82:             CREN = 1;
  1240   00004E  88AB               	bsf	4011,4,c	;volatile
  1241   000050                     i1l1222:
  1242                           
  1243                           ;setting_hardaware/uart.c: 85:         MyusartRead();
  1244   000050  EC5A  F001         	call	_MyusartRead	;wreg free
  1245   000054                     i1l132:
  1246   000054  C036  FFDA         	movff	??_Lo_ISR+4,fsr2h
  1247   000058  C035  FFD9         	movff	??_Lo_ISR+3,fsr2l
  1248   00005C  C034  FFE0         	movff	??_Lo_ISR+2,bsr
  1249   000060  C033  FFE8         	movff	??_Lo_ISR+1,wreg
  1250   000064  C032  FFD8         	movff	??_Lo_ISR,status
  1251   000068  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1252   00006A  0010               	retfie	
  1253   00006C                     __end_of_Lo_ISR:
  1254                           	callstack 0
  1255                           
  1256 ;; *************** function _MyusartRead *****************
  1257 ;; Defined at:
  1258 ;;		line 51 in file "setting_hardaware/uart.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1272 ;;      Params:         0       0       0       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0       0       0
  1274 ;;      Temps:          1       0       0       0       0       0       0
  1275 ;;      Totals:         1       0       0       0       0       0       0
  1276 ;;Total ram usage:        1 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 2
  1279 ;; This function calls:
  1280 ;;		___awmod
  1281 ;;		i1_ClearBuffer
  1282 ;;		i1_UART_Write
  1283 ;; This function is called by:
  1284 ;;		_Lo_ISR
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text14
  1289   0002B4                     __ptext14:
  1290                           	callstack 0
  1291   0002B4                     _MyusartRead:
  1292                           	callstack 25
  1293   0002B4                     
  1294                           ;setting_hardaware/uart.c: 54:     mystring[lenStr] = RCREG;
  1295   0002B4  0E17               	movlw	low _mystring
  1296   0002B6  2401               	addwf	_lenStr^0,w,c
  1297   0002B8  6ED9               	movwf	fsr2l,c
  1298   0002BA  0E00               	movlw	high _mystring
  1299   0002BC  2002               	addwfc	(_lenStr+1)^0,w,c
  1300   0002BE  6EDA               	movwf	fsr2h,c
  1301   0002C0  CFAE FFDF          	movff	4014,indf2	;volatile
  1302                           
  1303                           ;setting_hardaware/uart.c: 55:     if(mystring[lenStr] == '\r'){
  1304   0002C4  0E17               	movlw	low _mystring
  1305   0002C6  2401               	addwf	_lenStr^0,w,c
  1306   0002C8  6ED9               	movwf	fsr2l,c
  1307   0002CA  0E00               	movlw	high _mystring
  1308   0002CC  2002               	addwfc	(_lenStr+1)^0,w,c
  1309   0002CE  6EDA               	movwf	fsr2h,c
  1310   0002D0  0E0D               	movlw	13
  1311   0002D2  18DE               	xorwf	postinc2,w,c
  1312   0002D4  A4D8               	btfss	status,2,c
  1313   0002D6  EF6F  F001         	goto	i1u31_21
  1314   0002DA  EF71  F001         	goto	i1u31_20
  1315   0002DE                     i1u31_21:
  1316   0002DE  EF7B  F001         	goto	i1l1160
  1317   0002E2                     i1u31_20:
  1318   0002E2                     
  1319                           ;setting_hardaware/uart.c: 56:         UART_Write('\n');
  1320   0002E2  0E0A               	movlw	10
  1321   0002E4  EC37  F002         	call	i1_UART_Write
  1322                           
  1323                           ;setting_hardaware/uart.c: 57:         UART_Write('\r');
  1324   0002E8  0E0D               	movlw	13
  1325   0002EA  EC37  F002         	call	i1_UART_Write
  1326   0002EE                     
  1327                           ;setting_hardaware/uart.c: 58:         ClearBuffer();
  1328   0002EE  ECB6  F001         	call	i1_ClearBuffer	;wreg free
  1329                           
  1330                           ;setting_hardaware/uart.c: 59:     } else {
  1331   0002F2  EF94  F001         	goto	i1l122
  1332   0002F6                     i1l1160:
  1333                           
  1334                           ;setting_hardaware/uart.c: 60:         UART_Write(mystring[lenStr]);
  1335   0002F6  0E17               	movlw	low _mystring
  1336   0002F8  2401               	addwf	_lenStr^0,w,c
  1337   0002FA  6ED9               	movwf	fsr2l,c
  1338   0002FC  0E00               	movlw	high _mystring
  1339   0002FE  2002               	addwfc	(_lenStr+1)^0,w,c
  1340   000300  6EDA               	movwf	fsr2h,c
  1341   000302  50DF               	movf	indf2,w,c
  1342   000304  EC37  F002         	call	i1_UART_Write
  1343   000308                     
  1344                           ;setting_hardaware/uart.c: 61:         lenStr++;
  1345   000308  4A01               	infsnz	_lenStr^0,f,c
  1346   00030A  2A02               	incf	(_lenStr+1)^0,f,c
  1347   00030C                     
  1348                           ;setting_hardaware/uart.c: 62:         lenStr %= 20;
  1349   00030C  C001  F02B         	movff	_lenStr,___awmod@dividend
  1350   000310  C002  F02C         	movff	_lenStr+1,___awmod@dividend+1
  1351   000314  0E00               	movlw	0
  1352   000316  6E2E               	movwf	(___awmod@divisor+1)^0,c
  1353   000318  0E14               	movlw	20
  1354   00031A  6E2D               	movwf	___awmod@divisor^0,c
  1355   00031C  EC38  F000         	call	___awmod	;wreg free
  1356   000320  C02B  F001         	movff	?___awmod,_lenStr
  1357   000324  C02C  F002         	movff	?___awmod+1,_lenStr+1
  1358   000328                     i1l122:
  1359   000328  0012               	return		;funcret
  1360   00032A                     __end_of_MyusartRead:
  1361                           	callstack 0
  1362                           
  1363 ;; *************** function i1_UART_Write *****************
  1364 ;; Defined at:
  1365 ;;		line 33 in file "setting_hardaware/uart.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  data            1    wreg     unsigned char 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  data            1    0[COMRAM] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1379 ;;      Params:         0       0       0       0       0       0       0
  1380 ;;      Locals:         1       0       0       0       0       0       0
  1381 ;;      Temps:          0       0       0       0       0       0       0
  1382 ;;      Totals:         1       0       0       0       0       0       0
  1383 ;;Total ram usage:        1 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 1
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_MyusartRead
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text15
  1394   00046E                     __ptext15:
  1395                           	callstack 0
  1396   00046E                     i1_UART_Write:
  1397                           	callstack 25
  1398                           
  1399                           ;incstack = 0
  1400                           ;i1UART_Write@data stored from wreg
  1401   00046E  6E2B               	movwf	i1UART_Write@data^0,c
  1402   000470                     i1l103:
  1403   000470  A2AC               	btfss	172,1,c	;volatile
  1404   000472  EF3D  F002         	goto	i1u30_21
  1405   000476  EF3F  F002         	goto	i1u30_20
  1406   00047A                     i1u30_21:
  1407   00047A  EF38  F002         	goto	i1l103
  1408   00047E                     i1u30_20:
  1409   00047E                     
  1410                           ;setting_hardaware/uart.c: 36:     TXREG = data;
  1411   00047E  C02B  FFAD         	movff	i1UART_Write@data,4013	;volatile
  1412   000482  0012               	return		;funcret
  1413   000484                     __end_ofi1_UART_Write:
  1414                           	callstack 0
  1415                           
  1416 ;; *************** function i1_ClearBuffer *****************
  1417 ;; Defined at:
  1418 ;;		line 45 in file "setting_hardaware/uart.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  i               2    0[COMRAM] int 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1432 ;;      Params:         0       0       0       0       0       0       0
  1433 ;;      Locals:         2       0       0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0
  1435 ;;      Totals:         2       0       0       0       0       0       0
  1436 ;;Total ram usage:        2 bytes
  1437 ;; Hardware stack levels used: 1
  1438 ;; Hardware stack levels required when called: 1
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_MyusartRead
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text16
  1447   00036C                     __ptext16:
  1448                           	callstack 0
  1449   00036C                     i1_ClearBuffer:
  1450                           	callstack 25
  1451   00036C                     
  1452                           ;setting_hardaware/uart.c: 46:     for(int i = 0; i < 10 ; i++)
  1453   00036C  0E00               	movlw	0
  1454   00036E  6E2C               	movwf	(i1ClearBuffer@i+1)^0,c
  1455   000370  0E00               	movlw	0
  1456   000372  6E2B               	movwf	i1ClearBuffer@i^0,c
  1457   000374                     i1l980:
  1458                           
  1459                           ;setting_hardaware/uart.c: 47:         mystring[i] = '\0';
  1460   000374  0E17               	movlw	low _mystring
  1461   000376  242B               	addwf	i1ClearBuffer@i^0,w,c
  1462   000378  6ED9               	movwf	fsr2l,c
  1463   00037A  0E00               	movlw	high _mystring
  1464   00037C  202C               	addwfc	(i1ClearBuffer@i+1)^0,w,c
  1465   00037E  6EDA               	movwf	fsr2h,c
  1466   000380  0E00               	movlw	0
  1467   000382  6EDF               	movwf	indf2,c
  1468   000384  4A2B               	infsnz	i1ClearBuffer@i^0,f,c
  1469   000386  2A2C               	incf	(i1ClearBuffer@i+1)^0,f,c
  1470   000388  BE2C               	btfsc	(i1ClearBuffer@i+1)^0,7,c
  1471   00038A  EFD0  F001         	goto	i1u11_21
  1472   00038E  502C               	movf	(i1ClearBuffer@i+1)^0,w,c
  1473   000390  E109               	bnz	i1u11_20
  1474   000392  0E0A               	movlw	10
  1475   000394  5C2B               	subwf	i1ClearBuffer@i^0,w,c
  1476   000396  A0D8               	btfss	status,0,c
  1477   000398  EFD0  F001         	goto	i1u11_21
  1478   00039C  EFD2  F001         	goto	i1u11_20
  1479   0003A0                     i1u11_21:
  1480   0003A0  EFBA  F001         	goto	i1l980
  1481   0003A4                     i1u11_20:
  1482   0003A4                     
  1483                           ;setting_hardaware/uart.c: 48:     lenStr = 0;
  1484   0003A4  0E00               	movlw	0
  1485   0003A6  6E02               	movwf	(_lenStr+1)^0,c
  1486   0003A8  0E00               	movlw	0
  1487   0003AA  6E01               	movwf	_lenStr^0,c
  1488   0003AC  0012               	return		;funcret
  1489   0003AE                     __end_ofi1_ClearBuffer:
  1490                           	callstack 0
  1491                           
  1492 ;; *************** function ___awmod *****************
  1493 ;; Defined at:
  1494 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  dividend        2    0[COMRAM] int 
  1497 ;;  divisor         2    2[COMRAM] int 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  sign            1    5[COMRAM] unsigned char 
  1500 ;;  counter         1    4[COMRAM] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  2    0[COMRAM] int 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1510 ;;      Params:         4       0       0       0       0       0       0
  1511 ;;      Locals:         2       0       0       0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0       0       0
  1513 ;;      Totals:         6       0       0       0       0       0       0
  1514 ;;Total ram usage:        6 bytes
  1515 ;; Hardware stack levels used: 1
  1516 ;; Hardware stack levels required when called: 1
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_MyusartRead
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text17
  1525   000070                     __ptext17:
  1526                           	callstack 0
  1527   000070                     ___awmod:
  1528                           	callstack 25
  1529   000070  0E00               	movlw	0
  1530   000072  6E30               	movwf	___awmod@sign^0,c
  1531   000074  BE2C               	btfsc	(___awmod@dividend+1)^0,7,c
  1532   000076  EF41  F000         	goto	i1u24_20
  1533   00007A  EF3F  F000         	goto	i1u24_21
  1534   00007E                     i1u24_21:
  1535   00007E  EF47  F000         	goto	i1l1122
  1536   000082                     i1u24_20:
  1537   000082  6C2B               	negf	___awmod@dividend^0,c
  1538   000084  1E2C               	comf	(___awmod@dividend+1)^0,f,c
  1539   000086  B0D8               	btfsc	status,0,c
  1540   000088  2A2C               	incf	(___awmod@dividend+1)^0,f,c
  1541   00008A  0E01               	movlw	1
  1542   00008C  6E30               	movwf	___awmod@sign^0,c
  1543   00008E                     i1l1122:
  1544   00008E  BE2E               	btfsc	(___awmod@divisor+1)^0,7,c
  1545   000090  EF4E  F000         	goto	i1u25_20
  1546   000094  EF4C  F000         	goto	i1u25_21
  1547   000098                     i1u25_21:
  1548   000098  EF52  F000         	goto	i1l1126
  1549   00009C                     i1u25_20:
  1550   00009C  6C2D               	negf	___awmod@divisor^0,c
  1551   00009E  1E2E               	comf	(___awmod@divisor+1)^0,f,c
  1552   0000A0  B0D8               	btfsc	status,0,c
  1553   0000A2  2A2E               	incf	(___awmod@divisor+1)^0,f,c
  1554   0000A4                     i1l1126:
  1555   0000A4  502D               	movf	___awmod@divisor^0,w,c
  1556   0000A6  102E               	iorwf	(___awmod@divisor+1)^0,w,c
  1557   0000A8  B4D8               	btfsc	status,2,c
  1558   0000AA  EF59  F000         	goto	i1u26_21
  1559   0000AE  EF5B  F000         	goto	i1u26_20
  1560   0000B2                     i1u26_21:
  1561   0000B2  EF7F  F000         	goto	i1l1142
  1562   0000B6                     i1u26_20:
  1563   0000B6  0E01               	movlw	1
  1564   0000B8  6E2F               	movwf	___awmod@counter^0,c
  1565   0000BA  EF63  F000         	goto	i1l1132
  1566   0000BE                     i1l1130:
  1567   0000BE  90D8               	bcf	status,0,c
  1568   0000C0  362D               	rlcf	___awmod@divisor^0,f,c
  1569   0000C2  362E               	rlcf	(___awmod@divisor+1)^0,f,c
  1570   0000C4  2A2F               	incf	___awmod@counter^0,f,c
  1571   0000C6                     i1l1132:
  1572   0000C6  AE2E               	btfss	(___awmod@divisor+1)^0,7,c
  1573   0000C8  EF68  F000         	goto	i1u27_21
  1574   0000CC  EF6A  F000         	goto	i1u27_20
  1575   0000D0                     i1u27_21:
  1576   0000D0  EF5F  F000         	goto	i1l1130
  1577   0000D4                     i1u27_20:
  1578   0000D4                     i1l1134:
  1579   0000D4  502D               	movf	___awmod@divisor^0,w,c
  1580   0000D6  5C2B               	subwf	___awmod@dividend^0,w,c
  1581   0000D8  502E               	movf	(___awmod@divisor+1)^0,w,c
  1582   0000DA  582C               	subwfb	(___awmod@dividend+1)^0,w,c
  1583   0000DC  A0D8               	btfss	status,0,c
  1584   0000DE  EF73  F000         	goto	i1u28_21
  1585   0000E2  EF75  F000         	goto	i1u28_20
  1586   0000E6                     i1u28_21:
  1587   0000E6  EF79  F000         	goto	i1l1138
  1588   0000EA                     i1u28_20:
  1589   0000EA  502D               	movf	___awmod@divisor^0,w,c
  1590   0000EC  5E2B               	subwf	___awmod@dividend^0,f,c
  1591   0000EE  502E               	movf	(___awmod@divisor+1)^0,w,c
  1592   0000F0  5A2C               	subwfb	(___awmod@dividend+1)^0,f,c
  1593   0000F2                     i1l1138:
  1594   0000F2  90D8               	bcf	status,0,c
  1595   0000F4  322E               	rrcf	(___awmod@divisor+1)^0,f,c
  1596   0000F6  322D               	rrcf	___awmod@divisor^0,f,c
  1597   0000F8  2E2F               	decfsz	___awmod@counter^0,f,c
  1598   0000FA  EF6A  F000         	goto	i1l1134
  1599   0000FE                     i1l1142:
  1600   0000FE  5030               	movf	___awmod@sign^0,w,c
  1601   000100  B4D8               	btfsc	status,2,c
  1602   000102  EF85  F000         	goto	i1u29_21
  1603   000106  EF87  F000         	goto	i1u29_20
  1604   00010A                     i1u29_21:
  1605   00010A  EF8B  F000         	goto	i1l1146
  1606   00010E                     i1u29_20:
  1607   00010E  6C2B               	negf	___awmod@dividend^0,c
  1608   000110  1E2C               	comf	(___awmod@dividend+1)^0,f,c
  1609   000112  B0D8               	btfsc	status,0,c
  1610   000114  2A2C               	incf	(___awmod@dividend+1)^0,f,c
  1611   000116                     i1l1146:
  1612   000116  C02B  F02B         	movff	___awmod@dividend,?___awmod
  1613   00011A  C02C  F02C         	movff	___awmod@dividend+1,?___awmod+1
  1614   00011E  0012               	return		;funcret
  1615   000120                     __end_of___awmod:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function _Hi_ISR *****************
  1619 ;; Defined at:
  1620 ;;		line 79 in file "main.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		None
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1634 ;;      Params:         0       0       0       0       0       0       0
  1635 ;;      Locals:         0       0       0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0
  1637 ;;      Totals:         0       0       0       0       0       0       0
  1638 ;;Total ram usage:        0 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		Interrupt level 2
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	intcode
  1648   000008                     __pintcode:
  1649                           	callstack 0
  1650   000008                     _Hi_ISR:
  1651                           	callstack 25
  1652                           
  1653                           ;incstack = 0
  1654   000008  8243               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1655   00000A  ED55  F002         	call	int_func,f	;refresh shadow registers
  1656                           
  1657                           	psect	intcode_body
  1658   0004AA                     __pintcode_body:
  1659                           	callstack 25
  1660   0004AA                     int_func:
  1661                           	callstack 25
  1662   0004AA  0006               	pop		; remove dummy address from shadow register refresh
  1663   0004AC  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1664   0004AE  0011               	retfie		f
  1665   0004B0                     __end_of_Hi_ISR:
  1666                           	callstack 0
  1667   000000                     
  1668                           	psect	rparam
  1669   000000                     
  1670                           	psect	temp
  1671   000043                     btemp:
  1672                           	callstack 0
  1673   000043                     	ds	1
  1674   000000                     int$flags	set	btemp
  1675   000000                     wtemp8	set	btemp+1
  1676   000000                     ttemp5	set	btemp+1
  1677   000000                     ttemp6	set	btemp+4
  1678   000000                     ttemp7	set	btemp+8
  1679                           
  1680                           	psect	idloc
  1681                           
  1682                           ;Config register IDLOC0 @ 0x200000
  1683                           ;	unspecified, using default values
  1684   200000                     	org	2097152
  1685   200000  FF                 	db	255
  1686                           
  1687                           ;Config register IDLOC1 @ 0x200001
  1688                           ;	unspecified, using default values
  1689   200001                     	org	2097153
  1690   200001  FF                 	db	255
  1691                           
  1692                           ;Config register IDLOC2 @ 0x200002
  1693                           ;	unspecified, using default values
  1694   200002                     	org	2097154
  1695   200002  FF                 	db	255
  1696                           
  1697                           ;Config register IDLOC3 @ 0x200003
  1698                           ;	unspecified, using default values
  1699   200003                     	org	2097155
  1700   200003  FF                 	db	255
  1701                           
  1702                           ;Config register IDLOC4 @ 0x200004
  1703                           ;	unspecified, using default values
  1704   200004                     	org	2097156
  1705   200004  FF                 	db	255
  1706                           
  1707                           ;Config register IDLOC5 @ 0x200005
  1708                           ;	unspecified, using default values
  1709   200005                     	org	2097157
  1710   200005  FF                 	db	255
  1711                           
  1712                           ;Config register IDLOC6 @ 0x200006
  1713                           ;	unspecified, using default values
  1714   200006                     	org	2097158
  1715   200006  FF                 	db	255
  1716                           
  1717                           ;Config register IDLOC7 @ 0x200007
  1718                           ;	unspecified, using default values
  1719   200007                     	org	2097159
  1720   200007  FF                 	db	255
  1721                           
  1722                           	psect	config
  1723                           
  1724                           ; Padding undefined space
  1725   300000                     	org	3145728
  1726   300000  FF                 	db	255
  1727                           
  1728                           ;Config register CONFIG1H @ 0x300001
  1729                           ;	Oscillator Selection bits
  1730                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1731                           ;	Fail-Safe Clock Monitor Enable bit
  1732                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1733                           ;	Internal/External Oscillator Switchover bit
  1734                           ;	IESO = ON, Oscillator Switchover mode enabled
  1735   300001                     	org	3145729
  1736   300001  88                 	db	136
  1737                           
  1738                           ;Config register CONFIG2L @ 0x300002
  1739                           ;	Power-up Timer Enable bit
  1740                           ;	PWRT = OFF, PWRT disabled
  1741                           ;	Brown-out Reset Enable bits
  1742                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1743                           ;	Brown Out Reset Voltage bits
  1744                           ;	BORV = 3, Minimum setting
  1745   300002                     	org	3145730
  1746   300002  1F                 	db	31
  1747                           
  1748                           ;Config register CONFIG2H @ 0x300003
  1749                           ;	Watchdog Timer Enable bit
  1750                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1751                           ;	Watchdog Timer Postscale Select bits
  1752                           ;	WDTPS = 1, 1:1
  1753   300003                     	org	3145731
  1754   300003  00                 	db	0
  1755                           
  1756                           ; Padding undefined space
  1757   300004                     	org	3145732
  1758   300004  FF                 	db	255
  1759                           
  1760                           ;Config register CONFIG3H @ 0x300005
  1761                           ;	CCP2 MUX bit
  1762                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1763                           ;	PORTB A/D Enable bit
  1764                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1765                           ;	Low-Power Timer1 Oscillator Enable bit
  1766                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1767                           ;	MCLR Pin Enable bit
  1768                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1769   300005                     	org	3145733
  1770   300005  83                 	db	131
  1771                           
  1772                           ;Config register CONFIG4L @ 0x300006
  1773                           ;	Stack Full/Underflow Reset Enable bit
  1774                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1775                           ;	Single-Supply ICSP Enable bit
  1776                           ;	LVP = OFF, Single-Supply ICSP disabled
  1777                           ;	Extended Instruction Set Enable bit
  1778                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1779                           ;	Background Debugger Enable bit
  1780                           ;	DEBUG = 0x1, unprogrammed default
  1781   300006                     	org	3145734
  1782   300006  81                 	db	129
  1783                           
  1784                           ; Padding undefined space
  1785   300007                     	org	3145735
  1786   300007  FF                 	db	255
  1787                           
  1788                           ;Config register CONFIG5L @ 0x300008
  1789                           ;	Code Protection bit
  1790                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1791                           ;	Code Protection bit
  1792                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1793                           ;	Code Protection bit
  1794                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1795                           ;	Code Protection bit
  1796                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1797   300008                     	org	3145736
  1798   300008  0F                 	db	15
  1799                           
  1800                           ;Config register CONFIG5H @ 0x300009
  1801                           ;	Boot Block Code Protection bit
  1802                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1803                           ;	Data EEPROM Code Protection bit
  1804                           ;	CPD = OFF, Data EEPROM not code-protected
  1805   300009                     	org	3145737
  1806   300009  C0                 	db	192
  1807                           
  1808                           ;Config register CONFIG6L @ 0x30000A
  1809                           ;	Write Protection bit
  1810                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1811                           ;	Write Protection bit
  1812                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1813                           ;	Write Protection bit
  1814                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1815                           ;	Write Protection bit
  1816                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1817   30000A                     	org	3145738
  1818   30000A  0F                 	db	15
  1819                           
  1820                           ;Config register CONFIG6H @ 0x30000B
  1821                           ;	Configuration Register Write Protection bit
  1822                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1823                           ;	Boot Block Write Protection bit
  1824                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1825                           ;	Data EEPROM Write Protection bit
  1826                           ;	WRTD = OFF, Data EEPROM not write-protected
  1827   30000B                     	org	3145739
  1828   30000B  E0                 	db	224
  1829                           
  1830                           ;Config register CONFIG7L @ 0x30000C
  1831                           ;	Table Read Protection bit
  1832                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1833                           ;	Table Read Protection bit
  1834                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1835                           ;	Table Read Protection bit
  1836                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1837                           ;	Table Read Protection bit
  1838                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1839   30000C                     	org	3145740
  1840   30000C  0F                 	db	15
  1841                           
  1842                           ;Config register CONFIG7H @ 0x30000D
  1843                           ;	Boot Block Table Read Protection bit
  1844                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1845   30000D                     	org	3145741
  1846   30000D  40                 	db	64
  1847                           tosu	equ	0xFFF
  1848                           tosh	equ	0xFFE
  1849                           tosl	equ	0xFFD
  1850                           stkptr	equ	0xFFC
  1851                           pclatu	equ	0xFFB
  1852                           pclath	equ	0xFFA
  1853                           pcl	equ	0xFF9
  1854                           tblptru	equ	0xFF8
  1855                           tblptrh	equ	0xFF7
  1856                           tblptrl	equ	0xFF6
  1857                           tablat	equ	0xFF5
  1858                           prodh	equ	0xFF4
  1859                           prodl	equ	0xFF3
  1860                           indf0	equ	0xFEF
  1861                           postinc0	equ	0xFEE
  1862                           postdec0	equ	0xFED
  1863                           preinc0	equ	0xFEC
  1864                           plusw0	equ	0xFEB
  1865                           fsr0h	equ	0xFEA
  1866                           fsr0l	equ	0xFE9
  1867                           wreg	equ	0xFE8
  1868                           indf1	equ	0xFE7
  1869                           postinc1	equ	0xFE6
  1870                           postdec1	equ	0xFE5
  1871                           preinc1	equ	0xFE4
  1872                           plusw1	equ	0xFE3
  1873                           fsr1h	equ	0xFE2
  1874                           fsr1l	equ	0xFE1
  1875                           bsr	equ	0xFE0
  1876                           indf2	equ	0xFDF
  1877                           postinc2	equ	0xFDE
  1878                           postdec2	equ	0xFDD
  1879                           preinc2	equ	0xFDC
  1880                           plusw2	equ	0xFDB
  1881                           fsr2h	equ	0xFDA
  1882                           fsr2l	equ	0xFD9
  1883                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     24      66
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[20]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_Mode1
    _main->_Mode2
    _Mode2->_strcpy
    _Mode1->_strcpy
    _strcpy->_GetString

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2733
                        _ClearBuffer
                          _GetString
                              _Mode1
                              _Mode2
                  _SYSTEM_Initialize
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mode2                                                2     2      0     916
                                             22 COMRAM     2     2      0
                        _ClearBuffer
                          _GetString
                         _UART_Write
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _Mode1                                                2     2      0     916
                                             22 COMRAM     2     2      0
                        _ClearBuffer
                          _GetString
                         _UART_Write
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               8     4      4     856
                                             14 COMRAM     8     4      4
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      15
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetString                                            2     0      2       0
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      45
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0     515
                                              7 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          1     1      0     515
                                              6 COMRAM     1     1      0
                            ___awmod
                      i1_ClearBuffer
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (5) i1_UART_Write                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) i1_ClearBuffer                                        2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _GetString
   _Mode1
     _ClearBuffer
     _GetString
     _UART_Write
     _strcpy
       _GetString (ARG)
   _Mode2
     _ClearBuffer
     _GetString
     _UART_Write
     _strcpy
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _strcpy

 _Lo_ISR (ROOT)
   _MyusartRead
     ___awmod
     i1_ClearBuffer
     i1_UART_Write

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     18      42       1       52.4%
BITBIGSFRll          C      0       0      29        0.0%
BITBIGSFR_1llhl      B      0       0      25        0.0%
BITBIGSFR_1hhl       B      0       0      21        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_1llhh      8      0       0      24        0.0%
BITBIGSFRhh          6      0       0      26        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFRlh          5      0       0      28        0.0%
BITBIGSFR_1llhh      4      0       0      23        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hhh       2      0       0      20        0.0%
BITBIGSFR_1lh        2      0       0      22        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFRhl          1      0       0      27        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      42      30        0.0%
DATA                 0      0      42      32        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 19 05:09:46 2022

                           l17 0456                             l41 04A8                             l34 048E  
                           l60 0440                             l63 04A0                             u10 0468  
                           u11 0464                             u20 0362                             u21 035E  
                           bsr 000FE0        __end_of_CCP1_Initialize 0490                            LATD 000F8C  
                          l100 0414                            l103 045A                            l106 046C  
                          l117 036A                            l125 0498                            l152 0216  
                          l162 01AA                            l155 0236                            l159 018A  
                          l900 040C                            l910 0468                            l902 040E  
                          l920 0342                            l912 032A                            l904 0410  
                          l922 0346                            l906 0412                            l924 0362  
                          l908 045A                            l860 0442                            l918 0332  
                          l862 0444                            l870 048A                            l864 0448  
                          l872 048C                            l880 03F4                            l858 03EA  
                          l866 0484                            l874 04A2                            l890 0402  
                          l882 03F6                            l868 0486                            l876 049A  
                          l892 0404                            l884 03F8                            l894 0406  
                          l886 03FA                            l878 03EC                            l990 0434  
                          l896 0408                            l888 03FC                            l992 0438  
                          l898 040A                            l994 043C                            l988 042C  
                          u230 03EA                            u231 03E6                            u320 0202  
                          u321 01FE                            u330 0176                            u331 0172  
                          u407 0196                            u360 0266                            u417 0222  
                          u361 0262                            u370 0278                            u371 0274  
                          u380 0296                            u381 0292                            u390 02A8  
                          u391 02A4                            _str 0003                   ___awmod@sign 0030  
                          wreg 000FE8                           l1110 03AE                           l1112 03BE  
                         l1200 0148                           l1106 0490                           l1210 018C  
                         l1202 014C                           l1212 01A6                           l1204 0164  
                         l1206 0176                           l1230 0254                           l1208 0182  
                         l1240 0296                           l1232 0266                           l1170 01B0  
                         l1242 02A8                           l1234 0278                           l1226 0238  
                         l1180 01F0                           l1172 01B6                           l1236 027C  
                         l1228 023C                           l1182 0202                           l1174 01BC  
                         l1238 0284                           l1184 020E                           l1176 01D4  
                         l1168 01AC                           l1192 0120                           l1186 0218  
                         l1178 01D8                           l1194 0124                           l1188 0232  
                         l1196 012A                           l1198 0130                           _ADFM 007E07  
                         _CREN 007D5C                           _LATD 000F8C                           _RCIF 007CF5  
                         _main 0238                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf1 000FE7                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 0043                           start 006C  
                 ___param_bank 000000               ?_UART_Initialize 002B  __end_of_OSCILLATOR_Initialize 04A2  
                        ?_main 002B                __end_of___awmod 0120                          _IRCF0 007E9C  
                        _IRCF1 007E9D                          _IRCF2 007E9E                          i1l103 0470  
                        i1l106 0482                          i1l122 0328                          i1l132 0054  
                        i1l117 03AC                          i1l425 011E                          i2l178 04AC  
                        i1l980 0374                          i1l982 0384                          i1l974 036C  
                        i1l984 0388                          i1l986 03A4                          _RCREG 000FAE  
                        _SPBRG 000FAF                          _TRISA 000F92                          _TRISD 000F95  
                        _TXREG 000FAD                          _Mode1 01AC                          _Mode2 0120  
                  ?_UART_Write 002B                    _ClearBuffer 032A                          ttemp5 0044  
                        ttemp6 0047                          ttemp7 004B                          status 000FD8  
                        wtemp8 0044                __initialization 0416                   __end_of_main 02B4  
                       ??_main 0043               ?_CCP1_Initialize 002B                  __activetblptr 000000  
                       ?_Mode1 002B                         ?_Mode2 002B                         _ADCON1 000FC1  
                       _ADRESH 000FC4                         _ADRESL 000FC3          __end_ofi1_ClearBuffer 03AE  
                       i1l1120 008A                         i1l1130 00BE                         i1l1122 008E  
                       i1l1114 0070                         i1l1140 00F8                         i1l1132 00C6  
                       i1l1124 009C                         i1l1116 0074                         i1l1220 004A  
                       i1l1134 00D4                         i1l1142 00FE                         i1l1126 00A4  
                       i1l1118 0082                         i1l1150 0470                         i1l1222 0050  
                       i1l1144 010E                         i1l1136 00EA                         i1l1128 00B6  
                       i1l1152 047E                         i1l1160 02F6                         i1l1216 002E  
                       i1l1146 0116                         i1l1138 00F2                         i1l1162 0308  
                       i1l1154 02B4                         i1l1218 003C                         i1l1164 030C  
                       i1l1156 02E2                         i1l1158 02EE                         _Hi_ISR 0008  
                       _Lo_ISR 0018                      ??___awmod 002F                         _lenStr 0001  
                       clear_0 041C                ___awmod@divisor 002D                         isa$std 000001  
              ___awmod@counter 002F                         _strcpy 03AE              _SYSTEM_Initialize 042C  
                   __accesstop 0080        __end_of__initialization 0422             ?_SYSTEM_Initialize 002B  
                ___rparam_used 000001              __end_of_GetString 049A                  ?i1_UART_Write 002B  
                __end_of_Mode1 0238                  __end_of_Mode2 01AC                 __pcstackCOMRAM 002B  
          ??_SYSTEM_Initialize 0037                  ??_MyusartRead 0031                        ??_Mode1 0041  
                      ??_Mode2 0041      __end_of_SYSTEM_Initialize 0442                        ?_Hi_ISR 002B  
                      ?_Lo_ISR 002B                 ??i1_UART_Write 002B                        _CCP1CON 000FBD  
                      ?_strcpy 0039                        i1u11_20 03A4                        i1u11_21 03A0  
                 ??_UART_Write 0037                        i1u30_20 047E                        i1u30_21 047A  
                      i1u31_20 02E2                        i1u31_21 02DE                        i1u24_20 0082  
                      i1u24_21 007E                        i1u25_20 009C                        i1u25_21 0098  
                      i1u26_20 00B6                        i1u34_20 003C                        i1u26_21 00B2  
                      i1u34_21 0038                        i1u27_20 00D4                        i1u35_20 004A  
                      i1u27_21 00D0                        i1u35_21 0046                        i1u28_20 00EA  
                      i1u28_21 00E6                        i1u29_20 010E                        i1u29_21 010A  
                 ?_ClearBuffer 002B            __end_of_MyusartRead 032A                        __Hparam 0000  
                      __Lparam 0000                        ___awmod 0070             __end_of_UART_Write 046E  
                      __pcinit 0416                        __ramtop 0600                        __ptext0 0238  
                      __ptext1 042C                        __ptext2 03EC                        __ptext3 049A  
                      __ptext4 04A2                        __ptext5 0484                        __ptext6 0442  
                      __ptext7 0120                        __ptext8 01AC                        __ptext9 03AE  
        _OSCILLATOR_Initialize 049A               ___awmod@dividend 002B                 __pintcode_body 04AA  
         end_of_initialization 0422                        int_func 04AA                      _RCSTAbits 000FAB  
                      postinc0 000FEE                        postinc2 000FDE                        strcpy@d 003F  
                      strcpy@s 003D                 UART_Write@data 0037                      _TRISCbits 000F94  
                  _MyusartRead 02B4           __end_ofi1_UART_Write 0484                      _TXSTAbits 000FAC  
               __end_of_Hi_ISR 04B0                 __end_of_Lo_ISR 006C   __end_of_INTERRUPT_Initialize 04AA  
                    _GetString 0490                    _BAUDCONbits 000FB8                 _ADC_Initialize 0442  
       ?_OSCILLATOR_Initialize 002B                 __end_of_strcpy 03EC            start_initialization 0416  
                 ClearBuffer@i 0037              ??_UART_Initialize 0037                       ??_Hi_ISR 002B  
                     ??_Lo_ISR 0032         __end_of_ADC_Initialize 0458                     ?_GetString 0037  
                     ??_strcpy 003D                    __pbssCOMRAM 0001                  i1_ClearBuffer 036C  
               i1ClearBuffer@i 002B              ??_CCP1_Initialize 0037                      __pintcode 0008  
                     ?___awmod 002B                ?_ADC_Initialize 002B                    __pintcodelo 0018  
               ?i1_ClearBuffer 002B           _INTERRUPT_Initialize 04A2                       _IPR1bits 000F9F  
                     _PIE1bits 000F9D                       _PIR1bits 000F9E                   i1_UART_Write 046E  
                     _RCONbits 000FD0                    ??_GetString 0039                     _ADCON0bits 000FC2  
                   _ADCON2bits 000FC0                   ?_MyusartRead 002B          ?_INTERRUPT_Initialize 002B  
             i1UART_Write@data 002B                       __Hrparam 0000                       __Lrparam 0000  
      ??_OSCILLATOR_Initialize 0037                _UART_Initialize 03EC                ??i1_ClearBuffer 002B  
                     __ptext10 0458                       __ptext11 0490                       __ptext12 032A  
                     __ptext14 02B4                       __ptext15 046E                       __ptext16 036C  
                     __ptext17 0070                     strcpy@dest 0039                       isa$xinst 000000  
                     int$flags 0043                       _mystring 0017                     _INTCONbits 000FF2  
              _CCP1_Initialize 0484         ??_INTERRUPT_Initialize 0037                  ??_ClearBuffer 0037  
                     intlevel1 0000                       intlevel2 0000                      strcpy@src 003B  
             ??_ADC_Initialize 0037        __end_of_UART_Initialize 0416                     _UART_Write 0458  
          __end_of_ClearBuffer 036C  
