

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Dec 06 20:38:11 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Version 2.40
    20                           ; Generated 04/07/2022 GMT
    21                           ; 
    22                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4520 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     _LATD	set	3980
    55   000000                     _ADRESL	set	4035
    56   000000                     _ADRESH	set	4036
    57   000000                     _RCONbits	set	4048
    58   000000                     _OSCCONbits	set	4051
    59   000000                     _TRISA	set	3986
    60   000000                     _PIR1bits	set	3998
    61   000000                     _IPR1bits	set	3999
    62   000000                     _ADCON2bits	set	4032
    63   000000                     _ADCON1bits	set	4033
    64   000000                     _ADCON0bits	set	4034
    65   000000                     _INTCONbits	set	4082
    66   000000                     _TRISD	set	3989
    67   000000                     _PIE1bits	set	3997
    68                           
    69                           ; #config settings
    70                           
    71                           	psect	cinit
    72   00018A                     __pcinit:
    73                           	callstack 0
    74   00018A                     start_initialization:
    75                           	callstack 0
    76   00018A                     __initialization:
    77                           	callstack 0
    78   00018A                     end_of_initialization:
    79                           	callstack 0
    80   00018A                     __end_of__initialization:
    81                           	callstack 0
    82   00018A  9010               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    83   00018C  9210               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    84   00018E  0100               	movlb	0
    85   000190  EFBE  F000         	goto	_main	;jump to C main() function
    86                           
    87                           	psect	cstackCOMRAM
    88   000001                     __pcstackCOMRAM:
    89                           	callstack 0
    90   000001                     ?___awdiv:
    91                           	callstack 0
    92   000001                     ___awdiv@dividend:
    93                           	callstack 0
    94                           
    95                           ; 2 bytes @ 0x0
    96   000001                     	ds	2
    97   000003                     ___awdiv@divisor:
    98                           	callstack 0
    99                           
   100                           ; 2 bytes @ 0x2
   101   000003                     	ds	2
   102   000005                     ___awdiv@counter:
   103                           	callstack 0
   104                           
   105                           ; 1 bytes @ 0x4
   106   000005                     	ds	1
   107   000006                     ___awdiv@sign:
   108                           	callstack 0
   109                           
   110                           ; 1 bytes @ 0x5
   111   000006                     	ds	1
   112   000007                     ___awdiv@quotient:
   113                           	callstack 0
   114                           
   115                           ; 2 bytes @ 0x6
   116   000007                     	ds	2
   117   000009                     ??_Hi_ISR:
   118                           
   119                           ; 1 bytes @ 0x8
   120   000009                     	ds	2
   121   00000B                     Hi_ISR@bitShow:
   122                           	callstack 0
   123                           
   124                           ; 2 bytes @ 0xA
   125   00000B                     	ds	2
   126   00000D                     Hi_ISR@input:
   127                           	callstack 0
   128                           
   129                           ; 2 bytes @ 0xC
   130   00000D                     	ds	2
   131   00000F                     ??_Lo_ISR:
   132                           
   133                           ; 1 bytes @ 0xE
   134   00000F                     	ds	1
   135   000010                     
   136                           ; 1 bytes @ 0xF
   137 ;;
   138 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   139 ;;
   140 ;; *************** function _main *****************
   141 ;; Defined at:
   142 ;;		line 69 in file "testcode1.c"
   143 ;; Parameters:    Size  Location     Type
   144 ;;		None
   145 ;; Auto vars:     Size  Location     Type
   146 ;;		None
   147 ;; Return value:  Size  Location     Type
   148 ;;                  1    wreg      void 
   149 ;; Registers used:
   150 ;;		wreg, status,2, cstack
   151 ;; Tracked objects:
   152 ;;		On entry : 0/0
   153 ;;		On exit  : 0/0
   154 ;;		Unchanged: 0/0
   155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   156 ;;      Params:         0       0       0       0       0       0       0
   157 ;;      Locals:         0       0       0       0       0       0       0
   158 ;;      Temps:          0       0       0       0       0       0       0
   159 ;;      Totals:         0       0       0       0       0       0       0
   160 ;;Total ram usage:        0 bytes
   161 ;; Hardware stack levels required when called: 4
   162 ;; This function calls:
   163 ;;		_init
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           	psect	text0
   170   00017C                     __ptext0:
   171                           	callstack 0
   172   00017C                     _main:
   173                           	callstack 27
   174   00017C                     
   175                           ;testcode1.c: 70:     init();
   176   00017C  EC9D  F000         	call	_init	;wreg free
   177   000180                     l807:
   178                           
   179                           ;testcode1.c: 73:         ADCON0bits.GO = 0x1;
   180   000180  82C2               	bsf	194,1,c	;volatile
   181                           
   182                           ;testcode1.c: 74:         continue;
   183   000182  EFC0  F000         	goto	l807
   184   000186  EF13  F000         	goto	start
   185   00018A                     __end_of_main:
   186                           	callstack 0
   187                           
   188 ;; *************** function _init *****************
   189 ;; Defined at:
   190 ;;		line 30 in file "testcode1.c"
   191 ;; Parameters:    Size  Location     Type
   192 ;;		None
   193 ;; Auto vars:     Size  Location     Type
   194 ;;		None
   195 ;; Return value:  Size  Location     Type
   196 ;;                  1    wreg      void 
   197 ;; Registers used:
   198 ;;		wreg, status,2
   199 ;; Tracked objects:
   200 ;;		On entry : 0/0
   201 ;;		On exit  : 0/0
   202 ;;		Unchanged: 0/0
   203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   204 ;;      Params:         0       0       0       0       0       0       0
   205 ;;      Locals:         0       0       0       0       0       0       0
   206 ;;      Temps:          0       0       0       0       0       0       0
   207 ;;      Totals:         0       0       0       0       0       0       0
   208 ;;Total ram usage:        0 bytes
   209 ;; Hardware stack levels used: 1
   210 ;; Hardware stack levels required when called: 3
   211 ;; This function calls:
   212 ;;		Nothing
   213 ;; This function is called by:
   214 ;;		_main
   215 ;; This function uses a non-reentrant model
   216 ;;
   217                           
   218                           	psect	text1
   219   00013A                     __ptext1:
   220                           	callstack 0
   221   00013A                     _init:
   222                           	callstack 27
   223   00013A                     
   224                           ;testcode1.c: 32:     OSCCONbits.IRCF = 7;
   225   00013A  0E70               	movlw	112
   226   00013C  12D3               	iorwf	211,f,c	;volatile
   227                           
   228                           ;testcode1.c: 34:     TRISA = 0x01;
   229   00013E  0E01               	movlw	1
   230   000140  6E92               	movwf	146,c	;volatile
   231                           
   232                           ;testcode1.c: 36:     TRISD = 0x00;
   233   000142  0E00               	movlw	0
   234   000144  6E95               	movwf	149,c	;volatile
   235                           
   236                           ;testcode1.c: 38:     LATD = 0x00;
   237   000146  0E00               	movlw	0
   238   000148  6E8C               	movwf	140,c	;volatile
   239   00014A                     
   240                           ;testcode1.c: 40:     ADCON1bits.VCFG1 = 0;
   241   00014A  9AC1               	bcf	193,5,c	;volatile
   242   00014C                     
   243                           ;testcode1.c: 42:     ADCON1bits.VCFG0 = 0;
   244   00014C  98C1               	bcf	193,4,c	;volatile
   245                           
   246                           ;testcode1.c: 44:     ADCON1bits.PCFG = 0xE;
   247   00014E  50C1               	movf	193,w,c	;volatile
   248   000150  0BF0               	andlw	-16
   249   000152  090E               	iorlw	14
   250   000154  6EC1               	movwf	193,c	;volatile
   251                           
   252                           ;testcode1.c: 46:     ADCON0bits.CHS = 0x0;
   253   000156  0EC3               	movlw	-61
   254   000158  16C2               	andwf	194,f,c	;volatile
   255                           
   256                           ;testcode1.c: 48:     ADCON2bits.ADCS = 0x1;
   257   00015A  50C0               	movf	192,w,c	;volatile
   258   00015C  0BF8               	andlw	-8
   259   00015E  0901               	iorlw	1
   260   000160  6EC0               	movwf	192,c	;volatile
   261                           
   262                           ;testcode1.c: 50:     ADCON2bits.ACQT = 0x4;
   263   000162  50C0               	movf	192,w,c	;volatile
   264   000164  0BC7               	andlw	-57
   265   000166  0920               	iorlw	32
   266   000168  6EC0               	movwf	192,c	;volatile
   267   00016A                     
   268                           ;testcode1.c: 52:     ADCON0bits.ADON = 0x1;
   269   00016A  80C2               	bsf	194,0,c	;volatile
   270   00016C                     
   271                           ;testcode1.c: 54:     ADCON2bits.ADFM = 0x1;
   272   00016C  8EC0               	bsf	192,7,c	;volatile
   273   00016E                     
   274                           ;testcode1.c: 56:     PIR1bits.ADIF = 0x0;
   275   00016E  9C9E               	bcf	158,6,c	;volatile
   276   000170                     
   277                           ;testcode1.c: 58:     PIE1bits.ADIE = 0x1;
   278   000170  8C9D               	bsf	157,6,c	;volatile
   279   000172                     
   280                           ;testcode1.c: 60:     INTCONbits.GIE = 0x1;
   281   000172  8EF2               	bsf	242,7,c	;volatile
   282   000174                     
   283                           ;testcode1.c: 62:     IPR1bits.ADIP = 0x1;
   284   000174  8C9F               	bsf	159,6,c	;volatile
   285   000176                     
   286                           ;testcode1.c: 64:     ADCON0bits.GO = 0x1;
   287   000176  82C2               	bsf	194,1,c	;volatile
   288   000178                     
   289                           ;testcode1.c: 66:     RCONbits.IPEN = 0x1;
   290   000178  8ED0               	bsf	208,7,c	;volatile
   291   00017A  0012               	return		;funcret
   292   00017C                     __end_of_init:
   293                           	callstack 0
   294                           
   295 ;; *************** function _Lo_ISR *****************
   296 ;; Defined at:
   297 ;;		line 25 in file "testcode1.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		None
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   311 ;;      Params:         0       0       0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0       0       0
   313 ;;      Temps:          1       0       0       0       0       0       0
   314 ;;      Totals:         1       0       0       0       0       0       0
   315 ;;Total ram usage:        1 bytes
   316 ;; Hardware stack levels used: 1
   317 ;; Hardware stack levels required when called: 2
   318 ;; This function calls:
   319 ;;		Nothing
   320 ;; This function is called by:
   321 ;;		Interrupt level 1
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	intcodelo
   326   000018                     __pintcodelo:
   327                           	callstack 0
   328   000018                     _Lo_ISR:
   329                           	callstack 27
   330                           
   331                           ;incstack = 0
   332   000018  8010               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   333   00001A  CFE0 F00F          	movff	bsr,??_Lo_ISR
   334   00001E  C00F  FFE0         	movff	??_Lo_ISR,bsr
   335   000022  9010               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   336   000024  0010               	retfie	
   337   000026                     __end_of_Lo_ISR:
   338                           	callstack 0
   339                           
   340 ;; *************** function _Hi_ISR *****************
   341 ;; Defined at:
   342 ;;		line 12 in file "testcode1.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;  input           2   12[COMRAM] int 
   347 ;;  bitShow         2   10[COMRAM] int 
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		wreg, status,2, status,0, cstack
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   357 ;;      Params:         0       0       0       0       0       0       0
   358 ;;      Locals:         4       0       0       0       0       0       0
   359 ;;      Temps:          2       0       0       0       0       0       0
   360 ;;      Totals:         6       0       0       0       0       0       0
   361 ;;Total ram usage:        6 bytes
   362 ;; Hardware stack levels used: 1
   363 ;; Hardware stack levels required when called: 1
   364 ;; This function calls:
   365 ;;		___awdiv
   366 ;; This function is called by:
   367 ;;		Interrupt level 2
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	intcode
   372   000008                     __pintcode:
   373                           	callstack 0
   374   000008                     _Hi_ISR:
   375                           	callstack 27
   376                           
   377                           ;incstack = 0
   378   000008  8210               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   379   00000A  ED77  F000         	call	int_func,f	;refresh shadow registers
   380                           
   381                           	psect	intcode_body
   382   0000EE                     __pintcode_body:
   383                           	callstack 27
   384   0000EE                     int_func:
   385                           	callstack 27
   386   0000EE  0006               	pop		; remove dummy address from shadow register refresh
   387   0000F0                     
   388                           ;testcode1.c: 14:     int input = (ADRESH << 8) + ADRESL;
   389   0000F0  50C4               	movf	196,w,c	;volatile
   390   0000F2  6E0A               	movwf	(??_Hi_ISR+1)^0,c
   391   0000F4  6A09               	clrf	??_Hi_ISR^0,c
   392   0000F6  50C3               	movf	195,w,c	;volatile
   393   0000F8  2409               	addwf	??_Hi_ISR^0,w,c
   394   0000FA  6E0D               	movwf	Hi_ISR@input^0,c
   395   0000FC  0E00               	movlw	0
   396   0000FE  200A               	addwfc	(??_Hi_ISR+1)^0,w,c
   397   000100  6E0E               	movwf	(Hi_ISR@input+1)^0,c
   398   000102                     
   399                           ;testcode1.c: 15:     int bitShow = (input - (input % 64)) / 64;
   400   000102  0E3F               	movlw	63
   401   000104  140D               	andwf	Hi_ISR@input^0,w,c
   402   000106  6E09               	movwf	??_Hi_ISR^0,c
   403   000108  0E00               	movlw	0
   404   00010A  140E               	andwf	(Hi_ISR@input+1)^0,w,c
   405   00010C  6E0A               	movwf	(??_Hi_ISR+1)^0,c
   406   00010E  5009               	movf	??_Hi_ISR^0,w,c
   407   000110  5C0D               	subwf	Hi_ISR@input^0,w,c
   408   000112  6E01               	movwf	___awdiv@dividend^0,c
   409   000114  500A               	movf	(??_Hi_ISR+1)^0,w,c
   410   000116  580E               	subwfb	(Hi_ISR@input+1)^0,w,c
   411   000118  6E02               	movwf	(___awdiv@dividend+1)^0,c
   412   00011A  0E00               	movlw	0
   413   00011C  6E04               	movwf	(___awdiv@divisor+1)^0,c
   414   00011E  0E40               	movlw	64
   415   000120  6E03               	movwf	___awdiv@divisor^0,c
   416   000122  EC15  F000         	call	___awdiv	;wreg free
   417   000126  C001  F00B         	movff	?___awdiv,Hi_ISR@bitShow
   418   00012A  C002  F00C         	movff	?___awdiv+1,Hi_ISR@bitShow+1
   419   00012E                     
   420                           ;testcode1.c: 16:     LATD = bitShow;
   421   00012E  C00B  FF8C         	movff	Hi_ISR@bitShow,3980	;volatile
   422   000132                     
   423                           ;testcode1.c: 19:     PIR1bits.ADIF = 0x0;
   424   000132  9C9E               	bcf	158,6,c	;volatile
   425   000134                     
   426                           ;testcode1.c: 21:     ADCON0bits.GO = 0x1;
   427   000134  82C2               	bsf	194,1,c	;volatile
   428   000136  9210               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   429   000138  0011               	retfie		f
   430   00013A                     __end_of_Hi_ISR:
   431                           	callstack 0
   432                           
   433 ;; *************** function ___awdiv *****************
   434 ;; Defined at:
   435 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;  dividend        2    0[COMRAM] int 
   438 ;;  divisor         2    2[COMRAM] int 
   439 ;; Auto vars:     Size  Location     Type
   440 ;;  quotient        2    6[COMRAM] int 
   441 ;;  sign            1    5[COMRAM] unsigned char 
   442 ;;  counter         1    4[COMRAM] unsigned char 
   443 ;; Return value:  Size  Location     Type
   444 ;;                  2    0[COMRAM] int 
   445 ;; Registers used:
   446 ;;		wreg, status,2, status,0
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   452 ;;      Params:         4       0       0       0       0       0       0
   453 ;;      Locals:         4       0       0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0       0       0
   455 ;;      Totals:         8       0       0       0       0       0       0
   456 ;;Total ram usage:        8 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; This function calls:
   459 ;;		Nothing
   460 ;; This function is called by:
   461 ;;		_Hi_ISR
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           	psect	text4
   466   00002A                     __ptext4:
   467                           	callstack 0
   468   00002A                     ___awdiv:
   469                           	callstack 27
   470   00002A  0E00               	movlw	0
   471   00002C  6E06               	movwf	___awdiv@sign^0,c
   472   00002E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   473   000030  EF1E  F000         	goto	i2u7_40
   474   000034  EF1C  F000         	goto	i2u7_41
   475   000038                     i2u7_41:
   476   000038  EF24  F000         	goto	i2l817
   477   00003C                     i2u7_40:
   478   00003C  6C03               	negf	___awdiv@divisor^0,c
   479   00003E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   480   000040  B0D8               	btfsc	status,0,c
   481   000042  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   482   000044  0E01               	movlw	1
   483   000046  6E06               	movwf	___awdiv@sign^0,c
   484   000048                     i2l817:
   485   000048  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   486   00004A  EF2B  F000         	goto	i2u8_40
   487   00004E  EF29  F000         	goto	i2u8_41
   488   000052                     i2u8_41:
   489   000052  EF31  F000         	goto	i2l823
   490   000056                     i2u8_40:
   491   000056  6C01               	negf	___awdiv@dividend^0,c
   492   000058  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   493   00005A  B0D8               	btfsc	status,0,c
   494   00005C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   495   00005E  0E01               	movlw	1
   496   000060  1A06               	xorwf	___awdiv@sign^0,f,c
   497   000062                     i2l823:
   498   000062  0E00               	movlw	0
   499   000064  6E08               	movwf	(___awdiv@quotient+1)^0,c
   500   000066  0E00               	movlw	0
   501   000068  6E07               	movwf	___awdiv@quotient^0,c
   502   00006A  5003               	movf	___awdiv@divisor^0,w,c
   503   00006C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   504   00006E  B4D8               	btfsc	status,2,c
   505   000070  EF3C  F000         	goto	i2u9_41
   506   000074  EF3E  F000         	goto	i2u9_40
   507   000078                     i2u9_41:
   508   000078  EF66  F000         	goto	i2l845
   509   00007C                     i2u9_40:
   510   00007C  0E01               	movlw	1
   511   00007E  6E05               	movwf	___awdiv@counter^0,c
   512   000080  EF46  F000         	goto	i2l831
   513   000084                     i2l829:
   514   000084  90D8               	bcf	status,0,c
   515   000086  3603               	rlcf	___awdiv@divisor^0,f,c
   516   000088  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   517   00008A  2A05               	incf	___awdiv@counter^0,f,c
   518   00008C                     i2l831:
   519   00008C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   520   00008E  EF4B  F000         	goto	i2u10_41
   521   000092  EF4D  F000         	goto	i2u10_40
   522   000096                     i2u10_41:
   523   000096  EF42  F000         	goto	i2l829
   524   00009A                     i2u10_40:
   525   00009A                     i2l833:
   526   00009A  90D8               	bcf	status,0,c
   527   00009C  3607               	rlcf	___awdiv@quotient^0,f,c
   528   00009E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   529   0000A0  5003               	movf	___awdiv@divisor^0,w,c
   530   0000A2  5C01               	subwf	___awdiv@dividend^0,w,c
   531   0000A4  5004               	movf	(___awdiv@divisor+1)^0,w,c
   532   0000A6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   533   0000A8  A0D8               	btfss	status,0,c
   534   0000AA  EF59  F000         	goto	i2u11_41
   535   0000AE  EF5B  F000         	goto	i2u11_40
   536   0000B2                     i2u11_41:
   537   0000B2  EF60  F000         	goto	i2l841
   538   0000B6                     i2u11_40:
   539   0000B6  5003               	movf	___awdiv@divisor^0,w,c
   540   0000B8  5E01               	subwf	___awdiv@dividend^0,f,c
   541   0000BA  5004               	movf	(___awdiv@divisor+1)^0,w,c
   542   0000BC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   543   0000BE  8007               	bsf	___awdiv@quotient^0,0,c
   544   0000C0                     i2l841:
   545   0000C0  90D8               	bcf	status,0,c
   546   0000C2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   547   0000C4  3203               	rrcf	___awdiv@divisor^0,f,c
   548   0000C6  2E05               	decfsz	___awdiv@counter^0,f,c
   549   0000C8  EF4D  F000         	goto	i2l833
   550   0000CC                     i2l845:
   551   0000CC  5006               	movf	___awdiv@sign^0,w,c
   552   0000CE  B4D8               	btfsc	status,2,c
   553   0000D0  EF6C  F000         	goto	i2u12_41
   554   0000D4  EF6E  F000         	goto	i2u12_40
   555   0000D8                     i2u12_41:
   556   0000D8  EF72  F000         	goto	i2l849
   557   0000DC                     i2u12_40:
   558   0000DC  6C07               	negf	___awdiv@quotient^0,c
   559   0000DE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   560   0000E0  B0D8               	btfsc	status,0,c
   561   0000E2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   562   0000E4                     i2l849:
   563   0000E4  C007  F001         	movff	___awdiv@quotient,?___awdiv
   564   0000E8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   565   0000EC  0012               	return		;funcret
   566   0000EE                     __end_of___awdiv:
   567                           	callstack 0
   568   000000                     
   569                           	psect	rparam
   570   000000                     
   571                           	psect	temp
   572   000010                     btemp:
   573                           	callstack 0
   574   000010                     	ds	1
   575   000000                     int$flags	set	btemp
   576   000000                     wtemp8	set	btemp+1
   577   000000                     ttemp5	set	btemp+1
   578   000000                     ttemp6	set	btemp+4
   579   000000                     ttemp7	set	btemp+8
   580                           
   581                           	psect	idloc
   582                           
   583                           ;Config register IDLOC0 @ 0x200000
   584                           ;	unspecified, using default values
   585   200000                     	org	2097152
   586   200000  FF                 	db	255
   587                           
   588                           ;Config register IDLOC1 @ 0x200001
   589                           ;	unspecified, using default values
   590   200001                     	org	2097153
   591   200001  FF                 	db	255
   592                           
   593                           ;Config register IDLOC2 @ 0x200002
   594                           ;	unspecified, using default values
   595   200002                     	org	2097154
   596   200002  FF                 	db	255
   597                           
   598                           ;Config register IDLOC3 @ 0x200003
   599                           ;	unspecified, using default values
   600   200003                     	org	2097155
   601   200003  FF                 	db	255
   602                           
   603                           ;Config register IDLOC4 @ 0x200004
   604                           ;	unspecified, using default values
   605   200004                     	org	2097156
   606   200004  FF                 	db	255
   607                           
   608                           ;Config register IDLOC5 @ 0x200005
   609                           ;	unspecified, using default values
   610   200005                     	org	2097157
   611   200005  FF                 	db	255
   612                           
   613                           ;Config register IDLOC6 @ 0x200006
   614                           ;	unspecified, using default values
   615   200006                     	org	2097158
   616   200006  FF                 	db	255
   617                           
   618                           ;Config register IDLOC7 @ 0x200007
   619                           ;	unspecified, using default values
   620   200007                     	org	2097159
   621   200007  FF                 	db	255
   622                           
   623                           	psect	config
   624                           
   625                           ; Padding undefined space
   626   300000                     	org	3145728
   627   300000  FF                 	db	255
   628                           
   629                           ;Config register CONFIG1H @ 0x300001
   630                           ;	unspecified, using default values
   631                           ;	Oscillator Selection bits
   632                           ;	OSC = 0x7, unprogrammed default
   633                           ;	Fail-Safe Clock Monitor Enable bit
   634                           ;	FCMEN = 0x0, unprogrammed default
   635                           ;	Internal/External Oscillator Switchover bit
   636                           ;	IESO = 0x0, unprogrammed default
   637   300001                     	org	3145729
   638   300001  07                 	db	7
   639                           
   640                           ;Config register CONFIG2L @ 0x300002
   641                           ;	unspecified, using default values
   642                           ;	Power-up Timer Enable bit
   643                           ;	PWRT = 0x1, unprogrammed default
   644                           ;	Brown-out Reset Enable bits
   645                           ;	BOREN = 0x3, unprogrammed default
   646                           ;	Brown Out Reset Voltage bits
   647                           ;	BORV = 0x3, unprogrammed default
   648   300002                     	org	3145730
   649   300002  1F                 	db	31
   650                           
   651                           ;Config register CONFIG2H @ 0x300003
   652                           ;	unspecified, using default values
   653                           ;	Watchdog Timer Enable bit
   654                           ;	WDT = 0x1, unprogrammed default
   655                           ;	Watchdog Timer Postscale Select bits
   656                           ;	WDTPS = 0xF, unprogrammed default
   657   300003                     	org	3145731
   658   300003  1F                 	db	31
   659                           
   660                           ; Padding undefined space
   661   300004                     	org	3145732
   662   300004  FF                 	db	255
   663                           
   664                           ;Config register CONFIG3H @ 0x300005
   665                           ;	unspecified, using default values
   666                           ;	CCP2 MUX bit
   667                           ;	CCP2MX = 0x1, unprogrammed default
   668                           ;	PORTB A/D Enable bit
   669                           ;	PBADEN = 0x1, unprogrammed default
   670                           ;	Low-Power Timer1 Oscillator Enable bit
   671                           ;	LPT1OSC = 0x0, unprogrammed default
   672                           ;	MCLR Pin Enable bit
   673                           ;	MCLRE = 0x1, unprogrammed default
   674   300005                     	org	3145733
   675   300005  83                 	db	131
   676                           
   677                           ;Config register CONFIG4L @ 0x300006
   678                           ;	unspecified, using default values
   679                           ;	Stack Full/Underflow Reset Enable bit
   680                           ;	STVREN = 0x1, unprogrammed default
   681                           ;	Single-Supply ICSP Enable bit
   682                           ;	LVP = 0x1, unprogrammed default
   683                           ;	Extended Instruction Set Enable bit
   684                           ;	XINST = 0x0, unprogrammed default
   685                           ;	Background Debugger Enable bit
   686                           ;	DEBUG = 0x1, unprogrammed default
   687   300006                     	org	3145734
   688   300006  85                 	db	133
   689                           
   690                           ; Padding undefined space
   691   300007                     	org	3145735
   692   300007  FF                 	db	255
   693                           
   694                           ;Config register CONFIG5L @ 0x300008
   695                           ;	unspecified, using default values
   696                           ;	Code Protection bit
   697                           ;	CP0 = 0x1, unprogrammed default
   698                           ;	Code Protection bit
   699                           ;	CP1 = 0x1, unprogrammed default
   700                           ;	Code Protection bit
   701                           ;	CP2 = 0x1, unprogrammed default
   702                           ;	Code Protection bit
   703                           ;	CP3 = 0x1, unprogrammed default
   704   300008                     	org	3145736
   705   300008  0F                 	db	15
   706                           
   707                           ;Config register CONFIG5H @ 0x300009
   708                           ;	unspecified, using default values
   709                           ;	Boot Block Code Protection bit
   710                           ;	CPB = 0x1, unprogrammed default
   711                           ;	Data EEPROM Code Protection bit
   712                           ;	CPD = 0x1, unprogrammed default
   713   300009                     	org	3145737
   714   300009  C0                 	db	192
   715                           
   716                           ;Config register CONFIG6L @ 0x30000A
   717                           ;	unspecified, using default values
   718                           ;	Write Protection bit
   719                           ;	WRT0 = 0x1, unprogrammed default
   720                           ;	Write Protection bit
   721                           ;	WRT1 = 0x1, unprogrammed default
   722                           ;	Write Protection bit
   723                           ;	WRT2 = 0x1, unprogrammed default
   724                           ;	Write Protection bit
   725                           ;	WRT3 = 0x1, unprogrammed default
   726   30000A                     	org	3145738
   727   30000A  0F                 	db	15
   728                           
   729                           ;Config register CONFIG6H @ 0x30000B
   730                           ;	unspecified, using default values
   731                           ;	Configuration Register Write Protection bit
   732                           ;	WRTC = 0x1, unprogrammed default
   733                           ;	Boot Block Write Protection bit
   734                           ;	WRTB = 0x1, unprogrammed default
   735                           ;	Data EEPROM Write Protection bit
   736                           ;	WRTD = 0x1, unprogrammed default
   737   30000B                     	org	3145739
   738   30000B  E0                 	db	224
   739                           
   740                           ;Config register CONFIG7L @ 0x30000C
   741                           ;	unspecified, using default values
   742                           ;	Table Read Protection bit
   743                           ;	EBTR0 = 0x1, unprogrammed default
   744                           ;	Table Read Protection bit
   745                           ;	EBTR1 = 0x1, unprogrammed default
   746                           ;	Table Read Protection bit
   747                           ;	EBTR2 = 0x1, unprogrammed default
   748                           ;	Table Read Protection bit
   749                           ;	EBTR3 = 0x1, unprogrammed default
   750   30000C                     	org	3145740
   751   30000C  0F                 	db	15
   752                           
   753                           ;Config register CONFIG7H @ 0x30000D
   754                           ;	unspecified, using default values
   755                           ;	Boot Block Table Read Protection bit
   756                           ;	EBTRB = 0x1, unprogrammed default
   757   30000D                     	org	3145741
   758   30000D  40                 	db	64
   759                           tosu	equ	0xFFF
   760                           tosh	equ	0xFFE
   761                           tosl	equ	0xFFD
   762                           stkptr	equ	0xFFC
   763                           pclatu	equ	0xFFB
   764                           pclath	equ	0xFFA
   765                           pcl	equ	0xFF9
   766                           tblptru	equ	0xFF8
   767                           tblptrh	equ	0xFF7
   768                           tblptrl	equ	0xFF6
   769                           tablat	equ	0xFF5
   770                           prodh	equ	0xFF4
   771                           prodl	equ	0xFF3
   772                           indf0	equ	0xFEF
   773                           postinc0	equ	0xFEE
   774                           postdec0	equ	0xFED
   775                           preinc0	equ	0xFEC
   776                           plusw0	equ	0xFEB
   777                           fsr0h	equ	0xFEA
   778                           fsr0l	equ	0xFE9
   779                           wreg	equ	0xFE8
   780                           indf1	equ	0xFE7
   781                           postinc1	equ	0xFE6
   782                           postdec1	equ	0xFE5
   783                           preinc1	equ	0xFE4
   784                           plusw1	equ	0xFE3
   785                           fsr1h	equ	0xFE2
   786                           fsr1l	equ	0xFE1
   787                           bsr	equ	0xFE0
   788                           indf2	equ	0xFDF
   789                           postinc2	equ	0xFDE
   790                           postdec2	equ	0xFDD
   791                           preinc2	equ	0xFDC
   792                           plusw2	equ	0xFDB
   793                           fsr2h	equ	0xFDA
   794                           fsr2l	equ	0xFD9
   795                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     15      15
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    None.

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Lo_ISR                                               1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Hi_ISR                                               6     6      0     520
                                              8 COMRAM     6     6      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _Lo_ISR (ROOT)

 _Hi_ISR (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E      F       F       1       11.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhh         D      0       0      16        0.0%
BITBIGSFRhhl        1E      0       0      17        0.0%
BITBIGSFRhlh         2      0       0      18        0.0%
BITBIGSFRhll         B      0       0      19        0.0%
BITBIGSFRlhh        20      0       0      20        0.0%
BITBIGSFRlhlhh       7      0       0      21        0.0%
BITBIGSFRlhlhl       2      0       0      22        0.0%
BITBIGSFRlhll        5      0       0      23        0.0%
BITBIGSFRll          C      0       0      24        0.0%
ABS                  0      0       0      25        0.0%
BIGRAM             5FF      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Dec 06 20:38:11 2022

                     l41 017A             ___awdiv@sign 0006                       bsr 000FE0  
                    l731 016A                      l741 0174                      l733 016C  
                    l725 013A                      l805 017C                      l743 0176  
                    l735 016E                      l727 014A                      l807 0180  
                    l745 0178                      l737 0170                      l729 014C  
                    l739 0172                     _LATD 000F8C                     i1l38 001E  
                   i2l33 0136                     _main 017C                     _init 013A  
                   btemp 0010                     start 0026             ___param_bank 000000  
                  ?_main 0001                    ?_init 0001          __end_of___awdiv 00EE  
        ___awdiv@divisor 0003                    i1l803 001E                    i2l283 00EC  
                  i2l811 002E                    i2l821 005E                    i2l813 003C  
                  i2l831 008C                    i2l823 0062                    i2l815 0044  
                  i2l841 00C0                    i2l833 009A                    i2l825 006A  
                  i2l817 0048                    i2l809 002A                    i2l843 00C6  
                  i2l835 00A0                    i2l827 007C                    i2l819 0056  
                  i2l837 00B6                    i2l829 0084                    i2l845 00CC  
                  i2l861 0134                    i2l853 00F0                    i2l847 00DC  
                  i2l839 00BE                    i2l855 0102                    i2l849 00E4  
                  i2l857 012E                    i2l859 0132          ___awdiv@counter 0005  
                  _TRISA 000F92                    _TRISD 000F95                    ttemp5 0011  
                  ttemp6 0014                    ttemp7 0018                    status 000FD8  
                  wtemp8 0011          __initialization 018A             __end_of_main 018A  
           __end_of_init 017C                   ??_main 0010                   ??_init 0010  
          __activetblptr 000000                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0001                   i2u7_40 003C                   i2u7_41 0038  
                 i2u8_40 0056                   i2u8_41 0052                   i2u9_40 007C  
                 i2u9_41 0078                   _Hi_ISR 0008                   _Lo_ISR 0018  
              ??___awdiv 0005         ___awdiv@quotient 0007                   isa$std 000001  
             __accesstop 0080  __end_of__initialization 018A            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  ?_Hi_ISR 0001                  ?_Lo_ISR 0001  
                i2u10_40 009A                  i2u10_41 0096                  i2u11_40 00B6  
                i2u11_41 00B2                  i2u12_40 00DC                  i2u12_41 00D8  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 002A  
                __pcinit 018A                  __ramtop 0600                  __ptext0 017C  
                __ptext1 013A                  __ptext4 002A           __pintcode_body 00EE  
   end_of_initialization 018A                  int_func 00EE           __end_of_Hi_ISR 013A  
         __end_of_Lo_ISR 0026      start_initialization 018A                 ??_Hi_ISR 0009  
               ??_Lo_ISR 000F                __pintcode 0008                 ?___awdiv 0001  
            __pintcodelo 0018              Hi_ISR@input 000D            Hi_ISR@bitShow 000B  
               _IPR1bits 000F9F                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
               _RCONbits 000FD0               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000                 int$flags 0010               _INTCONbits 000FF2  
               intlevel1 0000                 intlevel2 0000               _OSCCONbits 000FD3  
