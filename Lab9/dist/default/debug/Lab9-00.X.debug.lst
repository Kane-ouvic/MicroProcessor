

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Dec 07 21:08:28 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Version 2.40
    19                           ; Generated 04/07/2022 GMT
    20                           ; 
    21                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4520 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     _PIE1bits	set	3997
    54   000000                     _PIR1bits	set	3998
    55   000000                     _ADRESL	set	4035
    56   000000                     _ADRESH	set	4036
    57   000000                     _LATD	set	3980
    58   000000                     _INTCONbits	set	4082
    59   000000                     _RCONbits	set	4048
    60   000000                     _OSCCONbits	set	4051
    61   000000                     _TRISA	set	3986
    62   000000                     _IPR1bits	set	3999
    63   000000                     _ADCON2bits	set	4032
    64   000000                     _ADCON1bits	set	4033
    65   000000                     _ADCON0bits	set	4034
    66   000000                     _TRISD	set	3989
    67                           
    68                           ; #config settings
    69                           
    70                           	psect	cinit
    71   000162                     __pcinit:
    72                           	callstack 0
    73   000162                     start_initialization:
    74                           	callstack 0
    75   000162                     __initialization:
    76                           	callstack 0
    77   000162                     end_of_initialization:
    78                           	callstack 0
    79   000162                     __end_of__initialization:
    80                           	callstack 0
    81   000162  900F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    82   000164  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    83   000166  0100               	movlb	0
    84   000168  EFAA  F000         	goto	_main	;jump to C main() function
    85                           
    86                           	psect	cstackCOMRAM
    87   000001                     __pcstackCOMRAM:
    88                           	callstack 0
    89   000001                     ?___awdiv:
    90                           	callstack 0
    91   000001                     ___awdiv@dividend:
    92                           	callstack 0
    93                           
    94                           ; 2 bytes @ 0x0
    95   000001                     	ds	2
    96   000003                     ___awdiv@divisor:
    97                           	callstack 0
    98                           
    99                           ; 2 bytes @ 0x2
   100   000003                     	ds	2
   101   000005                     ___awdiv@counter:
   102                           	callstack 0
   103                           
   104                           ; 1 bytes @ 0x4
   105   000005                     	ds	1
   106   000006                     ___awdiv@sign:
   107                           	callstack 0
   108                           
   109                           ; 1 bytes @ 0x5
   110   000006                     	ds	1
   111   000007                     ___awdiv@quotient:
   112                           	callstack 0
   113                           
   114                           ; 2 bytes @ 0x6
   115   000007                     	ds	2
   116   000009                     ??_ISR:
   117                           
   118                           ; 1 bytes @ 0x8
   119   000009                     	ds	2
   120   00000B                     ISR@input:
   121                           	callstack 0
   122                           
   123                           ; 2 bytes @ 0xA
   124   00000B                     	ds	2
   125   00000D                     ISR@bitShow:
   126                           	callstack 0
   127                           
   128                           ; 2 bytes @ 0xC
   129   00000D                     	ds	2
   130   00000F                     
   131                           ; 1 bytes @ 0xE
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 73 in file "basic.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;		None
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		wreg, status,2, cstack
   146 ;; Tracked objects:
   147 ;;		On entry : 0/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   151 ;;      Params:         0       0       0       0       0       0       0
   152 ;;      Locals:         0       0       0       0       0       0       0
   153 ;;      Temps:          0       0       0       0       0       0       0
   154 ;;      Totals:         0       0       0       0       0       0       0
   155 ;;Total ram usage:        0 bytes
   156 ;; Hardware stack levels required when called: 3
   157 ;; This function calls:
   158 ;;		_init
   159 ;; This function is called by:
   160 ;;		Startup code after reset
   161 ;; This function uses a non-reentrant model
   162 ;;
   163                           
   164                           	psect	text0
   165   000154                     __ptext0:
   166                           	callstack 0
   167   000154                     _main:
   168                           	callstack 28
   169   000154  EC6B  F000         	call	_init	;wreg free
   170   000158                     l800:
   171   000158  82C2               	bsf	194,1,c	;volatile
   172   00015A  EFAC  F000         	goto	l800
   173   00015E  EF07  F000         	goto	start
   174   000162                     __end_of_main:
   175                           	callstack 0
   176                           
   177 ;; *************** function _init *****************
   178 ;; Defined at:
   179 ;;		line 34 in file "basic.c"
   180 ;; Parameters:    Size  Location     Type
   181 ;;		None
   182 ;; Auto vars:     Size  Location     Type
   183 ;;		None
   184 ;; Return value:  Size  Location     Type
   185 ;;                  1    wreg      void 
   186 ;; Registers used:
   187 ;;		wreg, status,2
   188 ;; Tracked objects:
   189 ;;		On entry : 0/0
   190 ;;		On exit  : 0/0
   191 ;;		Unchanged: 0/0
   192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   193 ;;      Params:         0       0       0       0       0       0       0
   194 ;;      Locals:         0       0       0       0       0       0       0
   195 ;;      Temps:          0       0       0       0       0       0       0
   196 ;;      Totals:         0       0       0       0       0       0       0
   197 ;;Total ram usage:        0 bytes
   198 ;; Hardware stack levels used: 1
   199 ;; Hardware stack levels required when called: 2
   200 ;; This function calls:
   201 ;;		Nothing
   202 ;; This function is called by:
   203 ;;		_main
   204 ;; This function uses a non-reentrant model
   205 ;;
   206                           
   207                           	psect	text1
   208   0000D6                     __ptext1:
   209                           	callstack 0
   210   0000D6                     _init:
   211                           	callstack 28
   212   0000D6                     
   213                           ;basic.c: 36:     ADCON0bits.ADON = 0x1;
   214   0000D6  0E70               	movlw	112
   215   0000D8  12D3               	iorwf	211,f,c	;volatile
   216                           
   217                           ;basic.c: 38:     ADCON2bits.ADFM = 0x1;
   218   0000DA  0E01               	movlw	1
   219   0000DC  6E92               	movwf	146,c	;volatile
   220                           
   221                           ;basic.c: 40:     PIR1bits.ADIF = 0x0;
   222   0000DE  0E00               	movlw	0
   223   0000E0  6E95               	movwf	149,c	;volatile
   224                           
   225                           ;basic.c: 42:     PIE1bits.ADIE = 0x1;
   226   0000E2  0E00               	movlw	0
   227   0000E4  6E8C               	movwf	140,c	;volatile
   228   0000E6                     
   229                           ;basic.c: 44:     INTCONbits.GIE = 0x1;
   230   0000E6  9AC1               	bcf	193,5,c	;volatile
   231   0000E8                     
   232                           ;basic.c: 46:     IPR1bits.ADIP = 0x1;
   233   0000E8  98C1               	bcf	193,4,c	;volatile
   234                           
   235                           ;basic.c: 48:     ADCON0bits.GO = 0x1;
   236   0000EA  50C1               	movf	193,w,c	;volatile
   237   0000EC  0BF0               	andlw	-16
   238   0000EE  090E               	iorlw	14
   239   0000F0  6EC1               	movwf	193,c	;volatile
   240                           
   241                           ;basic.c: 50:     RCONbits.IPEN = 0x1;
   242   0000F2  0EC3               	movlw	-61
   243   0000F4  16C2               	andwf	194,f,c	;volatile
   244                           
   245                           ;basic.c: 52: 
   246   0000F6  50C0               	movf	192,w,c	;volatile
   247   0000F8  0BF8               	andlw	-8
   248   0000FA  0901               	iorlw	1
   249   0000FC  6EC0               	movwf	192,c	;volatile
   250                           
   251                           ;basic.c: 54:     init();
   252   0000FE  50C0               	movf	192,w,c	;volatile
   253   000100  0BC7               	andlw	-57
   254   000102  0920               	iorlw	32
   255   000104  6EC0               	movwf	192,c	;volatile
   256   000106                     
   257                           ;basic.c: 56: 
   258   000106  80C2               	bsf	194,0,c	;volatile
   259   000108                     
   260                           ;basic.c: 58:         continue;
   261   000108  8EC0               	bsf	192,7,c	;volatile
   262   00010A                     
   263                           ;basic.c: 60:     return;
   264   00010A  9C9E               	bcf	158,6,c	;volatile
   265   00010C  8C9D               	bsf	157,6,c	;volatile
   266   00010E  8EF2               	bsf	242,7,c	;volatile
   267   000110  8C9F               	bsf	159,6,c	;volatile
   268   000112  82C2               	bsf	194,1,c	;volatile
   269   000114  8ED0               	bsf	208,7,c	;volatile
   270   000116  0012               	return		;funcret
   271   000118                     __end_of_init:
   272                           	callstack 0
   273                           
   274 ;; *************** function _ISR *****************
   275 ;; Defined at:
   276 ;;		line 20 in file "basic.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;  bitShow         2   12[COMRAM] int 
   281 ;;  input           2   10[COMRAM] int 
   282 ;; Return value:  Size  Location     Type
   283 ;;                  1    wreg      void 
   284 ;; Registers used:
   285 ;;		wreg, status,2, status,0, cstack
   286 ;; Tracked objects:
   287 ;;		On entry : 0/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   291 ;;      Params:         0       0       0       0       0       0       0
   292 ;;      Locals:         4       0       0       0       0       0       0
   293 ;;      Temps:          2       0       0       0       0       0       0
   294 ;;      Totals:         6       0       0       0       0       0       0
   295 ;;Total ram usage:        6 bytes
   296 ;; Hardware stack levels used: 1
   297 ;; Hardware stack levels required when called: 1
   298 ;; This function calls:
   299 ;;		___awdiv
   300 ;; This function is called by:
   301 ;;		Interrupt level 2
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           	psect	intcode
   306   000008                     __pintcode:
   307                           	callstack 0
   308   000008                     _ISR:
   309                           	callstack 28
   310                           
   311                           ;incstack = 0
   312   000008  820F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   313   00000A  ED8C  F000         	call	int_func,f	;refresh shadow registers
   314                           
   315                           	psect	intcode_body
   316   000118                     __pintcode_body:
   317                           	callstack 28
   318   000118                     int_func:
   319                           	callstack 28
   320   000118  0006               	pop		; remove dummy address from shadow register refresh
   321   00011A                     
   322                           ;basic.c: 22:     LATD = 0x00;
   323   00011A  50C4               	movf	196,w,c	;volatile
   324   00011C  6E0A               	movwf	(??_ISR+1)^0,c
   325   00011E  6A09               	clrf	??_ISR^0,c
   326   000120  50C3               	movf	195,w,c	;volatile
   327   000122  2409               	addwf	??_ISR^0,w,c
   328   000124  6E0B               	movwf	ISR@input^0,c
   329   000126  0E00               	movlw	0
   330   000128  200A               	addwfc	(??_ISR+1)^0,w,c
   331   00012A  6E0C               	movwf	(ISR@input+1)^0,c
   332   00012C                     
   333                           ;basic.c: 24:     ADCON1bits.VCFG1 = 0;
   334   00012C  C00B  F001         	movff	ISR@input,___awdiv@dividend
   335   000130  C00C  F002         	movff	ISR@input+1,___awdiv@dividend+1
   336   000134  0E00               	movlw	0
   337   000136  6E04               	movwf	(___awdiv@divisor+1)^0,c
   338   000138  0E40               	movlw	64
   339   00013A  6E03               	movwf	___awdiv@divisor^0,c
   340   00013C  EC09  F000         	call	___awdiv	;wreg free
   341   000140  C001  F00D         	movff	?___awdiv,ISR@bitShow
   342   000144  C002  F00E         	movff	?___awdiv+1,ISR@bitShow+1
   343   000148                     
   344                           ;basic.c: 25: 
   345   000148  C00D  FF8C         	movff	ISR@bitShow,3980	;volatile
   346   00014C                     
   347                           ;basic.c: 28:     ADCON1bits.PCFG = 0xE;
   348   00014C  9C9E               	bcf	158,6,c	;volatile
   349   00014E                     
   350                           ;basic.c: 30:     ADCON0bits.CHS = 0x0;
   351   00014E  82C2               	bsf	194,1,c	;volatile
   352   000150  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   353   000152  0011               	retfie		f
   354   000154                     __end_of_ISR:
   355                           	callstack 0
   356                           
   357 ;; *************** function ___awdiv *****************
   358 ;; Defined at:
   359 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;  dividend        2    0[COMRAM] int 
   362 ;;  divisor         2    2[COMRAM] int 
   363 ;; Auto vars:     Size  Location     Type
   364 ;;  quotient        2    6[COMRAM] int 
   365 ;;  sign            1    5[COMRAM] unsigned char 
   366 ;;  counter         1    4[COMRAM] unsigned char 
   367 ;; Return value:  Size  Location     Type
   368 ;;                  2    0[COMRAM] int 
   369 ;; Registers used:
   370 ;;		wreg, status,2, status,0
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   376 ;;      Params:         4       0       0       0       0       0       0
   377 ;;      Locals:         4       0       0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0       0       0
   379 ;;      Totals:         8       0       0       0       0       0       0
   380 ;;Total ram usage:        8 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		_ISR
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           	psect	text3
   390   000012                     __ptext3:
   391                           	callstack 0
   392   000012                     ___awdiv:
   393                           	callstack 28
   394   000012  0E00               	movlw	0
   395   000014  6E06               	movwf	___awdiv@sign^0,c
   396   000016  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   397   000018  EF12  F000         	goto	i2u7_40
   398   00001C  EF10  F000         	goto	i2u7_41
   399   000020                     i2u7_41:
   400   000020  EF18  F000         	goto	i2l810
   401   000024                     i2u7_40:
   402   000024  6C03               	negf	___awdiv@divisor^0,c
   403   000026  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   404   000028  B0D8               	btfsc	status,0,c
   405   00002A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   406   00002C  0E01               	movlw	1
   407   00002E  6E06               	movwf	___awdiv@sign^0,c
   408   000030                     i2l810:
   409   000030  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   410   000032  EF1F  F000         	goto	i2u8_40
   411   000036  EF1D  F000         	goto	i2u8_41
   412   00003A                     i2u8_41:
   413   00003A  EF25  F000         	goto	i2l816
   414   00003E                     i2u8_40:
   415   00003E  6C01               	negf	___awdiv@dividend^0,c
   416   000040  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   417   000042  B0D8               	btfsc	status,0,c
   418   000044  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   419   000046  0E01               	movlw	1
   420   000048  1A06               	xorwf	___awdiv@sign^0,f,c
   421   00004A                     i2l816:
   422   00004A  0E00               	movlw	0
   423   00004C  6E08               	movwf	(___awdiv@quotient+1)^0,c
   424   00004E  0E00               	movlw	0
   425   000050  6E07               	movwf	___awdiv@quotient^0,c
   426   000052  5003               	movf	___awdiv@divisor^0,w,c
   427   000054  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   428   000056  B4D8               	btfsc	status,2,c
   429   000058  EF30  F000         	goto	i2u9_41
   430   00005C  EF32  F000         	goto	i2u9_40
   431   000060                     i2u9_41:
   432   000060  EF5A  F000         	goto	i2l838
   433   000064                     i2u9_40:
   434   000064  0E01               	movlw	1
   435   000066  6E05               	movwf	___awdiv@counter^0,c
   436   000068  EF3A  F000         	goto	i2l824
   437   00006C                     i2l822:
   438   00006C  90D8               	bcf	status,0,c
   439   00006E  3603               	rlcf	___awdiv@divisor^0,f,c
   440   000070  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   441   000072  2A05               	incf	___awdiv@counter^0,f,c
   442   000074                     i2l824:
   443   000074  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   444   000076  EF3F  F000         	goto	i2u10_41
   445   00007A  EF41  F000         	goto	i2u10_40
   446   00007E                     i2u10_41:
   447   00007E  EF36  F000         	goto	i2l822
   448   000082                     i2u10_40:
   449   000082                     i2l826:
   450   000082  90D8               	bcf	status,0,c
   451   000084  3607               	rlcf	___awdiv@quotient^0,f,c
   452   000086  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   453   000088  5003               	movf	___awdiv@divisor^0,w,c
   454   00008A  5C01               	subwf	___awdiv@dividend^0,w,c
   455   00008C  5004               	movf	(___awdiv@divisor+1)^0,w,c
   456   00008E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   457   000090  A0D8               	btfss	status,0,c
   458   000092  EF4D  F000         	goto	i2u11_41
   459   000096  EF4F  F000         	goto	i2u11_40
   460   00009A                     i2u11_41:
   461   00009A  EF54  F000         	goto	i2l834
   462   00009E                     i2u11_40:
   463   00009E  5003               	movf	___awdiv@divisor^0,w,c
   464   0000A0  5E01               	subwf	___awdiv@dividend^0,f,c
   465   0000A2  5004               	movf	(___awdiv@divisor+1)^0,w,c
   466   0000A4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   467   0000A6  8007               	bsf	___awdiv@quotient^0,0,c
   468   0000A8                     i2l834:
   469   0000A8  90D8               	bcf	status,0,c
   470   0000AA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   471   0000AC  3203               	rrcf	___awdiv@divisor^0,f,c
   472   0000AE  2E05               	decfsz	___awdiv@counter^0,f,c
   473   0000B0  EF41  F000         	goto	i2l826
   474   0000B4                     i2l838:
   475   0000B4  5006               	movf	___awdiv@sign^0,w,c
   476   0000B6  B4D8               	btfsc	status,2,c
   477   0000B8  EF60  F000         	goto	i2u12_41
   478   0000BC  EF62  F000         	goto	i2u12_40
   479   0000C0                     i2u12_41:
   480   0000C0  EF66  F000         	goto	i2l842
   481   0000C4                     i2u12_40:
   482   0000C4  6C07               	negf	___awdiv@quotient^0,c
   483   0000C6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   484   0000C8  B0D8               	btfsc	status,0,c
   485   0000CA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   486   0000CC                     i2l842:
   487   0000CC  C007  F001         	movff	___awdiv@quotient,?___awdiv
   488   0000D0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   489   0000D4  0012               	return		;funcret
   490   0000D6                     __end_of___awdiv:
   491                           	callstack 0
   492   000000                     
   493                           	psect	rparam
   494   000000                     
   495                           	psect	temp
   496   00000F                     btemp:
   497                           	callstack 0
   498   00000F                     	ds	1
   499   000000                     int$flags	set	btemp
   500   000000                     wtemp8	set	btemp+1
   501   000000                     ttemp5	set	btemp+1
   502   000000                     ttemp6	set	btemp+4
   503   000000                     ttemp7	set	btemp+8
   504                           
   505                           	psect	idloc
   506                           
   507                           ;Config register IDLOC0 @ 0x200000
   508                           ;	unspecified, using default values
   509   200000                     	org	2097152
   510   200000  FF                 	db	255
   511                           
   512                           ;Config register IDLOC1 @ 0x200001
   513                           ;	unspecified, using default values
   514   200001                     	org	2097153
   515   200001  FF                 	db	255
   516                           
   517                           ;Config register IDLOC2 @ 0x200002
   518                           ;	unspecified, using default values
   519   200002                     	org	2097154
   520   200002  FF                 	db	255
   521                           
   522                           ;Config register IDLOC3 @ 0x200003
   523                           ;	unspecified, using default values
   524   200003                     	org	2097155
   525   200003  FF                 	db	255
   526                           
   527                           ;Config register IDLOC4 @ 0x200004
   528                           ;	unspecified, using default values
   529   200004                     	org	2097156
   530   200004  FF                 	db	255
   531                           
   532                           ;Config register IDLOC5 @ 0x200005
   533                           ;	unspecified, using default values
   534   200005                     	org	2097157
   535   200005  FF                 	db	255
   536                           
   537                           ;Config register IDLOC6 @ 0x200006
   538                           ;	unspecified, using default values
   539   200006                     	org	2097158
   540   200006  FF                 	db	255
   541                           
   542                           ;Config register IDLOC7 @ 0x200007
   543                           ;	unspecified, using default values
   544   200007                     	org	2097159
   545   200007  FF                 	db	255
   546                           
   547                           	psect	config
   548                           
   549                           ; Padding undefined space
   550   300000                     	org	3145728
   551   300000  FF                 	db	255
   552                           
   553                           ;Config register CONFIG1H @ 0x300001
   554                           ;	Oscillator Selection bits
   555                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   556                           ;	Fail-Safe Clock Monitor Enable bit
   557                           ;	FCMEN = 0x0, unprogrammed default
   558                           ;	Internal/External Oscillator Switchover bit
   559                           ;	IESO = 0x0, unprogrammed default
   560   300001                     	org	3145729
   561   300001  08                 	db	8
   562                           
   563                           ;Config register CONFIG2L @ 0x300002
   564                           ;	Power-up Timer Enable bit
   565                           ;	PWRT = OFF, PWRT disabled
   566                           ;	Brown-out Reset Enable bits
   567                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
   568                           ;	Brown Out Reset Voltage bits
   569                           ;	BORV = 0x3, unprogrammed default
   570   300002                     	org	3145730
   571   300002  1B                 	db	27
   572                           
   573                           ;Config register CONFIG2H @ 0x300003
   574                           ;	Watchdog Timer Enable bit
   575                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   576                           ;	Watchdog Timer Postscale Select bits
   577                           ;	WDTPS = 0xF, unprogrammed default
   578   300003                     	org	3145731
   579   300003  1E                 	db	30
   580                           
   581                           ; Padding undefined space
   582   300004                     	org	3145732
   583   300004  FF                 	db	255
   584                           
   585                           ;Config register CONFIG3H @ 0x300005
   586                           ;	CCP2 MUX bit
   587                           ;	CCP2MX = 0x1, unprogrammed default
   588                           ;	PORTB A/D Enable bit
   589                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   590                           ;	Low-Power Timer1 Oscillator Enable bit
   591                           ;	LPT1OSC = 0x0, unprogrammed default
   592                           ;	MCLR Pin Enable bit
   593                           ;	MCLRE = 0x1, unprogrammed default
   594   300005                     	org	3145733
   595   300005  81                 	db	129
   596                           
   597                           ;Config register CONFIG4L @ 0x300006
   598                           ;	Stack Full/Underflow Reset Enable bit
   599                           ;	STVREN = 0x1, unprogrammed default
   600                           ;	Single-Supply ICSP Enable bit
   601                           ;	LVP = OFF, Single-Supply ICSP disabled
   602                           ;	Extended Instruction Set Enable bit
   603                           ;	XINST = 0x0, unprogrammed default
   604                           ;	Background Debugger Enable bit
   605                           ;	DEBUG = 0x1, unprogrammed default
   606   300006                     	org	3145734
   607   300006  81                 	db	129
   608                           
   609                           ; Padding undefined space
   610   300007                     	org	3145735
   611   300007  FF                 	db	255
   612                           
   613                           ;Config register CONFIG5L @ 0x300008
   614                           ;	unspecified, using default values
   615                           ;	Code Protection bit
   616                           ;	CP0 = 0x1, unprogrammed default
   617                           ;	Code Protection bit
   618                           ;	CP1 = 0x1, unprogrammed default
   619                           ;	Code Protection bit
   620                           ;	CP2 = 0x1, unprogrammed default
   621                           ;	Code Protection bit
   622                           ;	CP3 = 0x1, unprogrammed default
   623   300008                     	org	3145736
   624   300008  0F                 	db	15
   625                           
   626                           ;Config register CONFIG5H @ 0x300009
   627                           ;	Boot Block Code Protection bit
   628                           ;	CPB = 0x1, unprogrammed default
   629                           ;	Data EEPROM Code Protection bit
   630                           ;	CPD = OFF, Data EEPROM not code-protected
   631   300009                     	org	3145737
   632   300009  C0                 	db	192
   633                           
   634                           ;Config register CONFIG6L @ 0x30000A
   635                           ;	unspecified, using default values
   636                           ;	Write Protection bit
   637                           ;	WRT0 = 0x1, unprogrammed default
   638                           ;	Write Protection bit
   639                           ;	WRT1 = 0x1, unprogrammed default
   640                           ;	Write Protection bit
   641                           ;	WRT2 = 0x1, unprogrammed default
   642                           ;	Write Protection bit
   643                           ;	WRT3 = 0x1, unprogrammed default
   644   30000A                     	org	3145738
   645   30000A  0F                 	db	15
   646                           
   647                           ;Config register CONFIG6H @ 0x30000B
   648                           ;	unspecified, using default values
   649                           ;	Configuration Register Write Protection bit
   650                           ;	WRTC = 0x1, unprogrammed default
   651                           ;	Boot Block Write Protection bit
   652                           ;	WRTB = 0x1, unprogrammed default
   653                           ;	Data EEPROM Write Protection bit
   654                           ;	WRTD = 0x1, unprogrammed default
   655   30000B                     	org	3145739
   656   30000B  E0                 	db	224
   657                           
   658                           ;Config register CONFIG7L @ 0x30000C
   659                           ;	unspecified, using default values
   660                           ;	Table Read Protection bit
   661                           ;	EBTR0 = 0x1, unprogrammed default
   662                           ;	Table Read Protection bit
   663                           ;	EBTR1 = 0x1, unprogrammed default
   664                           ;	Table Read Protection bit
   665                           ;	EBTR2 = 0x1, unprogrammed default
   666                           ;	Table Read Protection bit
   667                           ;	EBTR3 = 0x1, unprogrammed default
   668   30000C                     	org	3145740
   669   30000C  0F                 	db	15
   670                           
   671                           ;Config register CONFIG7H @ 0x30000D
   672                           ;	unspecified, using default values
   673                           ;	Boot Block Table Read Protection bit
   674                           ;	EBTRB = 0x1, unprogrammed default
   675   30000D                     	org	3145741
   676   30000D  40                 	db	64
   677                           tosu	equ	0xFFF
   678                           tosh	equ	0xFFE
   679                           tosl	equ	0xFFD
   680                           stkptr	equ	0xFFC
   681                           pclatu	equ	0xFFB
   682                           pclath	equ	0xFFA
   683                           pcl	equ	0xFF9
   684                           tblptru	equ	0xFF8
   685                           tblptrh	equ	0xFF7
   686                           tblptrl	equ	0xFF6
   687                           tablat	equ	0xFF5
   688                           prodh	equ	0xFF4
   689                           prodl	equ	0xFF3
   690                           indf0	equ	0xFEF
   691                           postinc0	equ	0xFEE
   692                           postdec0	equ	0xFED
   693                           preinc0	equ	0xFEC
   694                           plusw0	equ	0xFEB
   695                           fsr0h	equ	0xFEA
   696                           fsr0l	equ	0xFE9
   697                           wreg	equ	0xFE8
   698                           indf1	equ	0xFE7
   699                           postinc1	equ	0xFE6
   700                           postdec1	equ	0xFE5
   701                           preinc1	equ	0xFE4
   702                           plusw1	equ	0xFE3
   703                           fsr1h	equ	0xFE2
   704                           fsr1l	equ	0xFE1
   705                           bsr	equ	0xFE0
   706                           indf2	equ	0xFDF
   707                           postinc2	equ	0xFDE
   708                           postdec2	equ	0xFDD
   709                           preinc2	equ	0xFDC
   710                           plusw2	equ	0xFDB
   711                           fsr2h	equ	0xFDA
   712                           fsr2l	equ	0xFD9
   713                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     14      14
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0     498
                                              8 COMRAM     6     6      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _ISR (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E      E       E       1       11.1%
STACK                0      0       0       2        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_1hh        2      0       0      20        0.0%
BITBIGSFR_1hl        B      0       0      21        0.0%
BITBIGSFR_1lh       20      0       0      22        0.0%
BITBIGSFRhhh         6      0       0      23        0.0%
BITBIGSFRhhl         2      0       0      24        0.0%
BITBIGSFRhl          5      0       0      25        0.0%
BITBIGSFRl           C      0       0      26        0.0%
ABS                  0      0       0      27        0.0%
BIGRAM             5F3      0       0      28        0.0%
DATA                 0      0       0      29        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Dec 07 21:08:28 2022

                     l36 0116             ___awdiv@sign 0006                      l720 00D6  
                    l800 0158                      l730 010A                      l722 00E6  
                    l740 0114                      l732 010C                      l724 00E8  
                    l734 010E                      l726 0106                      l736 0110  
                    l728 0108                      l738 0112                      l798 0154  
                    _ISR 0008                     ?_ISR 0001                     _LATD 000F8C  
                   i2l33 0150                     _main 0154                     _init 00D6  
                   btemp 000F                     start 000E             ___param_bank 000000  
                  ??_ISR 0009                    ?_main 0001                    ?_init 0001  
        __end_of___awdiv 00D6          ___awdiv@divisor 0003                    i2l278 00D4  
                  i2l810 0030                    i2l802 0012                    i2l820 0064  
                  i2l812 003E                    i2l804 0016                    i2l830 009E  
                  i2l822 006C                    i2l814 0046                    i2l806 0024  
                  i2l840 00C4                    i2l832 00A6                    i2l824 0074  
                  i2l816 004A                    i2l808 002C                    i2l842 00CC  
                  i2l834 00A8                    i2l826 0082                    i2l818 0052  
                  i2l850 0148                    i2l836 00AE                    i2l828 0088  
                  i2l852 014C                    i2l838 00B4                    i2l854 014E  
                  i2l846 011A                    i2l848 012C          ___awdiv@counter 0005  
                  _TRISA 000F92                    _TRISD 000F95                    ttemp5 0010  
                  ttemp6 0013                    ttemp7 0017                    status 000FD8  
                  wtemp8 0010          __initialization 0162             __end_of_main 0162  
           __end_of_init 0118                   ??_main 000F                   ??_init 000F  
          __activetblptr 000000                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0001                   i2u7_40 0024                   i2u7_41 0020  
                 i2u8_40 003E                   i2u8_41 003A                   i2u9_40 0064  
                 i2u9_41 0060                ??___awdiv 0005         ___awdiv@quotient 0007  
                 isa$std 000001               __accesstop 0080  __end_of__initialization 0162  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  i2u10_40 0082  
                i2u10_41 007E                  i2u11_40 009E                  i2u11_41 009A  
                i2u12_40 00C4                  i2u12_41 00C0                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 0012                  __pcinit 0162  
                __ramtop 0600                  __ptext0 0154                  __ptext1 00D6  
                __ptext3 0012           __pintcode_body 0118     end_of_initialization 0162  
                int_func 0118      start_initialization 0162              __end_of_ISR 0154  
             ISR@bitShow 000D                 ISR@input 000B                __pintcode 0008  
               ?___awdiv 0001                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
               _PIR1bits 000F9E                 _RCONbits 000FD0               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 000000                 int$flags 000F  
             _INTCONbits 000FF2                 intlevel2 0000               _OSCCONbits 000FD3  
